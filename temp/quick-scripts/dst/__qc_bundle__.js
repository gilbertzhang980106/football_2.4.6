
                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/__qc_index__.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}
require('./assets/Common/src/AudioConfig');
require('./assets/Common/src/AudioManage');
require('./assets/Common/src/BasePanel');
require('./assets/Common/src/Bullt');
require('./assets/Common/src/DznSocket');
require('./assets/Common/src/EventManager');
require('./assets/Common/src/Expand');
require('./assets/Common/src/GameSocket');
require('./assets/Common/src/ServerRoom');
require('./assets/Common/src/StandardButton');
require('./assets/Common/src/tool');
require('./assets/Script/component/gameData');
require('./assets/Script/component/heartBeat');
require('./assets/Script/component/mainLobby');
require('./assets/Script/component/netCom');
require('./assets/Script/component/playerInfo');
require('./assets/Script/component/popup');
require('./assets/Script/component/reconnect');
require('./assets/Script/component/serverTime');
require('./assets/Script/component/tishi');
require('./assets/Script/component/toast');
require('./assets/Script/component/utils');
require('./assets/Script/hall/events/HallNotification');
require('./assets/Script/hall/service/GameHttpService');
require('./assets/Script/hall/service/HallFacase');
require('./assets/Script/hall/service/HttpService');
require('./assets/Script/hall/utils/HallAlert');
require('./assets/Script/lightUI/LightUI');
require('./assets/Script/lightUI/components/LButton');
require('./assets/Script/lightUI/components/LComponent');
require('./assets/Script/lightUI/components/LListAbs');
require('./assets/Script/lightUI/components/LTabBar');
require('./assets/Script/lightUI/components/LViewStack');
require('./assets/Script/lightUI/components/LWindow');
require('./assets/Script/lightUI/components/MountDataAbs');
require('./assets/Script/lightUI/components/alert/LAlert');
require('./assets/Script/lightUI/components/alert/LAlertBox');
require('./assets/Script/lightUI/components/llist/ItemRender');
require('./assets/Script/lightUI/components/llist/LList');
require('./assets/Script/lightUI/components/newlist/listItemRender');
require('./assets/Script/lightUI/components/newlist/newlist');
require('./assets/Script/lightUI/events/LEvent');
require('./assets/Script/lightUI/logging/LogLevel');
require('./assets/Script/lightUI/logging/Logger');
require('./assets/Script/lightUI/managers/LayerManager');
require('./assets/Script/lightUI/managers/MessageBlock');
require('./assets/Script/lightUI/managers/PopupManager');
require('./assets/Script/lightUI/managers/TaskAbs');
require('./assets/Script/lightUI/managers/TaskManager');
require('./assets/Script/lightUI/utils/CocosTool');
require('./assets/Script/lightUI/utils/Dictionary');
require('./assets/Script/lightUI/utils/Draw');
require('./assets/Script/lightUI/utils/Handler');
require('./assets/Script/lightUI/utils/MyMath');

                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/config.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'abefaSzEJNJ3Y+7UKl94lUE', 'config');
// config.js

"use strict";

function GetAppConfig() {
  return {
    wsUrl: "",
    //ws地址
    apiAdrress: "http://devhdzx.leyuqx5.com/api/v1/Star/"
  };
}

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcY29uZmlnLmpzIl0sIm5hbWVzIjpbIkdldEFwcENvbmZpZyIsIndzVXJsIiwiYXBpQWRycmVzcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxTQUFTQSxZQUFULEdBQXdCO0FBQ3BCLFNBQU87QUFDSEMsSUFBQUEsS0FBSyxFQUFFLEVBREo7QUFDTztBQUNWQyxJQUFBQSxVQUFVLEVBQUU7QUFGVCxHQUFQO0FBSUgiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIEdldEFwcENvbmZpZygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgd3NVcmw6IFwiXCIsLy93c+WcsOWdgFxyXG4gICAgICAgIGFwaUFkcnJlc3M6IFwiaHR0cDovL2RldmhkengubGV5dXF4NS5jb20vYXBpL3YxL1N0YXIvXCJcclxuICAgIH07XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/Bullt.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e9610Qb9y5E16yqm+p6SFlQ', 'Bullt');
// Common/src/Bullt.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var gameData_1 = require("../../Script/component/gameData");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var Bullt = /** @class */ (function (_super) {
    __extends(Bullt, _super);
    function Bullt() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bulletinLabel = null;
        _this.maskNode = null;
        _this.bg = null;
        _this.m_speed = 100;
        _this.m_xLeftEnd = 0;
        _this.m_xRightEnd = 0;
        _this.m_ypos = 0;
        _this.moving = false;
        _this.m_direction = 2;
        /** 循环播放list*/
        _this.txtList = [];
        /** 只播放一次list*/
        _this.onceList = [];
        return _this;
    }
    Bullt_1 = Bullt;
    Bullt.prototype.start = function () {
        this.noticeId = -1;
        this.onceId = 0;
        var self = this;
        this.moving = false;
        this.bulletinLabel.string = "";
        this.node.active = false;
        var marqueeData = gameData_1.gameData.roomData.MARQUEE;
        if (marqueeData && marqueeData.length > 0)
            this.setMarFactory(marqueeData);
    };
    Bullt.prototype.onLoad = function () {
        Bullt_1.instance = this;
    };
    Bullt.prototype.update = function (dt) {
        // if (this.m_direction == Direction.LEFT_TO_RIGHT) { 从左往右移动注释
        //     let contentSize = this.bulletinLabel.node.getContentSize();
        //     if (this.bulletinLabel.node.x >= this.m_xRightEnd) {
        //         this.bulletinLabel.node.x = this.m_xLeftEnd - contentSize.width;
        //         this.moving = false;
        //         this.upBulletin();
        //     } else {
        //         this.bulletinLabel.node.x += this.m_speed * dt;
        //         this.moving = true;
        //     }
        // } else {
        var contentSize = this.bulletinLabel.node.getContentSize();
        if (this.bulletinLabel.node.x <= this.m_xLeftEnd - contentSize.width) {
            this.bulletinLabel.node.x = this.m_xRightEnd;
            this.moving = false;
            var marqueeData = gameData_1.gameData.roomData.MARQUEE;
            if (marqueeData && marqueeData.length > 0)
                this.setMarFactory(marqueeData);
            else
                this.upBulletin();
        }
        else {
            this.bulletinLabel.node.x -= this.m_speed * dt;
            this.moving = true;
        }
        // }
    };
    Bullt.prototype.setMarFactory = function (notice) {
        if (this.txtList == null || this.txtList.length > 1000)
            this.txtList = [];
        if (this.onceList == null || this.onceList.length > 1000)
            this.onceList = [];
        var fover = [];
        for (var i = 0; i < notice.length; i++) {
            // if (notice[i].marqueeType == "FOREVER")
            //     fover.push(notice[i]);
            // else
            this.onceList.push(notice[i]);
        }
        this.txtList = fover;
        this.node.active = true;
        gameData_1.gameData.roomData.MARQUEE = [];
        if (!this.moving)
            this.upBulletin();
    };
    /** 更新公告栏 */
    Bullt.prototype.upBulletin = function () {
        var s = this;
        //从消息中获取通告列表
        if (s.onceList && s.onceList.length > 0 && s.onceId < s.onceList.length) {
            var notice = s.onceList[s.onceId].content;
            if (notice)
                s.setBulletin(notice);
            s.onceId++;
            console.log("oncelist:" + s.onceList.length + "  index:" + s.onceId);
        }
        else {
            if (s.txtList == null || s.txtList.length < 1) {
                s.bulletinLabel.string = "";
                s.node.active = false;
                this.moving = false;
                return;
            }
            ;
            s.noticeId++;
            if (s.noticeId < 0 || s.noticeId >= s.txtList.length) {
                s.noticeId = 0;
                if (s.txtList.length < 1) {
                    s.bulletinLabel.string = "";
                    s.node.active = false;
                    this.moving = false;
                    return;
                }
            }
            var txt = s.txtList[s.noticeId].content;
            if (txt) {
                s.setBulletin(txt);
            }
        }
    };
    Bullt.prototype.setBulletin = function (text) {
        this.bulletinLabel.string = text;
        this.m_xRightEnd = this.node.x + this.maskNode.node.width * this.maskNode.node.anchorX;
        this.m_xLeftEnd = this.node.x - this.maskNode.node.width * this.maskNode.node.anchorX;
        var contentSize = this.bulletinLabel.node.getContentSize();
        var xPos = 0;
        if (this.m_direction === Direction.LEFT_TO_RIGHT) {
            xPos = this.m_xLeftEnd - contentSize.width;
        }
        else
            xPos = this.m_xRightEnd;
        this.bulletinLabel.node.x = xPos;
        this.bulletinLabel.node.y = this.m_ypos;
    };
    var Bullt_1;
    Bullt.instance = null;
    __decorate([
        property(cc.RichText)
    ], Bullt.prototype, "bulletinLabel", void 0);
    __decorate([
        property(cc.Mask)
    ], Bullt.prototype, "maskNode", void 0);
    __decorate([
        property(cc.Node)
    ], Bullt.prototype, "bg", void 0);
    __decorate([
        property({
            tooltip: "每秒移动像素"
        })
    ], Bullt.prototype, "m_speed", void 0);
    __decorate([
        property({
            tooltip: "文字滚动方向，1从左到右，2从右到左"
        })
    ], Bullt.prototype, "m_direction", void 0);
    Bullt = Bullt_1 = __decorate([
        ccclass
    ], Bullt);
    return Bullt;
}(cc.Component));
exports.default = Bullt;
var Direction;
(function (Direction) {
    Direction[Direction["LEFT_TO_RIGHT"] = 1] = "LEFT_TO_RIGHT";
    Direction[Direction["RIGHT_TO_LEFT"] = 2] = "RIGHT_TO_LEFT";
})(Direction || (Direction = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/popup.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0732bbHRAVJxp2H0+pYanz2', 'popup');
// Script/component/popup.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var toast_1 = require("./toast");
var tishi_1 = require("./tishi");
var utils_1 = require("./utils");
var gameData_1 = require("./gameData");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var popup = /** @class */ (function (_super) {
    __extends(popup, _super);
    function popup() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.toastPrefab = null;
        _this.tishitPrefab = null;
        _this.callBack = null;
        _this.tishiNode = null;
        _this.chat1node = null;
        _this.chat2node = null;
        return _this;
    }
    popup_1 = popup;
    popup.prototype.onLoad = function () {
        popup_1.instance = this;
    };
    popup.prototype.toast = function (str) {
        var node = cc.instantiate(this.toastPrefab);
        node.parent = cc.find('Canvas');
        var t = node.getComponent(toast_1.default);
        t.setString(str);
        t.play("toastShow", function () {
            node.removeFromParent();
        });
    };
    popup.prototype.toastLongTime = function (str, playLongTime) {
        var node = cc.instantiate(this.toastPrefab);
        node.parent = cc.find('Canvas');
        var t = node.getComponent(toast_1.default);
        t.setString(str);
        t.playLongTime("toastShow");
        if (!playLongTime) {
            t.scheduleOnce(function () {
                node.removeFromParent();
            }, 1);
        }
    };
    popup.prototype.openTishi = function (str) {
        this.tishiNode = cc.instantiate(this.tishitPrefab);
        this.tishiNode.parent = cc.find('Canvas');
        var t = this.tishiNode.getComponent(tishi_1.default);
        t.setString(str);
        t.isOpen = true;
    };
    popup.prototype.closeTishi = function () {
        if (this.tishiNode)
            this.tishiNode.removeFromParent();
    };
    popup.prototype.chat1 = function () {
        if (this.chat2node) {
            cc.find('Canvas').removeChild(this.chat2node);
            this.chat1node = null;
        }
        // this.chat1node = cc.instantiate(this.chat1Prefab);
        // this.chat1node.parent = cc.find('Canvas');
        utils_1.utils.clickGetPrefab.clickGetPrefab(gameData_1.gameData.PreloadPrefab.chat1);
        // let url = gameData.PreloadPrefab.chat1//"prefabs/chat1";
        // utils.getPrefab(url);
    };
    popup.prototype.chat2 = function () {
        if (this.chat1node) {
            cc.find('Canvas').removeChild(this.chat1node);
            this.chat1node = null;
        }
        // this.chat2node = cc.instantiate(this.chat2Prefab)
        // this.chat2node.parent = cc.find('Canvas');
        utils_1.utils.clickGetPrefab.clickGetPrefab(gameData_1.gameData.PreloadPrefab.chat2);
        // let url = gameData.PreloadPrefab.chat2;//"prefabs/chat2";
        // utils.getPrefab(url);
    };
    var popup_1;
    popup.instance = null;
    __decorate([
        property(cc.Prefab)
    ], popup.prototype, "toastPrefab", void 0);
    __decorate([
        property(cc.Prefab)
    ], popup.prototype, "tishitPrefab", void 0);
    popup = popup_1 = __decorate([
        ccclass
    ], popup);
    return popup;
}(cc.Component));
exports.default = popup;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxjb21wb25lbnRcXHBvcHVwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlDQUEyQjtBQUMzQixpQ0FBMkI7QUFDM0IsaUNBQWdDO0FBQ2hDLHVDQUFzQztBQUVoQyxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUFtQyx5QkFBWTtJQUEvQztRQUFBLHFFQW9GQztRQS9FRyxpQkFBVyxHQUFjLElBQUksQ0FBQztRQUc5QixrQkFBWSxHQUFjLElBQUksQ0FBQztRQUUvQixjQUFRLEdBQWEsSUFBSSxDQUFDO1FBQ2xCLGVBQVMsR0FBRyxJQUFJLENBQUM7UUFFakIsZUFBUyxHQUFZLElBQUksQ0FBQztRQUMxQixlQUFTLEdBQVksSUFBSSxDQUFDOztJQXNFdEMsQ0FBQztjQXBGb0IsS0FBSztJQWV0QixzQkFBTSxHQUFOO1FBQ0ksT0FBSyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDMUIsQ0FBQztJQUlELHFCQUFLLEdBQUwsVUFBTSxHQUFXO1FBQ2IsSUFBSSxJQUFJLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDNUMsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2hDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsZUFBSyxDQUFDLENBQUM7UUFDakMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNqQixDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNoQixJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUM1QixDQUFDLENBQUMsQ0FBQTtJQUNOLENBQUM7SUFFRCw2QkFBYSxHQUFiLFVBQWMsR0FBVyxFQUFFLFlBQXFCO1FBQzVDLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQzVDLElBQUksQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNoQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGVBQUssQ0FBQyxDQUFDO1FBQ2pDLENBQUMsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDakIsQ0FBQyxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUMzQixJQUFHLENBQUMsWUFBWSxFQUFDO1lBQ2IsQ0FBQyxDQUFDLFlBQVksQ0FBQztnQkFDWCxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztZQUM1QixDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUE7U0FDUjtJQUNMLENBQUM7SUFFRCx5QkFBUyxHQUFULFVBQVUsR0FBVztRQUNqQixJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsZUFBSyxDQUFDLENBQUM7UUFDM0MsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNqQixDQUFDLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztJQUNwQixDQUFDO0lBRUQsMEJBQVUsR0FBVjtRQUNJLElBQUksSUFBSSxDQUFDLFNBQVM7WUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDMUQsQ0FBQztJQUVELHFCQUFLLEdBQUw7UUFDSSxJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDaEIsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQzlDLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1NBQ3pCO1FBRUQscURBQXFEO1FBQ3JELDZDQUE2QztRQUM3QyxhQUFLLENBQUMsY0FBYyxDQUFDLGNBQWMsQ0FBQyxtQkFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsRSwyREFBMkQ7UUFDM0Qsd0JBQXdCO0lBQzVCLENBQUM7SUFFRCxxQkFBSyxHQUFMO1FBQ0ksSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2hCLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUM5QyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztTQUN6QjtRQUVELG9EQUFvRDtRQUNwRCw2Q0FBNkM7UUFDN0MsYUFBSyxDQUFDLGNBQWMsQ0FBQyxjQUFjLENBQUMsbUJBQVEsQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbEUsNERBQTREO1FBQzVELHdCQUF3QjtJQUU1QixDQUFDOztJQS9FTSxjQUFRLEdBQVUsSUFBSSxDQUFDO0lBRzlCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7OENBQ1U7SUFHOUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzsrQ0FDVztJQVJkLEtBQUs7UUFEekIsT0FBTztPQUNhLEtBQUssQ0FvRnpCO0lBQUQsWUFBQztDQXBGRCxBQW9GQyxDQXBGa0MsRUFBRSxDQUFDLFNBQVMsR0FvRjlDO2tCQXBGb0IsS0FBSyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0b2FzdCBmcm9tIFwiLi90b2FzdFwiXHJcbmltcG9ydCB0aXNoaSBmcm9tIFwiLi90aXNoaVwiXHJcbmltcG9ydCB7IHV0aWxzIH0gZnJvbSBcIi4vdXRpbHNcIjtcclxuaW1wb3J0IHsgZ2FtZURhdGEgfSBmcm9tIFwiLi9nYW1lRGF0YVwiO1xyXG5cclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHBvcHVwIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuXHJcbiAgICBzdGF0aWMgaW5zdGFuY2U6IHBvcHVwID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuUHJlZmFiKVxyXG4gICAgdG9hc3RQcmVmYWI6IGNjLlByZWZhYiA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLlByZWZhYilcclxuICAgIHRpc2hpdFByZWZhYjogY2MuUHJlZmFiID0gbnVsbDtcclxuXHJcbiAgICBjYWxsQmFjazogRnVuY3Rpb24gPSBudWxsO1xyXG4gICAgcHJpdmF0ZSB0aXNoaU5vZGUgPSBudWxsO1xyXG5cclxuICAgIHByaXZhdGUgY2hhdDFub2RlOiBjYy5Ob2RlID0gbnVsbDtcclxuICAgIHByaXZhdGUgY2hhdDJub2RlOiBjYy5Ob2RlID0gbnVsbDtcclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICBwb3B1cC5pbnN0YW5jZSA9IHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgXHJcblxyXG4gICAgdG9hc3Qoc3RyOiBzdHJpbmcpIHtcclxuICAgICAgICBsZXQgbm9kZSA9IGNjLmluc3RhbnRpYXRlKHRoaXMudG9hc3RQcmVmYWIpO1xyXG4gICAgICAgIG5vZGUucGFyZW50ID0gY2MuZmluZCgnQ2FudmFzJyk7XHJcbiAgICAgICAgbGV0IHQgPSBub2RlLmdldENvbXBvbmVudCh0b2FzdCk7XHJcbiAgICAgICAgdC5zZXRTdHJpbmcoc3RyKTtcclxuICAgICAgICB0LnBsYXkoXCJ0b2FzdFNob3dcIiwgKCkgPT4ge1xyXG4gICAgICAgICAgICBub2RlLnJlbW92ZUZyb21QYXJlbnQoKTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHRvYXN0TG9uZ1RpbWUoc3RyOiBzdHJpbmcsIHBsYXlMb25nVGltZTogYm9vbGVhbikge1xyXG4gICAgICAgIGxldCBub2RlID0gY2MuaW5zdGFudGlhdGUodGhpcy50b2FzdFByZWZhYik7XHJcbiAgICAgICAgbm9kZS5wYXJlbnQgPSBjYy5maW5kKCdDYW52YXMnKTtcclxuICAgICAgICBsZXQgdCA9IG5vZGUuZ2V0Q29tcG9uZW50KHRvYXN0KTtcclxuICAgICAgICB0LnNldFN0cmluZyhzdHIpO1xyXG4gICAgICAgIHQucGxheUxvbmdUaW1lKFwidG9hc3RTaG93XCIpXHJcbiAgICAgICAgaWYoIXBsYXlMb25nVGltZSl7XHJcbiAgICAgICAgICAgIHQuc2NoZWR1bGVPbmNlKCgpPT57XHJcbiAgICAgICAgICAgICAgICBub2RlLnJlbW92ZUZyb21QYXJlbnQoKTtcclxuICAgICAgICAgICAgfSwgMSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb3BlblRpc2hpKHN0cjogc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy50aXNoaU5vZGUgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLnRpc2hpdFByZWZhYik7XHJcbiAgICAgICAgdGhpcy50aXNoaU5vZGUucGFyZW50ID0gY2MuZmluZCgnQ2FudmFzJyk7XHJcbiAgICAgICAgbGV0IHQgPSB0aGlzLnRpc2hpTm9kZS5nZXRDb21wb25lbnQodGlzaGkpO1xyXG4gICAgICAgIHQuc2V0U3RyaW5nKHN0cik7XHJcbiAgICAgICAgdC5pc09wZW4gPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlVGlzaGkoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMudGlzaGlOb2RlKSB0aGlzLnRpc2hpTm9kZS5yZW1vdmVGcm9tUGFyZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgY2hhdDEoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY2hhdDJub2RlKSB7XHJcbiAgICAgICAgICAgIGNjLmZpbmQoJ0NhbnZhcycpLnJlbW92ZUNoaWxkKHRoaXMuY2hhdDJub2RlKTtcclxuICAgICAgICAgICAgdGhpcy5jaGF0MW5vZGUgPSBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gdGhpcy5jaGF0MW5vZGUgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmNoYXQxUHJlZmFiKTtcclxuICAgICAgICAvLyB0aGlzLmNoYXQxbm9kZS5wYXJlbnQgPSBjYy5maW5kKCdDYW52YXMnKTtcclxuICAgICAgICB1dGlscy5jbGlja0dldFByZWZhYi5jbGlja0dldFByZWZhYihnYW1lRGF0YS5QcmVsb2FkUHJlZmFiLmNoYXQxKTtcclxuICAgICAgICAvLyBsZXQgdXJsID0gZ2FtZURhdGEuUHJlbG9hZFByZWZhYi5jaGF0MS8vXCJwcmVmYWJzL2NoYXQxXCI7XHJcbiAgICAgICAgLy8gdXRpbHMuZ2V0UHJlZmFiKHVybCk7XHJcbiAgICB9XHJcblxyXG4gICAgY2hhdDIoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuY2hhdDFub2RlKSB7XHJcbiAgICAgICAgICAgIGNjLmZpbmQoJ0NhbnZhcycpLnJlbW92ZUNoaWxkKHRoaXMuY2hhdDFub2RlKTtcclxuICAgICAgICAgICAgdGhpcy5jaGF0MW5vZGUgPSBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gdGhpcy5jaGF0Mm5vZGUgPSBjYy5pbnN0YW50aWF0ZSh0aGlzLmNoYXQyUHJlZmFiKVxyXG4gICAgICAgIC8vIHRoaXMuY2hhdDJub2RlLnBhcmVudCA9IGNjLmZpbmQoJ0NhbnZhcycpO1xyXG4gICAgICAgIHV0aWxzLmNsaWNrR2V0UHJlZmFiLmNsaWNrR2V0UHJlZmFiKGdhbWVEYXRhLlByZWxvYWRQcmVmYWIuY2hhdDIpO1xyXG4gICAgICAgIC8vIGxldCB1cmwgPSBnYW1lRGF0YS5QcmVsb2FkUHJlZmFiLmNoYXQyOy8vXCJwcmVmYWJzL2NoYXQyXCI7XHJcbiAgICAgICAgLy8gdXRpbHMuZ2V0UHJlZmFiKHVybCk7XHJcblxyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/hall/events/HallNotification.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c5e1dDbDZ1MxYJ+GSpLnaAC', 'HallNotification');
// Script/hall/events/HallNotification.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HallNotification = /** @class */ (function () {
    function HallNotification() {
    }
    HallNotification.START_UP = "startUp";
    HallNotification.START_INIT = "START_INIT";
    HallNotification.HALL_QUIT = "HALL_QUIT"; //退出大厅
    HallNotification.GAME_QUIT = "GAME_QUIT"; //退出游戏
    HallNotification.RELOAD_SOCKET = "RELOAD_SOCKET";
    HallNotification.UP_DATE_VERSION = "UP_DATE_VERSION";
    //用户协议
    HallNotification.USER_AGREE_SHOW = "USER_AGREE_SHOW";
    HallNotification.USER_AGREE_HIDE = "USER_AGREE_HIDE";
    //找回密码
    HallNotification.GET_PWD_SHOW = "GET_PWD_SHOW";
    HallNotification.GET_PWD_HIDE = "GET_PWD_HIDE";
    //账号登录
    HallNotification.ACCOUNT_LOGIN_SHOW = "ACCOUNT_LOGIN_SHOW";
    HallNotification.ACCOUNT_LOGIN_HIDE = "ACCOUNT_LOGIN_HIDE";
    //电话登录
    HallNotification.PHONE_LOGIN_SHOW = "PHONE_LOGIN_SHOW";
    HallNotification.PHONE_LOGIN_HIDE = "PHONE_LOGIN_HIDE";
    // 绑定登录
    HallNotification.PHONE_BIND_WECHAT = "PHONE_BIND_WECHAT";
    HallNotification.ACCOUNT_BIND_WECHAT = "ACCOUNT_BIND_WECHAT";
    //加载进度条
    HallNotification.LOADING_SHOW = "loadingShow";
    HallNotification.LOADING_HIDE = "loadingHide";
    //smallLoadin 主要用于http请求时候 锁屏
    HallNotification.SMALL_LOADING_SHOW = "SMALL_LOADING_SHOW";
    HallNotification.SMALL_LOADING_HIDE = "SMALL_LOADING_HIDE";
    //大厅前的加载界面
    HallNotification.LOADING_LAYER_SHOW_BIND = "LOADING_LAYER_SHOW_BIND";
    HallNotification.LOADING_LAYER_HIDE_BIND = "LOADING_LAYER_HIDE_BIND";
    HallNotification.LOADING_LAYER_SHOW = "LOADING_LAYER_SHOW";
    HallNotification.LOADING_LAYER_HIDE = "LOADING_LAYER_HIDE";
    HallNotification.START_PING = "START_PING";
    //游戏大厅
    HallNotification.MAINLAYER_SHOW = "MAINLAYER_SHOW";
    HallNotification.MAINLAYER_HIDE = "MAINLAYER_HIDE";
    HallNotification.MAINLAYER_WEBVIEW = "MAINLAYER_WEBVIEW";
    HallNotification.MIAN_RETURN_LOBBY = "MIAN_RETURN_LOBBY";
    HallNotification.GO_LOBBY_FRESH_BALANCE = "GO_LOBBY_FRESH_BALANCE"; //刷新余额
    //游戏消息界面
    HallNotification.NEWS_VIEW_SHOW = "NEWS_VIEW_SHOW";
    HallNotification.NEWS_VIEW_HIDE = "NEWS_VIEW_HIDE";
    // 跑马灯
    HallNotification.MARQUEE_LOBBY = "MARQUEE_LOBBY";
    //手机绑定
    HallNotification.MOBLILE_VERIFY_SHOW = "MOBLILE_VERIFY_SHOW";
    HallNotification.MOBLILE_VERIFY_HIDE = "MOBLILE_VERIFY_HIDE";
    //用户信息面板
    HallNotification.USERINFO_SHOW = "USERINFO_SHOW";
    HallNotification.USERINFO_HIDE = "USERINFO_HIDE";
    HallNotification.USERINFO_OTHER_SHOW = "USERINFO_OTHER_SHOW";
    HallNotification.USERINFO_OTHER_HIDE = "USERINFO_OTHER_HIDE";
    HallNotification.USERINFO_UPDATE = "USERINFO_UPDATE";
    //遮罩
    HallNotification.CREATEROOMMASK = "CREATEROOMMASK";
    HallNotification.HIDEALLpopupLayer = "HIDEALLpopupLayer"; //清除所有弹窗
    //======================  http  ================
    HallNotification.LOGIN_BY_WECHAT = "LOGIN_BY_WECHAT";
    HallNotification.LOGIN_BY_TEL_REQUEST = "LOGIN_BY_TEL_REQUEST";
    HallNotification.LOGIN_BY_TEL_RESPONSE = "LOGIN_BY_TEL_RESPONSE";
    HallNotification.LOGIN_BY_ACCOUNT_REQUEST = "LOGIN_BY_ACCOUNT_REQUEST";
    HallNotification.LOGIN_BY_ACCOUNT_RESPONSE = "LOGIN_BY_ACCOUNT";
    HallNotification.LOGIN_CHECK_TOKEN = "LOGIN_CHECK_TOKEN";
    HallNotification.LOGIN_VERIFY_TOKEN_REQUEST = "LOGIN_VERIFY_TOKEN_REQUEST"; //校验koken
    HallNotification.LOGIN_VERIFY_TOKEN_RESPONSE = "LOGIN_VERIFY_TOKEN_RESPONSE";
    HallNotification.LOGIN_TEL_RETRIEVE_PWD_REQUEST = "LOGIN_TEL_RETRIEVE_PWD_REQUEST"; //重置密码
    HallNotification.LOGIN_TEL_RETRIEVE_PWD_RESPONSE = "LOGIN_TEL_RETRIEVE_PWD_RESPONSE";
    HallNotification.LOGIN_SEND_VERIFY_CODE_REQUEST = "LOGIN_SEND_VERIFY_CODE_REQUEST"; //发送验证码
    HallNotification.BIND_TEL_REQUEST = "BIND_TEL_REQUEST"; //手机绑定微信
    HallNotification.BIND_TEL_RESPONSE = "BIND_TEL_RESPONSE";
    HallNotification.BIND_ACCOUNT_REQUEST = "BIND_ACCOUNT_REQUEST"; //账号绑定微信
    HallNotification.BIND_ACCOUNT_RESPONSE = "BIND_ACCOUNT_RESPONSE";
    HallNotification.LOGIN_VERIFY_TOKEN_CLEAR = "LOGIN_VERIFY_TOKEN_CLEAR"; //清理TOKEN
    HallNotification.GET_WEBURL = "GET_WEBURL"; //落地页
    HallNotification.GET_WEBURL_REBONS = "GET_WEBURL_REBONS"; //落地页
    HallNotification.GET_KEFU = "GET_KEFU"; //落地页
    HallNotification.GET_tenantId = "GET_tenantId"; //落地页
    HallNotification.GAME_VERSION = "GAME_VERSION"; //版本
    HallNotification.TOKEERROR = "TOKEERROR"; //版本
    HallNotification.GAMELIST = "GAMELIST"; //游戏配置
    //---------------socket --------------------------------
    HallNotification.SOCKET_CONTENT = "SOCKET_CONTENT";
    HallNotification.SOCKET_S_MESSAGE = "SOCKET_S_MESSAGE";
    HallNotification.SOCKET_R_MESSAGE = "SOCKET_R_MESSAGE";
    HallNotification.SOCKET_OPEN = "webClientOnopen";
    HallNotification.SOCKET_INTERVAL = "SOCKET_INTERVAL";
    return HallNotification;
}());
exports.default = HallNotification;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/hall/service/HallFacase.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c4aa689LR1HMKxnrtwP6bUZ', 'HallFacase');
// Script/hall/service/HallFacase.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var HallNotification_1 = require("../events/HallNotification");
/**
 * mvc总入口 作为单例方便任意获取 但需谨慎在业务逻辑中获取此单例
 */
var HallFacade = /** @class */ (function (_super) {
    __extends(HallFacade, _super);
    function HallFacade() {
        var _this = _super.call(this) || this;
        if (HallFacade.instance != null)
            throw Error("请使用getInstance获取单例");
        HallFacade.instance = _this;
        return _this;
    }
    HallFacade.getInstance = function () {
        if (HallFacade.instance == null)
            HallFacade.instance = new HallFacade();
        return HallFacade.instance;
    };
    HallFacade.prototype.sentNotification = function (notiName, body) {
        _super.prototype.sentNotification.call(this, notiName, body);
    };
    HallFacade.prototype.startup = function (node, isReload) {
        if (isReload === void 0) { isReload = false; }
        this.sentNotification(HallNotification_1.default.START_UP, node);
    };
    return HallFacade;
}(com.lightMVC.parrerns.Facade));
exports.default = HallFacade;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxoYWxsXFxzZXJ2aWNlXFxIYWxsRmFjYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLCtEQUEwRDtBQUUxRDs7R0FFRztBQUNIO0lBQXdDLDhCQUE0QjtJQUdoRTtRQUFBLFlBQ0ksaUJBQU8sU0FHVjtRQUZHLElBQUksVUFBVSxDQUFDLFFBQVEsSUFBSSxJQUFJO1lBQUUsTUFBTSxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUNuRSxVQUFVLENBQUMsUUFBUSxHQUFHLEtBQUksQ0FBQzs7SUFDL0IsQ0FBQztJQUVhLHNCQUFXLEdBQXpCO1FBQ0ksSUFBSSxVQUFVLENBQUMsUUFBUSxJQUFJLElBQUk7WUFBRSxVQUFVLENBQUMsUUFBUSxHQUFHLElBQUksVUFBVSxFQUFFLENBQUM7UUFDeEUsT0FBTyxVQUFVLENBQUMsUUFBUSxDQUFDO0lBQy9CLENBQUM7SUFFTSxxQ0FBZ0IsR0FBdkIsVUFBd0IsUUFBZ0IsRUFBRSxJQUFhO1FBQ25ELGlCQUFNLGdCQUFnQixZQUFDLFFBQVEsRUFBQyxJQUFJLENBQUMsQ0FBQztJQUMxQyxDQUFDO0lBRU0sNEJBQU8sR0FBZCxVQUFlLElBQWEsRUFBRSxRQUFzQjtRQUF0Qix5QkFBQSxFQUFBLGdCQUFzQjtRQUNoRCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsMEJBQWdCLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFDTCxpQkFBQztBQUFELENBckJBLEFBcUJDLENBckJ1QyxHQUFHLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBcUJuRSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBIYWxsTm90aWZpY2F0aW9uIGZyb20gXCIuLi9ldmVudHMvSGFsbE5vdGlmaWNhdGlvblwiO1xyXG5cclxuLyoqXHJcbiAqIG12Y+aAu+WFpeWPoyDkvZzkuLrljZXkvovmlrnkvr/ku7vmhI/ojrflj5Yg5L2G6ZyA6LCo5oWO5Zyo5Lia5Yqh6YC76L6R5Lit6I635Y+W5q2k5Y2V5L6LXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBIYWxsRmFjYWRlIGV4dGVuZHMgY29tLmxpZ2h0TVZDLnBhcnJlcm5zLkZhY2FkZXtcclxuICAgIHByb3RlY3RlZCBzdGF0aWMgaW5zdGFuY2U6SGFsbEZhY2FkZTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgaWYgKEhhbGxGYWNhZGUuaW5zdGFuY2UgIT0gbnVsbCkgdGhyb3cgRXJyb3IoXCLor7fkvb/nlKhnZXRJbnN0YW5jZeiOt+WPluWNleS+i1wiKTtcclxuICAgICAgICBIYWxsRmFjYWRlLmluc3RhbmNlID0gdGhpcztcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldEluc3RhbmNlKCk6IEhhbGxGYWNhZGUge1xyXG4gICAgICAgIGlmIChIYWxsRmFjYWRlLmluc3RhbmNlID09IG51bGwpIEhhbGxGYWNhZGUuaW5zdGFuY2UgPSBuZXcgSGFsbEZhY2FkZSgpO1xyXG4gICAgICAgIHJldHVybiBIYWxsRmFjYWRlLmluc3RhbmNlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZW50Tm90aWZpY2F0aW9uKG5vdGlOYW1lOiBzdHJpbmcsIGJvZHk/OiBPYmplY3Qpe1xyXG4gICAgICAgIHN1cGVyLnNlbnROb3RpZmljYXRpb24obm90aU5hbWUsYm9keSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXJ0dXAobm9kZTogY2MuTm9kZSwgaXNSZWxvYWQ6Ym9vbGVhbj1mYWxzZSkge1xyXG4gICAgICAgIHRoaXMuc2VudE5vdGlmaWNhdGlvbihIYWxsTm90aWZpY2F0aW9uLlNUQVJUX1VQLCBub2RlKTtcclxuICAgIH1cclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/hall/utils/HallAlert.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '01b78Ei+dNL6IZ8mGPGKUxs', 'HallAlert');
// Script/hall/utils/HallAlert.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LAlert_1 = require("../../lightUI/components/alert/LAlert");
var LightUI_1 = require("../../lightUI/LightUI");
var HallAlert = /** @class */ (function () {
    function HallAlert() {
    }
    //最小的2秒自动关闭的提示条
    HallAlert.SmallAlert = function (msg) {
        if (msg == null)
            return;
        LAlert_1.default.show(msg, null, "hall/common/PopMsg.prefab", null, null, null, 2000);
    };
    //只有确定按钮的提示框
    HallAlert.AlertOk = function (msg, closeHandler, data) {
        if (data === void 0) { data = null; }
        LAlert_1.default.show(msg, null, "hall/common/DialogOk.prefab", LightUI_1.default.layerManager.popupLayer, closeHandler, data);
    };
    return HallAlert;
}());
exports.default = HallAlert;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxoYWxsXFx1dGlsc1xcSGFsbEFsZXJ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsZ0VBQTJEO0FBQzNELGlEQUE0QztBQUU1QztJQUFBO0lBV0EsQ0FBQztJQVZHLGVBQWU7SUFDRCxvQkFBVSxHQUF4QixVQUF5QixHQUFVO1FBQy9CLElBQUcsR0FBRyxJQUFJLElBQUk7WUFBRSxPQUFPO1FBQ3ZCLGdCQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBQyxJQUFJLEVBQUMsMkJBQTJCLEVBQUMsSUFBSSxFQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUUsQ0FBQztJQUVELFlBQVk7SUFDRSxpQkFBTyxHQUFyQixVQUFzQixHQUFVLEVBQUMsWUFBcUIsRUFBQyxJQUFlO1FBQWYscUJBQUEsRUFBQSxXQUFlO1FBQ2xFLGdCQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBQyxJQUFJLEVBQUMsNkJBQTZCLEVBQUMsaUJBQU8sQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFDLFlBQVksRUFBQyxJQUFJLENBQUMsQ0FBQztJQUMxRyxDQUFDO0lBQ0wsZ0JBQUM7QUFBRCxDQVhBLEFBV0MsSUFBQSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMQWxlcnQgZnJvbSBcIi4uLy4uL2xpZ2h0VUkvY29tcG9uZW50cy9hbGVydC9MQWxlcnRcIjtcclxuaW1wb3J0IExpZ2h0VUkgZnJvbSBcIi4uLy4uL2xpZ2h0VUkvTGlnaHRVSVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGFsbEFsZXJ0e1xyXG4gICAgLy/mnIDlsI/nmoQy56eS6Ieq5Yqo5YWz6Zet55qE5o+Q56S65p2hXHJcbiAgICBwdWJsaWMgc3RhdGljIFNtYWxsQWxlcnQobXNnOnN0cmluZyl7XHJcbiAgICAgICAgaWYobXNnID09IG51bGwpIHJldHVybjtcclxuICAgICAgICBMQWxlcnQuc2hvdyhtc2csbnVsbCxcImhhbGwvY29tbW9uL1BvcE1zZy5wcmVmYWJcIixudWxsLG51bGwsbnVsbCwyMDAwKTtcclxuICAgIH1cclxuXHJcbiAgICAvL+WPquacieehruWumuaMiemSrueahOaPkOekuuahhlxyXG4gICAgcHVibGljIHN0YXRpYyBBbGVydE9rKG1zZzpzdHJpbmcsY2xvc2VIYW5kbGVyOkZ1bmN0aW9uLGRhdGE6YW55ID0gbnVsbCl7XHJcbiAgICAgICAgTEFsZXJ0LnNob3cobXNnLG51bGwsXCJoYWxsL2NvbW1vbi9EaWFsb2dPay5wcmVmYWJcIixMaWdodFVJLmxheWVyTWFuYWdlci5wb3B1cExheWVyLGNsb3NlSGFuZGxlcixkYXRhKTtcclxuICAgIH1cclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/alert/LAlert.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '444b2uKT5JK261tPH78CYU8', 'LAlert');
// Script/lightUI/components/alert/LAlert.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../../events/LEvent");
var LightUI_1 = require("../../LightUI");
var LAlertBox_1 = require("./LAlertBox");
var LAlert = /** @class */ (function () {
    function LAlert() {
    }
    LAlert.show = function (message, tile, windowSource, parent, closeHandler, data, delayRemove) {
        if (delayRemove === void 0) { delayRemove = 0; }
        //从对象池中获取
        var window = this.getWindow(windowSource);
        var pool = LAlert.pools[windowSource];
        window.data = data;
        // let winNode:LWindow = window.getLWindow();
        window.title = tile;
        window.msg = message;
        // winNode.updateView();
        window.width = LightUI_1.default.root.width;
        window.height = LightUI_1.default.root.height;
        LightUI_1.default.popupManager.addPopUp(window, LightUI_1.default.layerManager.popupLayer);
        var removeFun = function (ww) {
            LightUI_1.default.popupManager.removePopUp(ww);
        };
        if (delayRemove > 0) {
            setTimeout(removeFun.bind(this), delayRemove, window);
        }
        window.once(LEvent_1.default.CLOSE, function (e) {
            if (window.parent) {
                LightUI_1.default.popupManager.removePopUp(window);
            }
            closeHandler && closeHandler(e.data);
            //归还对象池
            pool.put(window);
        });
        return window;
    };
    LAlert.getWindow = function (url) {
        var pool = LAlert.pools[url];
        if (pool == null) {
            pool = new cc.NodePool();
            LAlert.pools[url] = pool;
        }
        if (pool.size() == 0) {
            return new LAlertBox_1.default(url);
        }
        else {
            return pool.get();
        }
    };
    LAlert.delayRemoveDie = {};
    LAlert.pools = {};
    return LAlert;
}());
exports.default = LAlert;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxjb21wb25lbnRzXFxhbGVydFxcTEFsZXJ0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOENBQXlDO0FBQ3pDLHlDQUFvQztBQUVwQyx5Q0FBb0M7QUFDcEM7SUFBQTtJQXlEQSxDQUFDO0lBcERpQixXQUFJLEdBQWxCLFVBQW1CLE9BQWMsRUFBQyxJQUFXLEVBQ3hDLFlBQW1CLEVBQUMsTUFBYyxFQUFDLFlBQXFCLEVBQUMsSUFBSSxFQUFDLFdBQXNCO1FBQXRCLDRCQUFBLEVBQUEsZUFBc0I7UUFFckYsU0FBUztRQUNULElBQUksTUFBTSxHQUFhLElBQUksQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDcEQsSUFBSSxJQUFJLEdBQWUsTUFBTSxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUVsRCxNQUFNLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNuQiw2Q0FBNkM7UUFDN0MsTUFBTSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7UUFDcEIsTUFBTSxDQUFDLEdBQUcsR0FBRyxPQUFPLENBQUM7UUFDckIsd0JBQXdCO1FBQ3hCLE1BQU0sQ0FBQyxLQUFLLEdBQUcsaUJBQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ2xDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsaUJBQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3BDLGlCQUFPLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUMsaUJBQU8sQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLENBQUM7UUFHdEUsSUFBSSxTQUFTLEdBQVksVUFBQyxFQUFVO1lBQ2hDLGlCQUFPLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6QyxDQUFDLENBQUM7UUFHRixJQUFHLFdBQVcsR0FBRyxDQUFDLEVBQUM7WUFDZixVQUFVLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxXQUFXLEVBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEQ7UUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFNLENBQUMsS0FBSyxFQUFDLFVBQUMsQ0FBUTtZQUM5QixJQUFHLE1BQU0sQ0FBQyxNQUFNLEVBQ2hCO2dCQUNJLGlCQUFPLENBQUMsWUFBWSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUM1QztZQUNELFlBQVksSUFBSSxZQUFZLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3JDLE9BQU87WUFDUCxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3JCLENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUVjLGdCQUFTLEdBQXhCLFVBQXlCLEdBQVU7UUFDL0IsSUFBSSxJQUFJLEdBQWUsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMxQyxJQUFHLElBQUksSUFBSSxJQUFJLEVBQUM7WUFDWixJQUFJLEdBQUcsSUFBSSxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDekIsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUM7U0FDNUI7UUFFRCxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEVBQUU7WUFDakIsT0FBUSxJQUFJLG1CQUFTLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNILE9BQU8sSUFBSSxDQUFDLEdBQUcsRUFBZSxDQUFDO1NBQ2xDO0lBQ0wsQ0FBQztJQXZEYyxxQkFBYyxHQUFXLEVBQUUsQ0FBQztJQUU1QixZQUFLLEdBQVUsRUFBRSxDQUFDO0lBc0RyQyxhQUFDO0NBekRELEFBeURDLElBQUE7a0JBekRvQixNQUFNIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExFdmVudCBmcm9tIFwiLi4vLi4vZXZlbnRzL0xFdmVudFwiO1xyXG5pbXBvcnQgTGlnaHRVSSBmcm9tIFwiLi4vLi4vTGlnaHRVSVwiO1xyXG5pbXBvcnQgTFdpbmRvdyBmcm9tIFwiLi4vTFdpbmRvd1wiO1xyXG5pbXBvcnQgTEFsZXJ0Qm94IGZyb20gXCIuL0xBbGVydEJveFwiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMQWxlcnR7XHJcbiAgICBwcml2YXRlIHN0YXRpYyBkZWxheVJlbW92ZURpZTogT2JqZWN0ID0ge307XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgcG9vbHM6b2JqZWN0ID0ge307XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzaG93KG1lc3NhZ2U6c3RyaW5nLHRpbGU6c3RyaW5nXHJcbiAgICAgICAgLHdpbmRvd1NvdXJjZTpzdHJpbmcscGFyZW50OmNjLk5vZGUsY2xvc2VIYW5kbGVyOkZ1bmN0aW9uLGRhdGEsZGVsYXlSZW1vdmU6bnVtYmVyID0gMCl7XHJcblxyXG4gICAgICAgIC8v5LuO5a+56LGh5rGg5Lit6I635Y+WXHJcbiAgICAgICAgbGV0IHdpbmRvdzpMQWxlcnRCb3ggPSB0aGlzLmdldFdpbmRvdyh3aW5kb3dTb3VyY2UpO1xyXG4gICAgICAgIGxldCBwb29sOmNjLk5vZGVQb29sID0gTEFsZXJ0LnBvb2xzW3dpbmRvd1NvdXJjZV07XHJcblxyXG4gICAgICAgIHdpbmRvdy5kYXRhID0gZGF0YTtcclxuICAgICAgICAvLyBsZXQgd2luTm9kZTpMV2luZG93ID0gd2luZG93LmdldExXaW5kb3coKTtcclxuICAgICAgICB3aW5kb3cudGl0bGUgPSB0aWxlO1xyXG4gICAgICAgIHdpbmRvdy5tc2cgPSBtZXNzYWdlO1xyXG4gICAgICAgIC8vIHdpbk5vZGUudXBkYXRlVmlldygpO1xyXG4gICAgICAgIHdpbmRvdy53aWR0aCA9IExpZ2h0VUkucm9vdC53aWR0aDtcclxuICAgICAgICB3aW5kb3cuaGVpZ2h0ID0gTGlnaHRVSS5yb290LmhlaWdodDtcclxuICAgICAgICBMaWdodFVJLnBvcHVwTWFuYWdlci5hZGRQb3BVcCh3aW5kb3csTGlnaHRVSS5sYXllck1hbmFnZXIucG9wdXBMYXllcik7XHJcblxyXG5cclxuICAgICAgICBsZXQgcmVtb3ZlRnVuOkZ1bmN0aW9uID0gKHd3OmNjLk5vZGUpPT57XHJcbiAgICAgICAgICAgIExpZ2h0VUkucG9wdXBNYW5hZ2VyLnJlbW92ZVBvcFVwKHd3KTtcclxuICAgICAgICB9O1xyXG5cclxuXHJcbiAgICAgICAgaWYoZGVsYXlSZW1vdmUgPiAwKXtcclxuICAgICAgICAgICAgc2V0VGltZW91dChyZW1vdmVGdW4uYmluZCh0aGlzKSwgZGVsYXlSZW1vdmUsd2luZG93KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHdpbmRvdy5vbmNlKExFdmVudC5DTE9TRSwoZTpMRXZlbnQpPT57XHJcbiAgICAgICAgICAgIGlmKHdpbmRvdy5wYXJlbnQpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIExpZ2h0VUkucG9wdXBNYW5hZ2VyLnJlbW92ZVBvcFVwKHdpbmRvdyk7XHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgICAgIGNsb3NlSGFuZGxlciAmJiBjbG9zZUhhbmRsZXIoZS5kYXRhKTtcclxuICAgICAgICAgICAgLy/lvZLov5jlr7nosaHmsaBcclxuICAgICAgICAgICAgcG9vbC5wdXQod2luZG93KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHdpbmRvdztcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBnZXRXaW5kb3codXJsOnN0cmluZyk6TEFsZXJ0Qm94e1xyXG4gICAgICAgIGxldCBwb29sOmNjLk5vZGVQb29sID0gTEFsZXJ0LnBvb2xzW3VybF07XHJcbiAgICAgICBpZihwb29sID09IG51bGwpe1xyXG4gICAgICAgICAgIHBvb2wgPSBuZXcgY2MuTm9kZVBvb2woKTtcclxuICAgICAgICAgICBMQWxlcnQucG9vbHNbdXJsXSA9IHBvb2w7XHJcbiAgICAgICB9XHJcbiAgICAgICBcclxuICAgICAgIGlmIChwb29sLnNpemUoKSA9PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiAgbmV3IExBbGVydEJveCh1cmwpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBwb29sLmdldCgpIGFzIExBbGVydEJveDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/newlist/listItemRender.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '04ad3m9iltHdbglm3hl0kE4', 'listItemRender');
// Script/lightUI/components/newlist/listItemRender.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var listItemRender = /** @class */ (function (_super) {
    __extends(listItemRender, _super);
    function listItemRender() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**数据 */
        _this.data = null;
        /**索引 0表示第一项*/
        _this.itemIndex = 0;
        return _this;
    }
    listItemRender.prototype.onLoad = function () {
    };
    /**数据改变时调用 */
    listItemRender.prototype.dataChanged = function () {
        // this.node.getChildByName("rankLab").getComponent(cc.Label).string = this.data.rank + "";
        // this.node.getChildByName("nameLab").getComponent(cc.Label).string = this.data.name + "";
    };
    listItemRender = __decorate([
        ccclass
    ], listItemRender);
    return listItemRender;
}(cc.Component));
exports.default = listItemRender;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxjb21wb25lbnRzXFxuZXdsaXN0XFxsaXN0SXRlbVJlbmRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUE0QyxrQ0FBWTtJQUF4RDtRQUFBLHFFQWVDO1FBZEcsUUFBUTtRQUNELFVBQUksR0FBUSxJQUFJLENBQUM7UUFDeEIsY0FBYztRQUNQLGVBQVMsR0FBVyxDQUFDLENBQUM7O0lBV2pDLENBQUM7SUFURywrQkFBTSxHQUFOO0lBR0EsQ0FBQztJQUNELGFBQWE7SUFDTixvQ0FBVyxHQUFsQjtRQUNJLDJGQUEyRjtRQUMzRiwyRkFBMkY7SUFDL0YsQ0FBQztJQWRnQixjQUFjO1FBRGxDLE9BQU87T0FDYSxjQUFjLENBZWxDO0lBQUQscUJBQUM7Q0FmRCxBQWVDLENBZjJDLEVBQUUsQ0FBQyxTQUFTLEdBZXZEO2tCQWZvQixjQUFjIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExFdmVudCBmcm9tIFwiLi4vLi4vZXZlbnRzL0xFdmVudFwiO1xyXG5cclxuXHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBsaXN0SXRlbVJlbmRlciBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcbiAgICAvKirmlbDmja4gKi9cclxuICAgIHB1YmxpYyBkYXRhOiBhbnkgPSBudWxsO1xyXG4gICAgLyoq57Si5byVIDDooajnpLrnrKzkuIDpobkqL1xyXG4gICAgcHVibGljIGl0ZW1JbmRleDogbnVtYmVyID0gMDtcclxuXHJcbiAgICBvbkxvYWQoKSB7XHJcblxyXG5cclxuICAgIH1cclxuICAgIC8qKuaVsOaNruaUueWPmOaXtuiwg+eUqCAqL1xyXG4gICAgcHVibGljIGRhdGFDaGFuZ2VkKCkge1xyXG4gICAgICAgIC8vIHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcInJhbmtMYWJcIikuZ2V0Q29tcG9uZW50KGNjLkxhYmVsKS5zdHJpbmcgPSB0aGlzLmRhdGEucmFuayArIFwiXCI7XHJcbiAgICAgICAgLy8gdGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKFwibmFtZUxhYlwiKS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IHRoaXMuZGF0YS5uYW1lICsgXCJcIjtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/llist/LList.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd4db2gY1pRH1JpgDKBPjiWV', 'LList');
// Script/lightUI/components/llist/LList.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StartAxisType = exports.ListType = void 0;
var LEvent_1 = require("../../events/LEvent");
var LListAbs_1 = require("../LListAbs");
var ItemRender_1 = require("./ItemRender");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/**列表排列方式 */
var ListType;
(function (ListType) {
    /**水平排列 */
    ListType[ListType["Horizontal"] = 1] = "Horizontal";
    /**垂直排列 */
    ListType[ListType["Vertical"] = 2] = "Vertical";
    /**网格排列 */
    ListType[ListType["Grid"] = 3] = "Grid";
})(ListType = exports.ListType || (exports.ListType = {}));
/**网格布局中的方向 */
var StartAxisType;
(function (StartAxisType) {
    /**水平排列 */
    StartAxisType[StartAxisType["Horizontal"] = 1] = "Horizontal";
    /**垂直排列 */
    StartAxisType[StartAxisType["Vertical"] = 2] = "Vertical";
})(StartAxisType = exports.StartAxisType || (exports.StartAxisType = {}));
/**
 * 列表
 * 根据cocos_example的listView改动而来
 * @author chenkai 2020.7.8
 * @example
 *  1.创建cocos的ScrollView组件，添加List，设置List属性即可
 *
 */
var LList = /** @class */ (function (_super) {
    __extends(LList, _super);
    function LList() {
        var _this = _super.call(this) || this;
        //==================== 属性面板 =========================
        _this.autoSize = false;
        _this.enabledScroll = true;
        /**列表选项 */
        _this.itemRender = null;
        /**列表选项 */
        _this.none = null;
        /**排列方式 */
        _this.type = ListType.Vertical;
        /**网格布局中的方向 */
        _this.startAxis = StartAxisType.Horizontal;
        /**列表项之间X间隔 */
        _this.spaceX = 0;
        /**列表项之间Y间隔 */
        _this.spaceY = 0;
        /**上间距 */
        _this.padding_top = 0;
        /**下间距 */
        _this.padding_buttom = 0;
        /**左间距 */
        _this.padding_left = 0;
        _this._padding = 0;
        /**右间距 */
        _this.padding_right = 0;
        //====================== 滚动容器 ===============================
        /**列表滚动容器 */
        _this.scrollView = null;
        /**scrollView的内容容器 */
        _this.content = null;
        _this.bg = null;
        //======================== 列表项 ===========================
        /**列表项数据 */
        _this.itemDataList = [];
        /**应创建的实例数量 */
        _this.spawnCount = 0;
        /**存放列表项实例的数组 */
        _this.itemList = [];
        /**item的高度 */
        _this.itemHeight = 0;
        /**item的宽度 */
        _this.itemWidth = 0;
        /**存放不再使用中的列表项 */
        _this.itemPool = [];
        //======================= 计算参数 ==========================
        /**距离scrollView中心点的距离，超过这个距离的item会被重置，一般设置为 scrollVIew.height/2 + item.heigt/2 + space，因为这个距离item正好超出scrollView显示范围 */
        _this.halfScrollView = 0;
        /**上一次content的X值，用于和现在content的X值比较，得出是向左还是向右滚动 */
        _this.lastContentPosX = 0;
        /**上一次content的Y值，用于和现在content的Y值比较，得出是向上还是向下滚动 */
        _this.lastContentPosY = 0;
        /**网格行数 */
        _this.gridRow = 0;
        /**网格列数 */
        _this.gridCol = 0;
        /**刷新时间，单位s */
        _this.updateTimer = 0;
        /**刷新间隔，单位s */
        _this.updateInterval = 0.1;
        /**是否滚动容器 */
        _this.bScrolling = false;
        /**刷新的函数 */
        _this.updateFun = function () { };
        _this._selectedIndex = -1;
        return _this;
        // console.log("List ===>",  this.scrollView);
    }
    LList.prototype.onLoad = function () {
        this.itemHeight = this.itemRender.height;
        this.itemWidth = this.itemRender.width;
        this.scrollView = this.node.getComponent(cc.ScrollView);
        this.bg = this.scrollView.node.getChildByName("bg");
        this.content = this.scrollView.content;
        this.content.anchorX = 0;
        this.content.anchorY = 1;
        this.content.removeAllChildren();
        this.scrollView.node.on("scrolling", this.onScrolling, this);
        if (this.bg && this.autoSize) {
            var x = 0 - this.bg.x;
            var y = this.bg.y - 0;
            var w = this.bg.width - this.node.width - x;
            var h = this.bg.height - this.node.height - y;
            this.fixSize = new cc.Rect(x, y, w, h);
        }
        // if(this.bg) this.bg.active = false;
        this.scrollView.enabled = this.enabledScroll;
    };
    /**
     * 列表数据 (列表数据复制使用，如果列表数据改变，则需要重新设置一遍数据)
     * @param itemDataList item数据列表
     */
    LList.prototype.setData = function (itemDataList) {
        // console.log("setdata",itemDataList);
        if (!this.scrollView)
            return;
        this.itemDataList = itemDataList.slice();
        if (this.none)
            this.none.active = (itemDataList.length == 0);
        this.updateContent();
        if (this.autoSize)
            this.reSize();
    };
    Object.defineProperty(LList.prototype, "dataProvider", {
        get: function () {
            return this.itemDataList;
        },
        set: function (data) {
            this.setData(data);
        },
        enumerable: false,
        configurable: true
    });
    LList.prototype.reSize = function () {
        this.scrollView.node.width = this.content.width;
        this.scrollView.node.height = this.content.height;
        this.node.height = this.content.height;
        this.node.width = this.content.width;
        var mask = this.scrollView.node.getChildByName("view");
        mask.width = this.content.width;
        mask.height = this.content.height;
        if (this.bg) {
            this.bg.width = this.content.width + this.fixSize.x + this.fixSize.width;
            this.bg.height = this.content.height + this.fixSize.y + this.fixSize.height;
        }
        this.updateContent();
    };
    Object.defineProperty(LList.prototype, "width", {
        set: function (value) {
            this.content.width = value;
            this.reSize();
        },
        enumerable: false,
        configurable: true
    });
    /**计算列表的各项参数 */
    LList.prototype.countListParam = function () {
        var dataLen = this.itemDataList.length;
        if (this.type == ListType.Vertical) {
            this.scrollView.horizontal = false;
            this.scrollView.vertical = true;
            this.content.width = this.content.parent.width;
            this.content.height = dataLen * this.itemHeight + (dataLen - 1) * this.spaceY + this.padding_top + this.padding_buttom;
            this.spawnCount = Math.round(this.scrollView.node.height / (this.itemHeight + this.spaceY)) + 2; //计算创建的item实例数量，比当前scrollView容器能放下的item数量再加上2个
            this.halfScrollView = this.scrollView.node.height / 2 + this.itemHeight / 2 + this.spaceY; //计算bufferZone，item的显示范围
            this.updateFun = this.updateV;
        }
        else if (this.type == ListType.Horizontal) {
            this.scrollView.horizontal = true;
            this.scrollView.vertical = false;
            this.content.width = dataLen * this.itemWidth + (dataLen - 1) * this.spaceX + this.padding_left + this.padding_right;
            this.content.height = this.content.parent.height;
            this.spawnCount = Math.round(this.scrollView.node.width / (this.itemWidth + this.spaceX)) + 2;
            this.halfScrollView = this.scrollView.node.width / 2 + this.itemWidth / 2 + this.spaceX;
            this.updateFun = this.udpateH;
        }
        else if (this.type == ListType.Grid) {
            if (this.startAxis == StartAxisType.Vertical) {
                this.scrollView.horizontal = false;
                this.scrollView.vertical = true;
                this.content.width = this.content.parent.width;
                //如果left和right间隔过大，导致放不下一个item，则left和right都设置为0，相当于不生效
                if (this.padding_left + this.padding_right + this.itemWidth + this.spaceX > this.content.width) {
                    this.padding_left = 0;
                    this.padding_right = 0;
                    console.error("padding_left或padding_right过大");
                }
                this.gridCol = Math.floor((this.content.width - this.padding_left - this.padding_right) / (this.itemWidth + this.spaceX));
                this.gridRow = Math.ceil(dataLen / this.gridCol);
                this.content.height = this.gridRow * this.itemHeight + (this.gridRow - 1) * this.spaceY + this.padding_top + this.padding_buttom;
                this.spawnCount = Math.round(this.scrollView.node.height / (this.itemHeight + this.spaceY)) * this.gridCol + this.gridCol * 2;
                this.halfScrollView = this.scrollView.node.height / 2 + this.itemHeight / 2 + this.spaceY;
                this.updateFun = this.updateGrid_V;
            }
            else if (this.startAxis == StartAxisType.Horizontal) {
                this.scrollView.horizontal = true;
                this.scrollView.vertical = false;
                //计算高间隔
                this.content.height = this.content.parent.height;
                //如果left和right间隔过大，导致放不下一个item，则left和right都设置为0，相当于不生效
                if (this.padding_top + this.padding_buttom + this.itemHeight + this.spaceY > this.content.height) {
                    this.padding_top = 0;
                    this.padding_buttom = 0;
                    console.error("padding_top或padding_buttom过大");
                }
                this.gridRow = Math.floor((this.content.height - this.padding_top - this.padding_buttom) / (this.itemHeight + this.spaceY));
                this.gridCol = Math.ceil(dataLen / this.gridRow);
                this.content.width = this.gridCol * this.itemWidth + (this.gridCol - 1) * this.spaceX + this.padding_left + this.padding_right;
                this.spawnCount = Math.round(this.scrollView.node.width / (this.itemWidth + this.spaceX)) * this.gridRow + this.gridRow * 2;
                this.halfScrollView = this.scrollView.node.width / 2 + this.itemWidth / 2 + this.spaceX;
                this.updateFun = this.updateGrid_H;
            }
        }
    };
    /**
     * 创建列表
     * @param startIndex 起始显示的数据索引 0表示第一项
     * @param offset     scrollView偏移量
     */
    LList.prototype.createList = function (startIndex, offset) {
        //当需要显示的数据长度 > 虚拟列表长度， 删除最末尾几个数据时，列表需要重置位置到scrollView最底端
        if (this.itemDataList.length > this.spawnCount && (startIndex + this.spawnCount - 1) >= this.itemDataList.length) {
            startIndex = this.itemDataList.length - this.spawnCount;
            offset = this.scrollView.getMaxScrollOffset();
            //当需要显示的数据长度 <= 虚拟列表长度， 隐藏多余的虚拟列表项 
        }
        else if (this.itemDataList.length <= this.spawnCount) {
            startIndex = 0;
        }
        for (var i = 0; i < this.spawnCount; i++) {
            var item = void 0;
            //需要显示的数据索引在数据范围内，则item实例显示出来
            if (i + startIndex < this.itemDataList.length) {
                if (this.itemList[i] == null) {
                    item = this.getItem();
                    this.itemList.push(item);
                    item.parent = this.content;
                }
                else {
                    item = this.itemList[i];
                }
                //需要显示的数据索引超过了数据范围，则item实例隐藏起来
            }
            else {
                //item实例数量 > 需要显示的数据量
                if (this.itemList.length > (this.itemDataList.length - startIndex)) {
                    item = this.itemList.pop();
                    item.removeFromParent(false);
                    this.itemPool.push(item);
                }
                continue;
            }
            var itemRender = item.getComponent(ItemRender_1.default);
            itemRender.itemIndex = i + startIndex;
            itemRender.data = this.itemDataList[i + startIndex];
            itemRender.dataChanged();
            if (this.type == ListType.Vertical) {
                //因为content的锚点X是0，所以item的x值是content.with/2表示居中，锚点Y是1，所以item的y值从content顶部向下是0到负无穷。所以item.y= -item.height/2时，是在content的顶部。
                item.setPosition(this.content.width / 2, -item.height * (0.5 + i + startIndex) - this.spaceY * (i + startIndex) - this.padding_top);
            }
            else if (this.type == ListType.Horizontal) {
                item.setPosition(item.width * (0.5 + i + startIndex) + this.spaceX * (i + startIndex) + this.padding_left, -this.content.height / 2);
            }
            else if (this.type == ListType.Grid) {
                if (this.startAxis == StartAxisType.Vertical) {
                    var row = Math.floor((i + startIndex) / this.gridCol);
                    var col = (i + startIndex) % this.gridCol;
                    item.setPosition(item.width * (0.5 + col) + this.spaceX * col + this.padding_left, -item.height * (0.5 + row) - this.spaceY * row - this.padding_top);
                    item.opacity = 255;
                }
                else if (this.startAxis == StartAxisType.Horizontal) {
                    var row = (i + startIndex) % this.gridRow;
                    var col = Math.floor((i + startIndex) / this.gridRow);
                    item.setPosition(item.width * (0.5 + col) + this.spaceX * col + this.padding_left, -item.height * (0.5 + row) - this.spaceY * row - this.padding_top);
                    item.opacity = 255;
                }
            }
        }
        this.scrollView.scrollToOffset(offset);
    };
    /**获取一个列表项 */
    LList.prototype.getItem = function () {
        if (this.itemPool.length == 0) {
            var item = cc.instantiate(this.itemRender);
            item.on(cc.Node.EventType.TOUCH_END, this.itemClickHandler, this);
            // console.log("creatItem");
            return item;
        }
        else {
            return this.itemPool.pop();
        }
    };
    LList.prototype.itemClickHandler = function (event) {
        var item = event.currentTarget.getComponent(ItemRender_1.default);
        // console.log("itemClickHandler ", item.itemIndex);
        this._selectedItem = item.data;
        this._selectedIndex = item.itemIndex;
        this.node.dispatchEvent(new LEvent_1.default(LEvent_1.default.ITEM_CLICK, item.itemIndex));
    };
    LList.prototype.update = function (dt) {
        if (this.bScrolling == false) {
            return;
        }
        this.updateTimer += dt;
        if (this.updateTimer < this.updateInterval) {
            return;
        }
        this.updateTimer = 0;
        this.bScrolling = false;
        this.updateFun();
    };
    LList.prototype.onScrolling = function () {
        this.bScrolling = true;
    };
    /**垂直排列 */
    LList.prototype.updateV = function () {
        var items = this.itemList;
        var item;
        var bufferZone = this.halfScrollView;
        var isUp = this.scrollView.content.y > this.lastContentPosY;
        var offset = (this.itemHeight + this.spaceY) * items.length;
        for (var i = 0; i < items.length; i++) {
            item = items[i];
            var viewPos = this.getPositionInView(item);
            if (isUp) {
                //item上滑时，超出了scrollView上边界，将item移动到下方复用，item移动到下方的位置必须不超过content的下边界
                if (viewPos.y > bufferZone && item.y - offset - this.padding_buttom > -this.content.height) {
                    var itemRender = item.getComponent(ItemRender_1.default);
                    var itemIndex = itemRender.itemIndex + items.length;
                    itemRender.itemIndex = itemIndex;
                    itemRender.data = this.itemDataList[itemIndex];
                    itemRender.data.index = itemIndex;
                    itemRender.dataChanged();
                    item.y = item.y - offset;
                }
            }
            else {
                //item下滑时，超出了scrollView下边界，将item移动到上方复用，item移动到上方的位置必须不超过content的上边界
                if (viewPos.y + item.height < -bufferZone && item.y + offset + this.padding_top < 0) {
                    // console.log("超出了scrollView下边界");
                    var itemRender = item.getComponent(ItemRender_1.default);
                    var itemIndex = itemRender.itemIndex - items.length;
                    itemRender.itemIndex = itemIndex;
                    itemRender.data = this.itemDataList[itemIndex];
                    itemRender.data.index = itemIndex;
                    itemRender.dataChanged();
                    item.y = item.y + offset;
                }
            }
        }
        this.lastContentPosY = this.scrollView.content.y;
    };
    /**水平排列 */
    LList.prototype.udpateH = function () {
        var items = this.itemList;
        var item;
        var bufferZone = this.halfScrollView;
        var isRight = this.scrollView.content.x > this.lastContentPosX;
        var offset = (this.itemWidth + this.spaceX) * items.length;
        for (var i = 0; i < items.length; i++) {
            item = items[i];
            var viewPos = this.getPositionInView(item);
            if (isRight) {
                //item右滑时，超出了scrollView右边界，将item移动到左方复用，item移动到左方的位置必须不超过content的左边界
                if (viewPos.x > bufferZone && item.x - offset - this.padding_left > 0) {
                    var itemRender = item.getComponent(ItemRender_1.default);
                    var itemIndex = itemRender.itemIndex - items.length;
                    itemRender.itemIndex = itemIndex;
                    itemRender.data = this.itemDataList[itemIndex];
                    itemRender.dataChanged();
                    item.x = item.x - offset;
                }
            }
            else {
                //item左滑时，超出了scrollView左边界，将item移动到右方复用，item移动到右方的位置必须不超过content的右边界
                if (viewPos.x < -bufferZone && item.x + offset + this.padding_right < this.content.width) {
                    var itemRender = item.getComponent(ItemRender_1.default);
                    var itemIndex = itemRender.itemIndex + items.length;
                    itemRender.itemIndex = itemIndex;
                    itemRender.data = this.itemDataList[itemIndex];
                    itemRender.dataChanged();
                    item.x = item.x + offset;
                }
            }
        }
        this.lastContentPosX = this.scrollView.content.x;
    };
    /**网格垂直排列 */
    LList.prototype.updateGrid_V = function () {
        var items = this.itemList;
        var item;
        var bufferZone = this.halfScrollView;
        var isUp = this.scrollView.content.y > this.lastContentPosY;
        var offset = (this.itemHeight + this.spaceY) * (this.spawnCount / this.gridCol);
        for (var i = 0; i < items.length; i++) {
            item = items[i];
            var viewPos = this.getPositionInView(item);
            if (isUp) {
                //item上滑时，超出了scrollView上边界，将item移动到下方复用，item移动到下方的位置必须不超过content的下边界
                if (viewPos.y > bufferZone && item.y - offset - this.padding_buttom > -this.content.height) {
                    var itemRender = item.getComponent(ItemRender_1.default);
                    var itemIndex = itemRender.itemIndex + (this.spawnCount / this.gridCol) * this.gridCol;
                    if (this.itemDataList[itemIndex] != null) {
                        item.y = item.y - offset;
                        itemRender.itemIndex = itemIndex;
                        itemRender.data = this.itemDataList[itemIndex];
                        itemRender.dataChanged();
                        item.opacity = 255;
                    }
                    else {
                        item.y = item.y - offset;
                        itemRender.itemIndex = itemIndex;
                        item.opacity = 0;
                    }
                }
            }
            else { //item下滑时，超出了scrollView下边界，将item移动到上方复用，item移动到上方的位置必须不超过content的上边界
                if (viewPos.y < -bufferZone && item.y + offset + this.padding_top < 0) {
                    var itemRender = item.getComponent(ItemRender_1.default);
                    var itemIndex = itemRender.itemIndex - (this.spawnCount / this.gridCol) * this.gridCol;
                    if (this.itemDataList[itemIndex] != null) {
                        item.y = item.y + offset;
                        itemRender.itemIndex = itemIndex;
                        itemRender.data = this.itemDataList[itemIndex];
                        itemRender.dataChanged();
                        item.opacity = 255;
                    }
                    else {
                        item.y = item.y + offset;
                        itemRender.itemIndex = itemIndex;
                        item.opacity = 0;
                    }
                }
            }
        }
        this.lastContentPosY = this.scrollView.content.y;
    };
    /**网格水平排列 */
    LList.prototype.updateGrid_H = function () {
        var items = this.itemList;
        var item;
        var bufferZone = this.halfScrollView;
        var isRight = this.scrollView.content.x > this.lastContentPosX;
        var offset = (this.itemWidth + this.spaceX) * (this.spawnCount / this.gridRow);
        for (var i = 0; i < items.length; i++) {
            item = items[i];
            var viewPos = this.getPositionInView(item);
            if (isRight) {
                //item右滑时，超出了scrollView右边界，将item移动到左方复用，item移动到左方的位置必须不超过content的左边界
                if (viewPos.x > bufferZone && item.x - offset - this.padding_left > 0) {
                    var itemRender = item.getComponent(ItemRender_1.default);
                    var itemIndex = itemRender.itemIndex - (this.spawnCount / this.gridRow) * this.gridRow;
                    if (this.itemDataList[itemIndex] != null) {
                        item.x = item.x - offset;
                        itemRender.itemIndex = itemIndex;
                        itemRender.data = this.itemDataList[itemIndex];
                        itemRender.dataChanged();
                        item.opacity = 255;
                    }
                    else {
                        item.x = item.x - offset;
                        itemRender.itemIndex = itemIndex;
                        item.opacity = 0;
                    }
                }
            }
            else {
                //item左滑时，超出了scrollView左边界，将item移动到右方复用，item移动到右方的位置必须不超过content的右边界
                if (viewPos.x < -bufferZone && item.x + offset + this.padding_right < this.content.width) {
                    var itemRender = item.getComponent(ItemRender_1.default);
                    var itemIndex = itemRender.itemIndex + (this.spawnCount / this.gridRow) * this.gridRow;
                    if (this.itemDataList[itemIndex] != null) {
                        item.x = item.x + offset;
                        itemRender.itemIndex = itemIndex;
                        itemRender.data = this.itemDataList[itemIndex];
                        itemRender.dataChanged();
                        item.opacity = 255;
                    }
                    else {
                        item.x = item.x + offset;
                        itemRender.itemIndex = itemIndex;
                        item.opacity = 0;
                    }
                }
            }
        }
        this.lastContentPosX = this.scrollView.content.x;
    };
    Object.defineProperty(LList.prototype, "selectedIndex", {
        get: function () {
            return this._selectedIndex;
        },
        enumerable: false,
        configurable: true
    });
    /**获取选中的视图*/
    LList.prototype.getSelectedItemrander = function () {
        if (this._selectedIndex < 0)
            return null;
        var itemR;
        for (var _i = 0, _a = this.content.children; _i < _a.length; _i++) {
            var item = _a[_i];
            itemR = item.getComponent(ItemRender_1.default);
            if (itemR && itemR.itemIndex == this.selectedIndex)
                return item;
        }
        return null;
    };
    /**获取item在scrollView的局部坐标 */
    LList.prototype.getPositionInView = function (item) {
        var worldPos = item.parent.convertToWorldSpaceAR(item.position);
        var viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);
        return viewPos;
    };
    /**获取列表数据 */
    LList.prototype.getListData = function () {
        return this.itemDataList;
    };
    /**
     * 增加一项数据到列表的末尾
     * @param data 数据
     */
    LList.prototype.addItem = function (data) {
        this.itemDataList.push(data);
        this.updateContent();
    };
    /**
     * 增加一项数据到列表指定位置
     * @param index   位置，0表示第1项
     * @param data  数据
     */
    LList.prototype.addItemAt = function (index, data) {
        if (this.itemDataList[index] != null || this.itemDataList.length == index) {
            this.itemDataList.splice(index, 1, data);
            this.updateContent();
        }
    };
    /**
     * 删除一项数据
     * @param index 删除项的位置 ,0表示第1项
     */
    LList.prototype.deleteItem = function (index) {
        if (this.itemDataList[index] != null) {
            this.itemDataList.splice(index, 1);
            this.updateContent();
        }
    };
    /**
     * 改变一项数据
     * @param index   位置,0表示第1项
     * @param data  替换的数据
     */
    LList.prototype.changeItem = function (index, data) {
        if (this.itemDataList[index] != null) {
            this.itemDataList[index] = data;
            this.updateContent();
        }
    };
    /**获取第一个Item的位置 */
    LList.prototype.updateContent = function () {
        //显示列表实例为0个
        if (this.itemList.length == 0) {
            this.countListParam();
            this.createList(0, new cc.Vec2(0, 0));
            //显示列表的实例不为0个，则需要重新排列item实例数组
        }
        else {
            if (this.type == ListType.Vertical) {
                this.itemList.sort(function (a, b) {
                    return b.y - a.y;
                });
            }
            else if (this.type == ListType.Horizontal) {
                this.itemList.sort(function (a, b) {
                    return a.x - b.x;
                });
            }
            else if (this.type == ListType.Grid) {
                if (this.startAxis == StartAxisType.Vertical) {
                    this.itemList.sort(function (a, b) {
                        return a.x - b.x;
                    });
                    this.itemList.sort(function (a, b) {
                        return b.y - a.y;
                    });
                }
                else if (this.startAxis == StartAxisType.Horizontal) {
                    this.itemList.sort(function (a, b) {
                        return b.y - a.y;
                    });
                    this.itemList.sort(function (a, b) {
                        return a.x - b.x;
                    });
                }
            }
            this.countListParam();
            //获取第一个item实例需要显示的数据索引
            var startIndex = this.itemList[0].getComponent(ItemRender_1.default).itemIndex;
            if (this.type == ListType.Grid && this.startAxis == StartAxisType.Vertical) {
                startIndex += (startIndex + this.spawnCount) % this.gridCol;
            }
            else if (this.type == ListType.Grid && this.startAxis == StartAxisType.Horizontal) {
                startIndex += (startIndex + this.spawnCount) % this.gridRow;
            }
            //getScrollOffset()和scrollToOffset()的x值是相反的
            var offset = this.scrollView.getScrollOffset();
            offset.x = -offset.x;
            this.createList(startIndex, offset);
        }
    };
    Object.defineProperty(LList.prototype, "selectedItem", {
        get: function () {
            return this._selectedItem;
        },
        enumerable: false,
        configurable: true
    });
    /**销毁 */
    LList.prototype.onDestroy = function () {
        //清理列表项
        var len = this.itemList.length;
        for (var i = 0; i < len; i++) {
            if (cc.isValid(this.itemList[i], true)) {
                this.itemList[i].destroy();
            }
        }
        this.itemList.length = 0;
        //清理对象池
        len = this.itemPool.length;
        for (var i = 0; i < len; i++) {
            if (cc.isValid(this.itemPool[i], true)) {
                this.itemPool[i].destroy();
            }
        }
        this.itemPool.length = 0;
        //清理列表数据
        this.itemDataList.length = 0;
    };
    __decorate([
        property({ type: cc.Boolean, tooltip: "自适应" })
    ], LList.prototype, "autoSize", void 0);
    __decorate([
        property({ type: cc.Boolean, tooltip: "是否允许滚动" })
    ], LList.prototype, "enabledScroll", void 0);
    __decorate([
        property({ type: cc.Node, tooltip: "列表项" })
    ], LList.prototype, "itemRender", void 0);
    __decorate([
        property({ type: cc.Node, tooltip: "无数据时候的表现" })
    ], LList.prototype, "none", void 0);
    __decorate([
        property({ type: cc.Enum(ListType), tooltip: "排列方式" })
    ], LList.prototype, "type", void 0);
    __decorate([
        property({ type: cc.Enum(StartAxisType), tooltip: "网格布局中的方向", visible: function () { return this.type == ListType.Grid; } })
    ], LList.prototype, "startAxis", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "列表项X间隔", visible: function () { return (this.type == ListType.Horizontal || this.type == ListType.Grid); } })
    ], LList.prototype, "spaceX", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "列表项Y间隔", visible: function () { return this.type == ListType.Vertical || this.type == ListType.Grid; } })
    ], LList.prototype, "spaceY", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "上间距", visible: function () { return (this.type == ListType.Vertical || this.type == ListType.Grid); } })
    ], LList.prototype, "padding_top", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "下间距", visible: function () { return (this.type == ListType.Vertical || this.type == ListType.Grid); } })
    ], LList.prototype, "padding_buttom", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "左间距", visible: function () { return (this.type == ListType.Horizontal || this.type == ListType.Grid); } })
    ], LList.prototype, "padding_left", void 0);
    __decorate([
        property(cc.Integer)
    ], LList.prototype, "_padding", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "右间距", visible: function () { return (this.type == ListType.Horizontal || this.type == ListType.Grid); } })
    ], LList.prototype, "padding_right", void 0);
    LList = __decorate([
        ccclass
    ], LList);
    return LList;
}(LListAbs_1.default));
exports.default = LList;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/logging/LogLevel.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b055daGzFhKgYV6wej3RDAh', 'LogLevel');
// Script/lightUI/logging/LogLevel.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var LogLevel = /** @class */ (function (_super) {
    __extends(LogLevel, _super);
    function LogLevel() {
        var _this = _super.call(this) || this;
        return _this;
    } // end function
    LogLevel.toString = function (param1) {
        var _loc_2 = "Unknown";
        if (param1 == LogLevel.DEBUG) {
            _loc_2 = "DEBUG";
        }
        else if (param1 == LogLevel.INFO) {
            _loc_2 = "INFO";
        }
        else if (param1 == LogLevel.WARN) {
            _loc_2 = "WARN";
        }
        else if (param1 == LogLevel.ERROR) {
            _loc_2 = "ERROR";
        }
        return _loc_2;
    }; // end function
    LogLevel.fromString = function (param1) {
        param1 = param1.toUpperCase();
        if (param1 == this.toString(LogLevel.DEBUG)) {
            return LogLevel.DEBUG;
        }
        if (param1 == this.toString(LogLevel.INFO)) {
            return LogLevel.INFO;
        }
        if (param1 == this.toString(LogLevel.WARN)) {
            return LogLevel.WARN;
        }
        if (param1 == this.toString(LogLevel.ERROR)) {
            return LogLevel.ERROR;
        }
        return -1;
    }; // end function
    LogLevel.DEBUG = 100;
    LogLevel.INFO = 200;
    LogLevel.WARN = 300;
    LogLevel.ERROR = 400;
    return LogLevel;
}(Object));
exports.default = LogLevel;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxsb2dnaW5nXFxMb2dMZXZlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBSztJQUFzQyw0QkFBTTtJQU96QztRQUFBLFlBRUksaUJBQU8sU0FFVjs7SUFBRCxDQUFDLENBQUEsZUFBZTtJQUVGLGlCQUFRLEdBQXRCLFVBQXVCLE1BQWE7UUFFaEMsSUFBSSxNQUFNLEdBQVUsU0FBUyxDQUFDO1FBQzlCLElBQUksTUFBTSxJQUFJLFFBQVEsQ0FBQyxLQUFLLEVBQzVCO1lBQ0ksTUFBTSxHQUFHLE9BQU8sQ0FBQztTQUNwQjthQUNJLElBQUksTUFBTSxJQUFJLFFBQVEsQ0FBQyxJQUFJLEVBQ2hDO1lBQ0ksTUFBTSxHQUFHLE1BQU0sQ0FBQztTQUNuQjthQUNJLElBQUksTUFBTSxJQUFJLFFBQVEsQ0FBQyxJQUFJLEVBQ2hDO1lBQ0ksTUFBTSxHQUFHLE1BQU0sQ0FBQztTQUNuQjthQUNJLElBQUksTUFBTSxJQUFJLFFBQVEsQ0FBQyxLQUFLLEVBQ2pDO1lBQ0ksTUFBTSxHQUFHLE9BQU8sQ0FBQztTQUNwQjtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUMsRUFBQSxlQUFlO0lBRUYsbUJBQVUsR0FBeEIsVUFBeUIsTUFBYTtRQUVsQyxNQUFNLEdBQUcsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzlCLElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUMzQztZQUNJLE9BQU8sUUFBUSxDQUFDLEtBQUssQ0FBQztTQUN6QjtRQUNELElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUMxQztZQUNJLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQztTQUN4QjtRQUNELElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUMxQztZQUNJLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQztTQUN4QjtRQUNELElBQUksTUFBTSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUMzQztZQUNJLE9BQU8sUUFBUSxDQUFDLEtBQUssQ0FBQztTQUN6QjtRQUNELE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFDZCxDQUFDLEVBQUEsZUFBZTtJQXJERixjQUFLLEdBQVUsR0FBRyxDQUFDO0lBQ25CLGFBQUksR0FBVSxHQUFHLENBQUM7SUFDbEIsYUFBSSxHQUFVLEdBQUcsQ0FBQztJQUNsQixjQUFLLEdBQVUsR0FBRyxDQUFDO0lBb0RyQyxlQUFDO0NBekRBLEFBeURBLENBekRzQyxNQUFNLEdBeUQ1QztrQkF6RHFCLFFBQVEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyLvu78gICAgZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9nTGV2ZWwgZXh0ZW5kcyBPYmplY3RcclxuICAgIHtcclxuICAgICAgICBwdWJsaWMgc3RhdGljIERFQlVHOm51bWJlciA9IDEwMDtcclxuICAgICAgICBwdWJsaWMgc3RhdGljIElORk86bnVtYmVyID0gMjAwO1xyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgV0FSTjpudW1iZXIgPSAzMDA7XHJcbiAgICAgICAgcHVibGljIHN0YXRpYyBFUlJPUjpudW1iZXIgPSA0MDA7XHJcblxyXG4gICAgICAgIGNvbnN0cnVjdG9yKClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9Ly8gZW5kIGZ1bmN0aW9uXHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgdG9TdHJpbmcocGFyYW0xOm51bWJlcikgOiBTdHJpbmdcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHZhciBfbG9jXzI6U3RyaW5nID0gXCJVbmtub3duXCI7XHJcbiAgICAgICAgICAgIGlmIChwYXJhbTEgPT0gTG9nTGV2ZWwuREVCVUcpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIF9sb2NfMiA9IFwiREVCVUdcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChwYXJhbTEgPT0gTG9nTGV2ZWwuSU5GTylcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgX2xvY18yID0gXCJJTkZPXCI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAocGFyYW0xID09IExvZ0xldmVsLldBUk4pXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIF9sb2NfMiA9IFwiV0FSTlwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHBhcmFtMSA9PSBMb2dMZXZlbC5FUlJPUilcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgX2xvY18yID0gXCJFUlJPUlwiO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBfbG9jXzI7XHJcbiAgICAgICAgfS8vIGVuZCBmdW5jdGlvblxyXG5cclxuICAgICAgICBwdWJsaWMgc3RhdGljIGZyb21TdHJpbmcocGFyYW0xOlN0cmluZykgOiBudW1iZXJcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHBhcmFtMSA9IHBhcmFtMS50b1VwcGVyQ2FzZSgpO1xyXG4gICAgICAgICAgICBpZiAocGFyYW0xID09IHRoaXMudG9TdHJpbmcoTG9nTGV2ZWwuREVCVUcpKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTG9nTGV2ZWwuREVCVUc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHBhcmFtMSA9PSB0aGlzLnRvU3RyaW5nKExvZ0xldmVsLklORk8pKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gTG9nTGV2ZWwuSU5GTztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAocGFyYW0xID09IHRoaXMudG9TdHJpbmcoTG9nTGV2ZWwuV0FSTikpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBMb2dMZXZlbC5XQVJOO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChwYXJhbTEgPT0gdGhpcy50b1N0cmluZyhMb2dMZXZlbC5FUlJPUikpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBMb2dMZXZlbC5FUlJPUjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXR1cm4gLTE7XHJcbiAgICAgICAgfS8vIGVuZCBmdW5jdGlvblxyXG5cclxuICAgIH0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/BasePanel.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'da0a93g18hJjZMitxbJGxoG', 'BasePanel');
// Common/src/BasePanel.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var tool_1 = require("./tool");
var AudioManage_1 = require("./AudioManage");
var AudioConfig_1 = require("./AudioConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/** 弹窗基类
 *  方便拓展弹窗通用逻辑
 */
var BasePanel = /** @class */ (function (_super) {
    __extends(BasePanel, _super);
    function BasePanel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.btnClose = null;
        _this.mask = null;
        _this.isPlaysound = true;
        return _this;
    }
    BasePanel.prototype.onLoad = function () {
        var _this = this;
        this.mask.on(cc.Node.EventType.TOUCH_END, function () {
            _this.onClose();
        });
        if (this.btnClose) {
            this.btnClose.clickEvents.push(tool_1.newEventHandler(this, 'onClose'));
        }
        this.showAnimation();
        var bgNode = this.node.getChildByName("bg");
        if (bgNode) {
            bgNode.on(cc.Node.EventType.TOUCH_END, function () { });
        }
    };
    BasePanel.prototype.showAnimation = function () {
        cc.tween(this.node)
            .set({ scale: 0.01, opacity: 255 / 2 })
            .to(84 / 1000, { scale: 1.05, opacity: 255 })
            .to(116 / 1000, { scale: 1 })
            .start();
    };
    BasePanel.prototype.onClose = function () {
        if (this.isPlaysound)
            AudioManage_1.AudioManage.playEffect(AudioConfig_1.default.effect_button_close);
        cc.log('onClose', this.node.name);
        this.node.destroy();
    };
    __decorate([
        property(cc.Button)
    ], BasePanel.prototype, "btnClose", void 0);
    __decorate([
        property(cc.Node)
    ], BasePanel.prototype, "mask", void 0);
    BasePanel = __decorate([
        ccclass
    ], BasePanel);
    return BasePanel;
}(cc.Component));
exports.default = BasePanel;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcQ29tbW9uXFxzcmNcXEJhc2VQYW5lbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrQkFBeUM7QUFDekMsNkNBQTJDO0FBQzNDLDZDQUF1QztBQUNqQyxJQUFBLEtBQXNCLEVBQUUsQ0FBQyxVQUFVLEVBQWxDLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBaUIsQ0FBQztBQUUxQzs7R0FFRztBQUVIO0lBQXVDLDZCQUFZO0lBQW5EO1FBQUEscUVBc0NDO1FBbkNHLGNBQVEsR0FBYyxJQUFJLENBQUM7UUFHM0IsVUFBSSxHQUFZLElBQUksQ0FBQztRQUVyQixpQkFBVyxHQUFHLElBQUksQ0FBQzs7SUE4QnZCLENBQUM7SUE1QkcsMEJBQU0sR0FBTjtRQUFBLGlCQVlDO1FBWEcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFDO1lBQ3JDLEtBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQTtRQUNsQixDQUFDLENBQUMsQ0FBQztRQUNILElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNmLElBQUksQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxzQkFBZSxDQUFDLElBQUksRUFBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1NBQ25FO1FBQ0QsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3JCLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxDQUFBO1FBQzNDLElBQUksTUFBTSxFQUFFO1lBQ1IsTUFBTSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUMsY0FBTSxDQUFDLENBQUMsQ0FBQztTQUNsRDtJQUNMLENBQUM7SUFFRCxpQ0FBYSxHQUFiO1FBQ0ksRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2FBQ2xCLEdBQUcsQ0FBQyxFQUFDLEtBQUssRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLEdBQUcsR0FBQyxDQUFDLEVBQUMsQ0FBQzthQUMvQixFQUFFLENBQUMsRUFBRSxHQUFDLElBQUksRUFBQyxFQUFDLEtBQUssRUFBQyxJQUFJLEVBQUUsT0FBTyxFQUFDLEdBQUcsRUFBQyxDQUFDO2FBQ3JDLEVBQUUsQ0FBQyxHQUFHLEdBQUMsSUFBSSxFQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxDQUFDO2FBQ3RCLEtBQUssRUFBRSxDQUFDO0lBQ2IsQ0FBQztJQUVELDJCQUFPLEdBQVA7UUFDSSxJQUFHLElBQUksQ0FBQyxXQUFXO1lBQUMseUJBQVcsQ0FBQyxVQUFVLENBQUMscUJBQVcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQzVFLEVBQUUsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN4QixDQUFDO0lBakNEO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7K0NBQ087SUFHM0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQzsyQ0FDRztJQU5KLFNBQVM7UUFEN0IsT0FBTztPQUNhLFNBQVMsQ0FzQzdCO0lBQUQsZ0JBQUM7Q0F0Q0QsQUFzQ0MsQ0F0Q3NDLEVBQUUsQ0FBQyxTQUFTLEdBc0NsRDtrQkF0Q29CLFNBQVMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBuZXdFdmVudEhhbmRsZXIgfSBmcm9tIFwiLi90b29sXCI7XHJcbmltcG9ydCB7IEF1ZGlvTWFuYWdlIH0gZnJvbSBcIi4vQXVkaW9NYW5hZ2VcIlxyXG5pbXBvcnQgYXVkaW9Db25maWcgZnJvbSBcIi4vQXVkaW9Db25maWdcIlxyXG5jb25zdCB7Y2NjbGFzcywgcHJvcGVydHl9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbi8qKiDlvLnnqpfln7rnsbtcclxuICogIOaWueS+v+aLk+WxleW8ueeql+mAmueUqOmAu+i+kVxyXG4gKi9cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZVBhbmVsIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuQnV0dG9uKVxyXG4gICAgYnRuQ2xvc2U6IGNjLkJ1dHRvbiA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBtYXNrOiBjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgICBpc1BsYXlzb3VuZCA9IHRydWU7XHJcbiAgICBcclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICB0aGlzLm1hc2sub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCgpPT4ge1xyXG4gICAgICAgICAgICB0aGlzLm9uQ2xvc2UoKVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmICh0aGlzLmJ0bkNsb3NlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnRuQ2xvc2UuY2xpY2tFdmVudHMucHVzaChuZXdFdmVudEhhbmRsZXIodGhpcywnb25DbG9zZScpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zaG93QW5pbWF0aW9uKCk7XHJcbiAgICAgICAgbGV0IGJnTm9kZSA9IHRoaXMubm9kZS5nZXRDaGlsZEJ5TmFtZShcImJnXCIpXHJcbiAgICAgICAgaWYgKGJnTm9kZSkge1xyXG4gICAgICAgICAgICBiZ05vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfRU5ELCgpPT4ge30pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzaG93QW5pbWF0aW9uKCkge1xyXG4gICAgICAgIGNjLnR3ZWVuKHRoaXMubm9kZSlcclxuICAgICAgICAuc2V0KHtzY2FsZTowLjAxLG9wYWNpdHk6MjU1LzJ9KVxyXG4gICAgICAgIC50byg4NC8xMDAwLHtzY2FsZToxLjA1LCBvcGFjaXR5OjI1NX0pXHJcbiAgICAgICAgLnRvKDExNi8xMDAwLHtzY2FsZToxfSlcclxuICAgICAgICAuc3RhcnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsb3NlKCkge1xyXG4gICAgICAgIGlmKHRoaXMuaXNQbGF5c291bmQpQXVkaW9NYW5hZ2UucGxheUVmZmVjdChhdWRpb0NvbmZpZy5lZmZlY3RfYnV0dG9uX2Nsb3NlKTtcclxuICAgICAgICBjYy5sb2coJ29uQ2xvc2UnLHRoaXMubm9kZS5uYW1lKTtcclxuICAgICAgICB0aGlzLm5vZGUuZGVzdHJveSgpO1xyXG4gICAgfVxyXG5cclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/Expand.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '16b26j6+PZMJJn8UxFwPxEH', 'Expand');
// Common/src/Expand.ts

cc.findNode = function (name, tag) {
    if (tag.children.length == 0) {
        return null;
    }
    for (var _i = 0, _a = tag.children; _i < _a.length; _i++) {
        var childernNode = _a[_i];
        if (childernNode.name == name) {
            return childernNode;
        }
        else {
            var node = cc.findNode(name, childernNode);
            if (node) {
                return node;
            }
        }
    }
};

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcQ29tbW9uXFxzcmNcXEV4cGFuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQSxFQUFFLENBQUMsUUFBUSxHQUFHLFVBQUMsSUFBVyxFQUFDLEdBQVc7SUFDbEMsSUFBSSxHQUFHLENBQUMsUUFBUSxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7UUFDMUIsT0FBTyxJQUFJLENBQUE7S0FDZDtJQUNELEtBQXlCLFVBQVksRUFBWixLQUFBLEdBQUcsQ0FBQyxRQUFRLEVBQVosY0FBWSxFQUFaLElBQVksRUFBRTtRQUFsQyxJQUFJLFlBQVksU0FBQTtRQUNqQixJQUFJLFlBQVksQ0FBQyxJQUFJLElBQUksSUFBSSxFQUFFO1lBQzNCLE9BQU8sWUFBWSxDQUFBO1NBQ3RCO2FBQU07WUFDSCxJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsUUFBUSxDQUFDLElBQUksRUFBQyxZQUFZLENBQUMsQ0FBQTtZQUN6QyxJQUFJLElBQUksRUFBRTtnQkFDTixPQUFPLElBQUksQ0FBQTthQUNkO1NBQ0o7S0FDSjtBQUNMLENBQUMsQ0FBQSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImNjLmZpbmROb2RlID0gKG5hbWU6c3RyaW5nLHRhZzpjYy5Ob2RlKT0+e1xyXG4gICAgaWYgKHRhZy5jaGlsZHJlbi5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgIHJldHVybiBudWxsIFxyXG4gICAgfVxyXG4gICAgZm9yIChsZXQgY2hpbGRlcm5Ob2RlIG9mIHRhZy5jaGlsZHJlbikge1xyXG4gICAgICAgIGlmIChjaGlsZGVybk5vZGUubmFtZSA9PSBuYW1lKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBjaGlsZGVybk5vZGVcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBsZXQgbm9kZSA9IGNjLmZpbmROb2RlKG5hbWUsY2hpbGRlcm5Ob2RlKVxyXG4gICAgICAgICAgICBpZiAobm9kZSkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5vZGVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSAiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/EventManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4222aWqVOZAhaXaiGXXMSd8', 'EventManager');
// Common/src/EventManager.ts

var EventManager = /** @class */ (function () {
    function EventManager() {
    }
    EventManager.getInstance = function () {
        if (!this.instance) {
            this.instance = new cc.EventTarget();
        }
        return this.instance;
    };
    return EventManager;
}());
cc.EventManager = EventManager.getInstance();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcQ29tbW9uXFxzcmNcXEV2ZW50TWFuYWdlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtJQUFBO0lBUUEsQ0FBQztJQU5VLHdCQUFXLEdBQWxCO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDaEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtTQUN2QztRQUNELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQTtJQUN4QixDQUFDO0lBQ0wsbUJBQUM7QUFBRCxDQVJBLEFBUUMsSUFBQTtBQUVELEVBQUUsQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFBIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgRXZlbnRNYW5hZ2VyIHtcclxuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlXHJcbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKXtcclxuICAgICAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBjYy5FdmVudFRhcmdldCgpXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLmluc3RhbmNlXHJcbiAgICB9XHJcbn1cclxuXHJcbmNjLkV2ZW50TWFuYWdlciA9IEV2ZW50TWFuYWdlci5nZXRJbnN0YW5jZSgpXHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/DznSocket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b3ef0yabW5JDJK6FqRw89zo', 'DznSocket');
// Common/src/DznSocket.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DznSocket = void 0;
var ServerRoom_1 = require("./ServerRoom");
exports.DznSocket = new ServerRoom_1.ServerRoom("dzn");

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcQ29tbW9uXFxzcmNcXER6blNvY2tldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwyQ0FBMEM7QUFFN0IsUUFBQSxTQUFTLEdBQUcsSUFBSSx1QkFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VydmVyUm9vbSB9IGZyb20gXCIuL1NlcnZlclJvb21cIjtcclxuXHJcbmV4cG9ydCBjb25zdCBEem5Tb2NrZXQgPSBuZXcgU2VydmVyUm9vbShcImR6blwiKTtcclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/GameSocket.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '4837b1jBpZHWLPuYWXp91zN', 'GameSocket');
// Common/src/GameSocket.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GameSocket = void 0;
var DznSocket_1 = require("./DznSocket");
// 这个类主要目的是给发送接收设置缓存队列 （附加功能 网络延迟的获取）
var GameSocket = /** @class */ (function (_super) {
    __extends(GameSocket, _super);
    function GameSocket() {
        var _this = _super.call(this) || this;
        _this.pUrl = null;
        _this.pWebClient = null;
        _this.pSendData = []; //发送缓冲
        _this.pRecvData = [];
        _this.pSendTime = 0;
        _this.pPing = 0;
        _this.pUrl = null;
        _this.pWebClient = null;
        _this.pSendData = []; //发送缓冲
        _this.pRecvData = [];
        return _this;
        // 开启定时器
        // cc.director.getScheduler().schedule(this.OnMissionUpdate, this, 0, cc.macro.REPEAT_FOREVER, 0, false);
    }
    GameSocket.prototype.getPing = function () {
        return this.pPing;
    };
    GameSocket.prototype.OnConnect = function (url) {
        if (this.pWebClient) {
            console.warn("WebSocket is already create");
            return;
        }
        this.resetData();
        this.pSendTime = 0;
        this.pPing = 0;
        this.pUrl = url;
        this.pWebClient = new WebSocket(url);
        this.pWebClient.binaryType = "arraybuffer";
        console.warn(cc.js.formatStr("WebSocket OnConnect  %s", url));
        var self = this;
        this.pWebClient.onopen = function (ev) {
            console.warn(cc.js.formatStr("WebSocket onopen  %s", url));
            self.flushSend();
            self.pRecvData.push("webClientOnopen");
        };
        this.pWebClient.onmessage = function (msg) {
            self.onRecv(msg);
        };
        this.pWebClient.onerror = function (evt) {
            self.pWebClient = null;
            // console.warn(cc.js.formatStr("WebSocket onerror  %s", url));
            self.pRecvData.push("webClientOnerror");
        };
        this.pWebClient.onclose = function (evt) {
            self.pWebClient = null;
            console.warn(cc.js.formatStr("WebSocket onclose  %s", url));
            self.pRecvData.push("webClientOnclose");
        };
    };
    GameSocket.prototype.getConnect = function () {
        if (this.pWebClient != null &&
            this.pWebClient.readyState == WebSocket.OPEN) {
            return true;
        }
        return false;
    };
    GameSocket.prototype.sendMessage = function (msg) {
        this.pSendData.push(msg);
    };
    ;
    //接收数据
    GameSocket.prototype.onRecv = function (msg) {
        this.pRecvData.push(msg.data);
        if (this.pSendTime != 0) {
            this.pPing = new Date().getTime() - this.pSendTime;
            this.pSendTime = 0;
        }
    };
    // 发送数据
    GameSocket.prototype.flushSend = function () {
        if (this.getConnect()) {
            var data = this.pSendData.shift();
            if (data) {
                this.pWebClient.send(data);
                this.pSendTime = new Date().getTime();
            }
        }
    };
    GameSocket.prototype.flushRecv = function () { };
    GameSocket.prototype.OnMissionUpdate = function () {
        this.flushSend();
        this.flushRecv();
    };
    GameSocket.prototype.resetData = function () {
        this.pSendData = [];
        this.pRecvData = [];
    };
    GameSocket.prototype.closeSocket = function () {
        console.warn("client closeSocket ping pong超时断开连接", this.pWebClient);
        if (this.pWebClient) { //
            this.pWebClient.close();
        }
        else {
            DznSocket_1.DznSocket.OnConnect(DznSocket_1.DznSocket.pUrl);
        }
    };
    return GameSocket;
}(cc.EventTarget));
exports.GameSocket = GameSocket;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/tool.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0c654iL+slHirQEZOgfSYVj', 'tool');
// Common/src/tool.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCardValue2 = exports.getCardValue = exports.getQueryVariable = exports.toWinNumber = exports.toFixed = exports.newEventHandler = exports.registerHoverTips = exports.shuffle = exports.rewardToString = exports.toNodeSpace = exports.toWorldSpace = exports.formatMoney = exports.toWString = exports.randomInt = exports.random = exports.usernameAbbre = exports.getLoaclTime = exports.assert = void 0;
/**
 * 断言方法
 * @param condition 条件为假时输出警告信息：msg
 * @param msg
 */
function assert(condition, msg) {
    if (!condition) {
        cc.warn(msg);
    }
}
exports.assert = assert;
/**获取本机时间 */
function getLoaclTime(time) {
    return new Date(time).toLocaleDateString().replace(/:\d{1,2}$/, " ");
}
exports.getLoaclTime = getLoaclTime;
/**用户名规则 */
function usernameAbbre(account, len) {
    if (len === void 0) { len = 5; }
    assert(account.length > len * 2, "no avilable account account.length <= " + len * 2 + "!");
    return account.slice(0, len) + '...' + account.slice(-len);
}
exports.usernameAbbre = usernameAbbre;
/**
 * 随机值
 * @param min 最小值
 * @param max 最大值
 */
function random(min, max) {
    assert(min < max, 'max >= min');
    return Math.random() * (max - min) + min;
}
exports.random = random;
function randomInt(min, max) {
    assert(min < max, 'max >= min');
    return Math.floor(Math.random() * (max - min + 1)) + min;
}
exports.randomInt = randomInt;
/** 转化为带万的单位 50000 => 5 */
function toWString(money, w, isShowFuhao) {
    if (w === void 0) { w = '万'; }
    if (isShowFuhao === void 0) { isShowFuhao = false; }
    var fuhao = money >= 0 ? "+" : "-";
    money = Math.abs(money);
    var str = money.toString();
    if (money >= 10000) {
        var str1 = (money * 0.0001).toString();
        if (money % 10000 != 0) {
            var index = str1.indexOf(".");
            str = str1.substring(0, index + 2) + "万";
        }
        else {
            str = str1 + "万";
        }
    }
    if (isShowFuhao || fuhao == "-") {
        str = fuhao + str;
    }
    return str;
}
exports.toWString = toWString;
/** 转换成标准货币单位 */
function formatMoney(number, symbol, precision, thousandsSep, decimalSep, format) {
    if (symbol === void 0) { symbol = ''; }
    return window['accounting'].formatMoney(number, symbol, precision, thousandsSep, decimalSep, format);
}
exports.formatMoney = formatMoney;
/** 获取节点的世界坐标 */
function toWorldSpace(node) {
    return node.convertToWorldSpaceAR(cc.Vec2.ZERO);
}
exports.toWorldSpace = toWorldSpace;
/** 获取node2相对于node的局部坐标 */
function toNodeSpace(node, node2) {
    return node.convertToNodeSpaceAR(toWorldSpace(node2));
}
exports.toNodeSpace = toNodeSpace;
/** 输赢金额转带 + -符号的字符串 */
function rewardToString(reward) {
    return (reward < 0 ? reward.toString() : '+' + reward);
}
exports.rewardToString = rewardToString;
/** 数组洗乱 */
function shuffle(arr) {
    var _a;
    var l = arr.length;
    for (var i = l - 1; i >= 0; i--) {
        var j = randomInt(0, i);
        _a = [arr[j], arr[i]], arr[i] = _a[0], arr[j] = _a[1];
    }
}
exports.shuffle = shuffle;
/** 节点注册鼠标停留提示显示事件 */
function registerHoverTips(target, msg, pos, isRight) {
    if (isRight === void 0) { isRight = false; }
    var tips;
    target.on(cc.Node.EventType.MOUSE_ENTER, function () {
        if (isRight) {
            pos = toWorldSpace(target).add(cc.v2(target.width / 2, -target.height / 2));
        }
        else {
            pos = pos || toWorldSpace(target).sub(cc.v2(0, target.height / 2));
        }
        // tips = window.gameController.showHoverTipsPrefab(pos,msg);
        cc.log('MOUSE_ENTER', msg, tips.x, tips.y);
    });
    target.on(cc.Node.EventType.MOUSE_LEAVE, function () {
        if (tips.isValid) {
            tips.destroy();
            cc.log('MOUSE_LEAVE destroy', msg);
        }
    });
}
exports.registerHoverTips = registerHoverTips;
/**自定义事件监听 */
function newEventHandler(componet, handler) {
    var e = new cc.Component.EventHandler();
    e.target = componet.node;
    e.component = componet['__classname__'];
    e.handler = handler;
    return e;
}
exports.newEventHandler = newEventHandler;
/** 四舍五入保留n为小数，返回数字 */
function toFixed(v, n) {
    var p = Math.pow(10, n);
    return Math.round(v * p) / p;
}
exports.toFixed = toFixed;
/** 将数字显示为带符号的字符，正数为红色，负数为绿色*/
function toWinNumber(node, number) {
    var str = "";
    if (number >= 0) {
        str = "+" + toWString(number, "万");
        node.color = cc.color(180, 0, 0);
    }
    else {
        str = toWString(number, "万");
        node.color = cc.color(0, 180, 0);
    }
    node.getComponent(cc.Label).string = str;
}
exports.toWinNumber = toWinNumber;
/** 获取地址栏参数 */
function getQueryVariable(code) {
    var query = window.location.search.substring(1);
    var data = query.split("&");
    for (var index = 0; index < data.length; index++) {
        var pair = data[index].split("=");
        if (pair[0] == code) {
            return pair[1];
        }
    }
    return false;
}
exports.getQueryVariable = getQueryVariable;
/**获取卡片对应值 */
function getCardValue(card) {
    card = card.substring(0, card.length - 1);
    var cards = card.split("_");
    var value = parseInt(cards[1]);
    return value;
}
exports.getCardValue = getCardValue;
/**获取卡片对应值2 */
function getCardValue2(card) {
    card = card.substring(0, card.length - 1);
    var cards = card.split("_");
    var value = parseInt(cards[1]);
    if (value == 11 || value == 12 || value == 13) {
        value = 10;
    }
    return value;
}
exports.getCardValue2 = getCardValue2;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/ServerRoom.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'd8e37/54xxLwZN7IB5h7BAM', 'ServerRoom');
// Common/src/ServerRoom.ts

"use strict";
// 这个主要实现 网络协议解析 及分发
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServerRoom = void 0;
var GameSocket_1 = require("./GameSocket");
var ServerRoom = /** @class */ (function (_super) {
    __extends(ServerRoom, _super);
    function ServerRoom(name) {
        var _this = _super.call(this) || this;
        _this.roomName = "";
        _this.isStopFlushRecv = false;
        _this.recvCache = null;
        _this.listenerOnce = new cc.EventTarget();
        _this.roomName = name;
        _this.recvCache = {};
        return _this;
    }
    ServerRoom.prototype.getCache = function (cmd) {
        return this.recvCache[cmd];
    };
    ServerRoom.prototype.setCache = function (cmd, obj) {
        this.recvCache[cmd] = obj;
    };
    ServerRoom.prototype.setStopFlushRecv = function (bflag) {
        this.isStopFlushRecv = bflag;
    };
    // 发送消息并且传入收消息回调（多次发送消息） 收到消息回调一次 不会通告notify
    ServerRoom.prototype.sendAndRecv = function (obj, rCmdStr, callback) {
        this.listenerOnce.once(rCmdStr, callback);
        this.sendMessage(obj);
    };
    ServerRoom.prototype.sendMessage = function (obj) {
        cc.warn("=> " + obj.cmdKey, obj);
        _super.prototype.sendMessage.call(this, JSON.stringify(obj));
    };
    // 分发数据
    ServerRoom.prototype.flushRecv = function () {
        if (this.isStopFlushRecv) {
            return;
        }
        var text = this.pRecvData.shift();
        if (text == null) {
            return;
        }
        var obj = { cmdKey: null };
        try {
            obj = JSON.parse(text);
        }
        catch (error) {
            obj.cmdKey = text;
        }
        this.notify(obj.cmdKey, obj);
    };
    ServerRoom.prototype.notify = function (cmd, obj, isSys) {
        if (isSys === void 0) { isSys = false; }
        cc.log("<= " + cmd, obj);
        this.recvCache[cmd] = obj;
        if (this.listenerOnce.hasEventListener(cmd)) {
            this.listenerOnce.emit(cmd, obj, isSys);
            return;
        }
        this.emit(cmd, obj, isSys);
        cc.EventManager.emit(cmd, obj);
    };
    ServerRoom.prototype.resetData = function () {
        this.recvCache = {};
        _super.prototype.resetData.call(this);
    };
    return ServerRoom;
}(GameSocket_1.GameSocket));
exports.ServerRoom = ServerRoom;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcQ29tbW9uXFxzcmNcXFNlcnZlclJvb20udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9CQUFvQjs7Ozs7Ozs7Ozs7Ozs7OztBQUVwQiwyQ0FBeUM7QUFHekM7SUFBZ0MsOEJBQVU7SUFPdEMsb0JBQVksSUFBWTtRQUF4QixZQUNJLGlCQUFPLFNBR1Y7UUFURCxjQUFRLEdBQVcsRUFBRSxDQUFDO1FBQ3RCLHFCQUFlLEdBQVksS0FBSyxDQUFDO1FBQ2pDLGVBQVMsR0FBUSxJQUFJLENBQUM7UUFDdEIsa0JBQVksR0FBbUIsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7UUFJaEQsS0FBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsS0FBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7O0lBQ3hCLENBQUM7SUFFRCw2QkFBUSxHQUFSLFVBQVMsR0FBVztRQUNoQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUE7SUFDOUIsQ0FBQztJQUVELDZCQUFRLEdBQVIsVUFBUyxHQUFXLEVBQUUsR0FBUTtRQUMxQixJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsQ0FBQztJQUM5QixDQUFDO0lBRUQscUNBQWdCLEdBQWhCLFVBQWlCLEtBQWM7UUFDM0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUM7SUFDakMsQ0FBQztJQUVELDRDQUE0QztJQUM1QyxnQ0FBVyxHQUFYLFVBQVksR0FBUSxFQUFFLE9BQWUsRUFBRSxRQUE4RTtRQUNqSCxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDMUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRUQsZ0NBQVcsR0FBWCxVQUFZLEdBQVE7UUFDaEIsRUFBRSxDQUFDLElBQUksQ0FBQyxRQUFNLEdBQUcsQ0FBQyxNQUFRLEVBQUcsR0FBRyxDQUFDLENBQUE7UUFDakMsaUJBQU0sV0FBVyxZQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMzQyxDQUFDO0lBRUQsT0FBTztJQUNQLDhCQUFTLEdBQVQ7UUFDSSxJQUFJLElBQUksQ0FBQyxlQUFlLEVBQUU7WUFDdEIsT0FBTTtTQUNUO1FBQ0QsSUFBSSxJQUFJLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNsQyxJQUFJLElBQUksSUFBSSxJQUFJLEVBQUU7WUFDZCxPQUFPO1NBQ1Y7UUFDRCxJQUFJLEdBQUcsR0FBRyxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUMsQ0FBQztRQUN4QixJQUFJO1lBQ0EsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDMUI7UUFBQyxPQUFPLEtBQUssRUFBRTtZQUNaLEdBQUcsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1NBQ3JCO1FBQ0QsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCwyQkFBTSxHQUFOLFVBQU8sR0FBVyxFQUFFLEdBQVEsRUFBRSxLQUFxQjtRQUFyQixzQkFBQSxFQUFBLGFBQXFCO1FBQy9DLEVBQUUsQ0FBQyxHQUFHLENBQUMsUUFBTSxHQUFLLEVBQUUsR0FBRyxDQUFDLENBQUE7UUFDeEIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUM7UUFDMUIsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ3pDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDeEMsT0FBTztTQUNWO1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzNCLEVBQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBQyxHQUFHLENBQUMsQ0FBQTtJQUNqQyxDQUFDO0lBRUQsOEJBQVMsR0FBVDtRQUNJLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ3BCLGlCQUFNLFNBQVMsV0FBRSxDQUFDO0lBQ3RCLENBQUM7SUFFTCxpQkFBQztBQUFELENBdkVBLEFBdUVDLENBdkUrQix1QkFBVSxHQXVFekM7QUF2RVksZ0NBQVUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyDov5nkuKrkuLvopoHlrp7njrAg572R57uc5Y2P6K6u6Kej5p6QIOWPiuWIhuWPkVxyXG5cclxuaW1wb3J0IHsgR2FtZVNvY2tldCB9IGZyb20gXCIuL0dhbWVTb2NrZXRcIlxyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBTZXJ2ZXJSb29tIGV4dGVuZHMgR2FtZVNvY2tldCB7XHJcblxyXG4gICAgcm9vbU5hbWU6IHN0cmluZyA9IFwiXCI7XHJcbiAgICBpc1N0b3BGbHVzaFJlY3Y6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHJlY3ZDYWNoZTogYW55ID0gbnVsbDtcclxuICAgIGxpc3RlbmVyT25jZTogY2MuRXZlbnRUYXJnZXQgPSBuZXcgY2MuRXZlbnRUYXJnZXQoKTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcpe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5yb29tTmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5yZWN2Q2FjaGUgPSB7fTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDYWNoZShjbWQ6IHN0cmluZykge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnJlY3ZDYWNoZVtjbWRdXHJcbiAgICB9XHJcblxyXG4gICAgc2V0Q2FjaGUoY21kOiBzdHJpbmcsIG9iajogYW55KSB7XHJcbiAgICAgICAgdGhpcy5yZWN2Q2FjaGVbY21kXSA9IG9iajtcclxuICAgIH1cclxuXHJcbiAgICBzZXRTdG9wRmx1c2hSZWN2KGJmbGFnOiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5pc1N0b3BGbHVzaFJlY3YgPSBiZmxhZztcclxuICAgIH1cclxuXHJcbiAgICAvLyDlj5HpgIHmtojmga/lubbkuJTkvKDlhaXmlLbmtojmga/lm57osIPvvIjlpJrmrKHlj5HpgIHmtojmga/vvIkg5pS25Yiw5raI5oGv5Zue6LCD5LiA5qyhIOS4jeS8mumAmuWRim5vdGlmeVxyXG4gICAgc2VuZEFuZFJlY3Yob2JqOiBhbnksIHJDbWRTdHI6IHN0cmluZywgY2FsbGJhY2s6IChhcmcxPzogYW55LCBhcmcyPzogYW55LCBhcmczPzogYW55LCBhcmc0PzogYW55LCBhcmc1PzogYW55KSA9PiB2b2lkLCApIHtcclxuICAgICAgICB0aGlzLmxpc3RlbmVyT25jZS5vbmNlKHJDbWRTdHIsIGNhbGxiYWNrKTtcclxuICAgICAgICB0aGlzLnNlbmRNZXNzYWdlKG9iaik7XHJcbiAgICB9XHJcblxyXG4gICAgc2VuZE1lc3NhZ2Uob2JqOiBhbnkpIHtcclxuICAgICAgICBjYy53YXJuKGA9PiAke29iai5jbWRLZXl9YCAsIG9iailcclxuICAgICAgICBzdXBlci5zZW5kTWVzc2FnZShKU09OLnN0cmluZ2lmeShvYmopKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyDliIblj5HmlbDmja5cclxuICAgIGZsdXNoUmVjdigpIHtcclxuICAgICAgICBpZiAodGhpcy5pc1N0b3BGbHVzaFJlY3YpIHtcclxuICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCB0ZXh0ID0gdGhpcy5wUmVjdkRhdGEuc2hpZnQoKTtcclxuICAgICAgICBpZiAodGV4dCA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHJldHVybjsgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBvYmogPSB7Y21kS2V5Om51bGx9O1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIG9iaiA9IEpTT04ucGFyc2UodGV4dCk7ICAgICAgICAgXHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgb2JqLmNtZEtleSA9IHRleHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubm90aWZ5KG9iai5jbWRLZXksIG9iaik7IFxyXG4gICAgfVxyXG5cclxuICAgIG5vdGlmeShjbWQ6IHN0cmluZywgb2JqOiBhbnksIGlzU3lzOmJvb2xlYW4gPSBmYWxzZSkge1xyXG4gICAgICAgIGNjLmxvZyhgPD0gJHtjbWR9YCwgb2JqKVxyXG4gICAgICAgIHRoaXMucmVjdkNhY2hlW2NtZF0gPSBvYmo7XHJcbiAgICAgICAgaWYgKHRoaXMubGlzdGVuZXJPbmNlLmhhc0V2ZW50TGlzdGVuZXIoY21kKSkge1xyXG4gICAgICAgICAgICB0aGlzLmxpc3RlbmVyT25jZS5lbWl0KGNtZCwgb2JqLCBpc1N5cyk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5lbWl0KGNtZCwgb2JqLCBpc1N5cyk7XHJcbiAgICAgICAgY2MuRXZlbnRNYW5hZ2VyLmVtaXQoY21kLG9iailcclxuICAgIH1cclxuXHJcbiAgICByZXNldERhdGEoKSB7XHJcbiAgICAgICAgdGhpcy5yZWN2Q2FjaGUgPSB7fTtcclxuICAgICAgICBzdXBlci5yZXNldERhdGEoKTtcclxuICAgIH1cclxuXHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/StandardButton.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ec74apzmV5E27sU4swbMP4z', 'StandardButton');
// Common/src/StandardButton.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
// import AudioManager from "../utils/AudioManager";
var AudioManage_1 = require("./AudioManage");
var AudioConfig_1 = require("./AudioConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property, requireComponent = _a.requireComponent, menu = _a.menu;
/** 标准按钮拓展组件 */
var StandardButton = /** @class */ (function (_super) {
    __extends(StandardButton, _super);
    function StandardButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.scaleTransition = true;
        _this.clickSound = true;
        _this.clickInvalid = true;
        return _this;
    }
    StandardButton.prototype.onLoad = function () {
        var _this = this;
        var btn = this.btn = this.getComponent(cc.Button);
        if (this.scaleTransition) {
            btn.transition = cc.Button.Transition.SCALE;
            btn.zoomScale = 0.9;
        }
        if (this.clickSound || this.clickInvalid) {
            var _onTouchEnded_1 = btn['_onTouchEnded'].bind(btn);
            var touchEnable_1 = true;
            btn['_onTouchEnded'] = function (e) {
                if (_this.clickInvalid) {
                    if (!touchEnable_1)
                        return cc.log('clickInvalid');
                    touchEnable_1 = false;
                    _this.scheduleOnce(function () {
                        touchEnable_1 = true;
                    }, 0.3);
                }
                if (_this.clickSound) {
                    // cc.warn('clickSound');
                    // AudioManager.playClickEffect();
                    AudioManage_1.AudioManage.playEffect(AudioConfig_1.default.effect_button_click);
                    // AudioManager.playEffectAsyncBySrc(bcnnAudio.vRedblackStar);
                }
                _onTouchEnded_1(e);
            };
        }
    };
    __decorate([
        property({
            tooltip: '增加标准点击缩放效果'
        })
    ], StandardButton.prototype, "scaleTransition", void 0);
    __decorate([
        property({
            tooltip: '增加点击音效'
        })
    ], StandardButton.prototype, "clickSound", void 0);
    __decorate([
        property({
            tooltip: '防止短时间内点击多次，增加点击后短暂的按钮无效'
        })
    ], StandardButton.prototype, "clickInvalid", void 0);
    StandardButton = __decorate([
        ccclass,
        menu('Custom/StandardButton'),
        requireComponent(cc.Button)
    ], StandardButton);
    return StandardButton;
}(cc.Component));
exports.default = StandardButton;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcQ29tbW9uXFxzcmNcXFN0YW5kYXJkQnV0dG9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLG9EQUFvRDtBQUNwRCw2Q0FBMkM7QUFDM0MsNkNBQXVDO0FBQ2pDLElBQUEsS0FBZ0QsRUFBRSxDQUFDLFVBQVUsRUFBM0QsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFBLEVBQUUsZ0JBQWdCLHNCQUFBLEVBQUUsSUFBSSxVQUFrQixDQUFDO0FBRXBFLGVBQWU7QUFJZjtJQUE0QyxrQ0FBWTtJQUF4RDtRQUFBLHFFQWlEQztRQTVDRyxxQkFBZSxHQUFHLElBQUksQ0FBQztRQUt2QixnQkFBVSxHQUFHLElBQUksQ0FBQztRQUtsQixrQkFBWSxHQUFHLElBQUksQ0FBQzs7SUFrQ3hCLENBQUM7SUE5QkcsK0JBQU0sR0FBTjtRQUFBLGlCQTRCQztRQTNCRyxJQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3BELElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN0QixHQUFHLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQztZQUM1QyxHQUFHLENBQUMsU0FBUyxHQUFHLEdBQUcsQ0FBQztTQUN2QjtRQUVELElBQUksSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsWUFBWSxFQUFFO1lBQ3RDLElBQU0sZUFBYSxHQUFhLEdBQUcsQ0FBQyxlQUFlLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDL0QsSUFBSSxhQUFXLEdBQUcsSUFBSSxDQUFDO1lBQ3ZCLEdBQUcsQ0FBQyxlQUFlLENBQUMsR0FBRyxVQUFDLENBQUM7Z0JBQ3JCLElBQUksS0FBSSxDQUFDLFlBQVksRUFBRTtvQkFDbkIsSUFBSSxDQUFDLGFBQVc7d0JBQUUsT0FBTyxFQUFFLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO29CQUNoRCxhQUFXLEdBQUcsS0FBSyxDQUFDO29CQUNwQixLQUFJLENBQUMsWUFBWSxDQUFDO3dCQUNkLGFBQVcsR0FBRyxJQUFJLENBQUM7b0JBQ3ZCLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQTtpQkFDVjtnQkFDRCxJQUFJLEtBQUksQ0FBQyxVQUFVLEVBQUU7b0JBQ2pCLHlCQUF5QjtvQkFDekIsa0NBQWtDO29CQUNsQyx5QkFBVyxDQUFDLFVBQVUsQ0FBQyxxQkFBVyxDQUFDLG1CQUFtQixDQUFDLENBQUM7b0JBQ3hELDhEQUE4RDtpQkFDakU7Z0JBQ0QsZUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3JCLENBQUMsQ0FBQTtTQUNKO0lBRUwsQ0FBQztJQTFDRDtRQUhDLFFBQVEsQ0FBQztZQUNOLE9BQU8sRUFBRSxZQUFZO1NBQ3hCLENBQUM7MkRBQ3FCO0lBS3ZCO1FBSEMsUUFBUSxDQUFDO1lBQ04sT0FBTyxFQUFFLFFBQVE7U0FDcEIsQ0FBQztzREFDZ0I7SUFLbEI7UUFIQyxRQUFRLENBQUM7WUFDTixPQUFPLEVBQUUseUJBQXlCO1NBQ3JDLENBQUM7d0RBQ2tCO0lBZkgsY0FBYztRQUhsQyxPQUFPO1FBQ1AsSUFBSSxDQUFDLHVCQUF1QixDQUFDO1FBQzdCLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7T0FDUCxjQUFjLENBaURsQztJQUFELHFCQUFDO0NBakRELEFBaURDLENBakQyQyxFQUFFLENBQUMsU0FBUyxHQWlEdkQ7a0JBakRvQixjQUFjIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IEF1ZGlvTWFuYWdlciBmcm9tIFwiLi4vdXRpbHMvQXVkaW9NYW5hZ2VyXCI7XHJcbmltcG9ydCB7IEF1ZGlvTWFuYWdlIH0gZnJvbSBcIi4vQXVkaW9NYW5hZ2VcIlxyXG5pbXBvcnQgYXVkaW9Db25maWcgZnJvbSBcIi4vQXVkaW9Db25maWdcIlxyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5LCByZXF1aXJlQ29tcG9uZW50LCBtZW51IH0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuLyoqIOagh+WHhuaMiemSruaLk+Wxlee7hOS7tiAqL1xyXG5AY2NjbGFzc1xyXG5AbWVudSgnQ3VzdG9tL1N0YW5kYXJkQnV0dG9uJylcclxuQHJlcXVpcmVDb21wb25lbnQoY2MuQnV0dG9uKVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdGFuZGFyZEJ1dHRvbiBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgQHByb3BlcnR5KHtcclxuICAgICAgICB0b29sdGlwOiAn5aKe5Yqg5qCH5YeG54K55Ye757yp5pS+5pWI5p6cJ1xyXG4gICAgfSlcclxuICAgIHNjYWxlVHJhbnNpdGlvbiA9IHRydWU7XHJcblxyXG4gICAgQHByb3BlcnR5KHtcclxuICAgICAgICB0b29sdGlwOiAn5aKe5Yqg54K55Ye76Z+z5pWIJ1xyXG4gICAgfSlcclxuICAgIGNsaWNrU291bmQgPSB0cnVlO1xyXG5cclxuICAgIEBwcm9wZXJ0eSh7XHJcbiAgICAgICAgdG9vbHRpcDogJ+mYsuatouefreaXtumXtOWGheeCueWHu+Wkmuasoe+8jOWinuWKoOeCueWHu+WQjuefreaagueahOaMiemSruaXoOaViCdcclxuICAgIH0pXHJcbiAgICBjbGlja0ludmFsaWQgPSB0cnVlO1xyXG5cclxuICAgIGJ0bjogY2MuQnV0dG9uO1xyXG5cclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICBjb25zdCBidG4gPSB0aGlzLmJ0biA9IHRoaXMuZ2V0Q29tcG9uZW50KGNjLkJ1dHRvbik7XHJcbiAgICAgICAgaWYgKHRoaXMuc2NhbGVUcmFuc2l0aW9uKSB7XHJcbiAgICAgICAgICAgIGJ0bi50cmFuc2l0aW9uID0gY2MuQnV0dG9uLlRyYW5zaXRpb24uU0NBTEU7XHJcbiAgICAgICAgICAgIGJ0bi56b29tU2NhbGUgPSAwLjk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5jbGlja1NvdW5kIHx8IHRoaXMuY2xpY2tJbnZhbGlkKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IF9vblRvdWNoRW5kZWQ6IEZ1bmN0aW9uID0gYnRuWydfb25Ub3VjaEVuZGVkJ10uYmluZChidG4pO1xyXG4gICAgICAgICAgICBsZXQgdG91Y2hFbmFibGUgPSB0cnVlO1xyXG4gICAgICAgICAgICBidG5bJ19vblRvdWNoRW5kZWQnXSA9IChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5jbGlja0ludmFsaWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXRvdWNoRW5hYmxlKSByZXR1cm4gY2MubG9nKCdjbGlja0ludmFsaWQnKTtcclxuICAgICAgICAgICAgICAgICAgICB0b3VjaEVuYWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVPbmNlKCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdG91Y2hFbmFibGUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIH0sIDAuMylcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNsaWNrU291bmQpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBjYy53YXJuKCdjbGlja1NvdW5kJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gQXVkaW9NYW5hZ2VyLnBsYXlDbGlja0VmZmVjdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIEF1ZGlvTWFuYWdlLnBsYXlFZmZlY3QoYXVkaW9Db25maWcuZWZmZWN0X2J1dHRvbl9jbGljayk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gQXVkaW9NYW5hZ2VyLnBsYXlFZmZlY3RBc3luY0J5U3JjKGJjbm5BdWRpby52UmVkYmxhY2tTdGFyKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIF9vblRvdWNoRW5kZWQoZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/heartBeat.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '973d9bzH+1KzaambgYeCFFW', 'heartBeat');
// Script/component/heartBeat.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var DznSocket_1 = require("../../Common/src/DznSocket");
var serverTime_1 = require("./serverTime");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var heartBeat = /** @class */ (function (_super) {
    __extends(heartBeat, _super);
    function heartBeat() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.interval = 5;
        _this.time = 0;
        _this.maxTime = 3;
        return _this;
    }
    heartBeat.prototype.onLoad = function () {
        DznSocket_1.DznSocket.on("JOIN_DESK_ACK", this.JOIN_DESK_ACK, this);
        DznSocket_1.DznSocket.on("PONG", this.PONG, this);
    };
    heartBeat.prototype.onDestroy = function () {
        DznSocket_1.DznSocket.targetOff(this);
    };
    heartBeat.prototype.JOIN_DESK_ACK = function (v) {
        var _this = this;
        this.unscheduleAllCallbacks();
        var sendBeat = function () {
            _this.time++;
            // 心跳超过次数 关闭网络 重连在场景中处理
            if (_this.time > _this.maxTime) {
                _this.unscheduleAllCallbacks();
                _this.time = 0;
                DznSocket_1.DznSocket.closeSocket();
                return;
            }
            if (!DznSocket_1.DznSocket.getConnect()) {
                _this.unscheduleAllCallbacks();
                return;
            }
            DznSocket_1.DznSocket.sendMessage({
                cmdKey: "PING",
                clientTime: Date.now(),
            });
        };
        sendBeat();
        this.schedule(sendBeat, this.interval);
    };
    heartBeat.prototype.PONG = function (v) {
        this.time = 0;
        serverTime_1.default.setOffsetTime(v);
    };
    __decorate([
        property
    ], heartBeat.prototype, "interval", void 0);
    __decorate([
        property
    ], heartBeat.prototype, "time", void 0);
    __decorate([
        property
    ], heartBeat.prototype, "maxTime", void 0);
    heartBeat = __decorate([
        ccclass
    ], heartBeat);
    return heartBeat;
}(cc.Component));
exports.default = heartBeat;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxjb21wb25lbnRcXGhlYXJ0QmVhdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx3REFBc0Q7QUFDdEQsMkNBQXFDO0FBRS9CLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQXVDLDZCQUFZO0lBQW5EO1FBQUEscUVBcURDO1FBbERHLGNBQVEsR0FBVyxDQUFDLENBQUM7UUFHckIsVUFBSSxHQUFXLENBQUMsQ0FBQztRQUdqQixhQUFPLEdBQVcsQ0FBQyxDQUFDOztJQTRDeEIsQ0FBQztJQTFDRywwQkFBTSxHQUFOO1FBQ0kscUJBQVMsQ0FBQyxFQUFFLENBQUMsZUFBZSxFQUFFLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDeEQscUJBQVMsQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELDZCQUFTLEdBQVQ7UUFDSSxxQkFBUyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM5QixDQUFDO0lBRUQsaUNBQWEsR0FBYixVQUFjLENBQXdCO1FBQXRDLGlCQTJCQztRQXpCRyxJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztRQUU5QixJQUFJLFFBQVEsR0FBRztZQUNYLEtBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNaLHVCQUF1QjtZQUN2QixJQUFJLEtBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSSxDQUFDLE9BQU8sRUFBRTtnQkFDMUIsS0FBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7Z0JBQzlCLEtBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO2dCQUNkLHFCQUFTLENBQUMsV0FBVyxFQUFFLENBQUM7Z0JBQ3hCLE9BQU87YUFDVjtZQUVELElBQUksQ0FBQyxxQkFBUyxDQUFDLFVBQVUsRUFBRSxFQUFFO2dCQUN6QixLQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztnQkFDOUIsT0FBTzthQUNWO1lBRUQscUJBQVMsQ0FBQyxXQUFXLENBQUM7Z0JBQ2xCLE1BQU0sRUFBRSxNQUFNO2dCQUNkLFVBQVUsRUFBRSxJQUFJLENBQUMsR0FBRyxFQUFFO2FBQ3pCLENBQUMsQ0FBQTtRQUVOLENBQUMsQ0FBQztRQUNGLFFBQVEsRUFBRSxDQUFDO1FBQ1gsSUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCx3QkFBSSxHQUFKLFVBQUssQ0FBZTtRQUNoQixJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQztRQUNkLG9CQUFVLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2hDLENBQUM7SUFqREQ7UUFEQyxRQUFROytDQUNZO0lBR3JCO1FBREMsUUFBUTsyQ0FDUTtJQUdqQjtRQURDLFFBQVE7OENBQ1c7SUFUSCxTQUFTO1FBRDdCLE9BQU87T0FDYSxTQUFTLENBcUQ3QjtJQUFELGdCQUFDO0NBckRELEFBcURDLENBckRzQyxFQUFFLENBQUMsU0FBUyxHQXFEbEQ7a0JBckRvQixTQUFTIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRHpuU29ja2V0IH0gZnJvbSBcIi4uLy4uL0NvbW1vbi9zcmMvRHpuU29ja2V0XCJcclxuaW1wb3J0IHNlcnZlclRpbWUgZnJvbSBcIi4vc2VydmVyVGltZVwiXHJcbmltcG9ydCB7IGdhbWVEYXRhIH0gZnJvbSBcIi4vZ2FtZURhdGFcIjtcclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIGhlYXJ0QmVhdCBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcblxyXG4gICAgQHByb3BlcnR5XHJcbiAgICBpbnRlcnZhbDogbnVtYmVyID0gNTtcclxuXHJcbiAgICBAcHJvcGVydHlcclxuICAgIHRpbWU6IG51bWJlciA9IDA7XHJcblxyXG4gICAgQHByb3BlcnR5XHJcbiAgICBtYXhUaW1lOiBudW1iZXIgPSAzO1xyXG5cclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICBEem5Tb2NrZXQub24oXCJKT0lOX0RFU0tfQUNLXCIsIHRoaXMuSk9JTl9ERVNLX0FDSywgdGhpcyk7XHJcbiAgICAgICAgRHpuU29ja2V0Lm9uKFwiUE9OR1wiLCB0aGlzLlBPTkcsIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRGVzdHJveSgpIHtcclxuICAgICAgICBEem5Tb2NrZXQudGFyZ2V0T2ZmKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIEpPSU5fREVTS19BQ0sodjogYXBpRGF0YS5qb2luX2Rlc2tfYWNrKSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy51bnNjaGVkdWxlQWxsQ2FsbGJhY2tzKCk7XHJcblxyXG4gICAgICAgIGxldCBzZW5kQmVhdCA9ICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy50aW1lKys7XHJcbiAgICAgICAgICAgIC8vIOW/g+i3s+i2hei/h+asoeaVsCDlhbPpl63nvZHnu5wg6YeN6L+e5Zyo5Zy65pmv5Lit5aSE55CGXHJcbiAgICAgICAgICAgIGlmICh0aGlzLnRpbWUgPiB0aGlzLm1heFRpbWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudW5zY2hlZHVsZUFsbENhbGxiYWNrcygpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy50aW1lID0gMDtcclxuICAgICAgICAgICAgICAgIER6blNvY2tldC5jbG9zZVNvY2tldCgpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAoIUR6blNvY2tldC5nZXRDb25uZWN0KCkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudW5zY2hlZHVsZUFsbENhbGxiYWNrcygpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBEem5Tb2NrZXQuc2VuZE1lc3NhZ2Uoe1xyXG4gICAgICAgICAgICAgICAgY21kS2V5OiBcIlBJTkdcIixcclxuICAgICAgICAgICAgICAgIGNsaWVudFRpbWU6IERhdGUubm93KCksXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgIH07XHJcbiAgICAgICAgc2VuZEJlYXQoKTtcclxuICAgICAgICB0aGlzLnNjaGVkdWxlKHNlbmRCZWF0LCB0aGlzLmludGVydmFsKTtcclxuICAgIH1cclxuXHJcbiAgICBQT05HKHY6IGFwaURhdGEucG9uZykge1xyXG4gICAgICAgIHRoaXMudGltZSA9IDA7XHJcbiAgICAgICAgc2VydmVyVGltZS5zZXRPZmZzZXRUaW1lKHYpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/AudioConfig.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '21c575Mf9BOqJQ4cy8t6hSX', 'AudioConfig');
// Common/src/AudioConfig.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var dznAudio = /** @class */ (function () {
    function dznAudio() {
    }
    dznAudio.preload = function () {
        if (this.isPreload)
            return;
        this.isPreload = true;
        var arr = [
            this.coins_fly,
            this.effect_betStart,
            this.effect_betEnd,
            this.effect_flipCard,
            this.effect_sendCard,
        ];
        cc.resources.preload(arr, cc.AudioClip);
    };
    dznAudio.coins_fly = "audio/coins_fly";
    dznAudio.coins_to_table = "audio/chips_to_table";
    dznAudio.game_start = "audio/gamestart";
    dznAudio.jackpot_win = "audio/jackpot_win";
    dznAudio.sit = "audio/sit";
    dznAudio.random_banker = "audio/random_banker";
    dznAudio.random_banker_lianxu = "audio/random_banker_lianxu";
    dznAudio.effect_betStart = "audio/effect_betStart";
    dznAudio.effect_betEnd = "audio/effect_betEnd";
    dznAudio.effect_flipCard = "audio/effect_flipCard";
    dznAudio.effect_sendCard = "audio/effect_sendCard";
    dznAudio.effect_jiabei = "audio/effect_jiabei";
    dznAudio.effect_auto_fanpai = "audio/effect_dagou";
    dznAudio.effect_win_all = "audio/f0_quanying";
    dznAudio.effect_lose_all = "audio/f0_quanshu";
    dznAudio.effect_getReward = "audio/effect_getReward";
    dznAudio.effect_lottery = "audio/effect_lottery";
    dznAudio.effect_turnLottery = "audio/effect_turnLottery";
    //点击按钮
    dznAudio.effect_button_click = "audio/click_button";
    //关闭按钮
    dznAudio.effect_button_close = "audio/click_close";
    dznAudio.effect_coin_big = "audio/coin_big";
    //红包提示
    dznAudio.effect_hb_begin = "audio/hb_begin";
    //红包雨
    dznAudio.effect_hb_rain = "audio/hb_rain";
    //红包输
    dznAudio.effect_hb_lose = "audio/coin_hb_lose";
    //红包赢
    dznAudio.effect_hb_win = "audio/win";
    dznAudio.bgm = ["audio/table_bgm1", "audio/table_bgm2", "audio/table_bgm3", "audio/table_bgm4", "audio/table_bgm5", "audio/table_bgm6"];
    dznAudio.isPreload = false;
    return dznAudio;
}());
exports.default = dznAudio;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcQ29tbW9uXFxzcmNcXEF1ZGlvQ29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ0E7SUFBQTtJQWtEQSxDQUFDO0lBWlUsZ0JBQU8sR0FBZDtRQUNJLElBQUksSUFBSSxDQUFDLFNBQVM7WUFBRSxPQUFPO1FBQzNCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLElBQU0sR0FBRyxHQUFHO1lBQ1IsSUFBSSxDQUFDLFNBQVM7WUFDZCxJQUFJLENBQUMsZUFBZTtZQUNwQixJQUFJLENBQUMsYUFBYTtZQUNsQixJQUFJLENBQUMsZUFBZTtZQUNwQixJQUFJLENBQUMsZUFBZTtTQUN2QixDQUFBO1FBQ0QsRUFBRSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBL0NNLGtCQUFTLEdBQUcsaUJBQWlCLENBQUM7SUFDOUIsdUJBQWMsR0FBRyxzQkFBc0IsQ0FBQztJQUN4QyxtQkFBVSxHQUFHLGlCQUFpQixDQUFDO0lBQy9CLG9CQUFXLEdBQUcsbUJBQW1CLENBQUM7SUFDbEMsWUFBRyxHQUFHLFdBQVcsQ0FBQztJQUNsQixzQkFBYSxHQUFHLHFCQUFxQixDQUFDO0lBQ3RDLDZCQUFvQixHQUFHLDRCQUE0QixDQUFDO0lBQ3BELHdCQUFlLEdBQUcsdUJBQXVCLENBQUM7SUFDMUMsc0JBQWEsR0FBRyxxQkFBcUIsQ0FBQztJQUN0Qyx3QkFBZSxHQUFHLHVCQUF1QixDQUFDO0lBQzFDLHdCQUFlLEdBQUcsdUJBQXVCLENBQUM7SUFDMUMsc0JBQWEsR0FBRyxxQkFBcUIsQ0FBQztJQUN0QywyQkFBa0IsR0FBRyxvQkFBb0IsQ0FBQztJQUMxQyx1QkFBYyxHQUFHLG1CQUFtQixDQUFDO0lBQ3JDLHdCQUFlLEdBQUcsa0JBQWtCLENBQUM7SUFDckMseUJBQWdCLEdBQUcsd0JBQXdCLENBQUM7SUFDNUMsdUJBQWMsR0FBRyxzQkFBc0IsQ0FBQztJQUN4QywyQkFBa0IsR0FBRywwQkFBMEIsQ0FBQztJQUV2RCxNQUFNO0lBQ0MsNEJBQW1CLEdBQUcsb0JBQW9CLENBQUM7SUFDbEQsTUFBTTtJQUNDLDRCQUFtQixHQUFHLG1CQUFtQixDQUFDO0lBQzFDLHdCQUFlLEdBQUcsZ0JBQWdCLENBQUM7SUFDMUMsTUFBTTtJQUNDLHdCQUFlLEdBQUcsZ0JBQWdCLENBQUM7SUFDMUMsS0FBSztJQUNFLHVCQUFjLEdBQUcsZUFBZSxDQUFDO0lBQ3hDLEtBQUs7SUFDRSx1QkFBYyxHQUFHLG9CQUFvQixDQUFDO0lBQzdDLEtBQUs7SUFDRSxzQkFBYSxHQUFHLFdBQVcsQ0FBQztJQUU1QixZQUFHLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsRUFBRSxrQkFBa0IsQ0FBQyxDQUFBO0lBRTlILGtCQUFTLEdBQUcsS0FBSyxDQUFDO0lBYTdCLGVBQUM7Q0FsREQsQUFrREMsSUFBQTtrQkFsRG9CLFFBQVEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgZHpuQXVkaW8ge1xyXG5cclxuICAgIHN0YXRpYyBjb2luc19mbHkgPSBcImF1ZGlvL2NvaW5zX2ZseVwiO1xyXG4gICAgc3RhdGljIGNvaW5zX3RvX3RhYmxlID0gXCJhdWRpby9jaGlwc190b190YWJsZVwiO1xyXG4gICAgc3RhdGljIGdhbWVfc3RhcnQgPSBcImF1ZGlvL2dhbWVzdGFydFwiO1xyXG4gICAgc3RhdGljIGphY2twb3Rfd2luID0gXCJhdWRpby9qYWNrcG90X3dpblwiO1xyXG4gICAgc3RhdGljIHNpdCA9IFwiYXVkaW8vc2l0XCI7XHJcbiAgICBzdGF0aWMgcmFuZG9tX2JhbmtlciA9IFwiYXVkaW8vcmFuZG9tX2JhbmtlclwiO1xyXG4gICAgc3RhdGljIHJhbmRvbV9iYW5rZXJfbGlhbnh1ID0gXCJhdWRpby9yYW5kb21fYmFua2VyX2xpYW54dVwiO1xyXG4gICAgc3RhdGljIGVmZmVjdF9iZXRTdGFydCA9IFwiYXVkaW8vZWZmZWN0X2JldFN0YXJ0XCI7XHJcbiAgICBzdGF0aWMgZWZmZWN0X2JldEVuZCA9IFwiYXVkaW8vZWZmZWN0X2JldEVuZFwiO1xyXG4gICAgc3RhdGljIGVmZmVjdF9mbGlwQ2FyZCA9IFwiYXVkaW8vZWZmZWN0X2ZsaXBDYXJkXCI7XHJcbiAgICBzdGF0aWMgZWZmZWN0X3NlbmRDYXJkID0gXCJhdWRpby9lZmZlY3Rfc2VuZENhcmRcIjtcclxuICAgIHN0YXRpYyBlZmZlY3RfamlhYmVpID0gXCJhdWRpby9lZmZlY3RfamlhYmVpXCI7XHJcbiAgICBzdGF0aWMgZWZmZWN0X2F1dG9fZmFucGFpID0gXCJhdWRpby9lZmZlY3RfZGFnb3VcIjtcclxuICAgIHN0YXRpYyBlZmZlY3Rfd2luX2FsbCA9IFwiYXVkaW8vZjBfcXVhbnlpbmdcIjtcclxuICAgIHN0YXRpYyBlZmZlY3RfbG9zZV9hbGwgPSBcImF1ZGlvL2YwX3F1YW5zaHVcIjtcclxuICAgIHN0YXRpYyBlZmZlY3RfZ2V0UmV3YXJkID0gXCJhdWRpby9lZmZlY3RfZ2V0UmV3YXJkXCI7XHJcbiAgICBzdGF0aWMgZWZmZWN0X2xvdHRlcnkgPSBcImF1ZGlvL2VmZmVjdF9sb3R0ZXJ5XCI7XHJcbiAgICBzdGF0aWMgZWZmZWN0X3R1cm5Mb3R0ZXJ5ID0gXCJhdWRpby9lZmZlY3RfdHVybkxvdHRlcnlcIjtcclxuXHJcbiAgICAvL+eCueWHu+aMiemSrlxyXG4gICAgc3RhdGljIGVmZmVjdF9idXR0b25fY2xpY2sgPSBcImF1ZGlvL2NsaWNrX2J1dHRvblwiO1xyXG4gICAgLy/lhbPpl63mjInpkq5cclxuICAgIHN0YXRpYyBlZmZlY3RfYnV0dG9uX2Nsb3NlID0gXCJhdWRpby9jbGlja19jbG9zZVwiO1xyXG4gICAgc3RhdGljIGVmZmVjdF9jb2luX2JpZyA9IFwiYXVkaW8vY29pbl9iaWdcIjtcclxuICAgIC8v57qi5YyF5o+Q56S6XHJcbiAgICBzdGF0aWMgZWZmZWN0X2hiX2JlZ2luID0gXCJhdWRpby9oYl9iZWdpblwiO1xyXG4gICAgLy/nuqLljIXpm6hcclxuICAgIHN0YXRpYyBlZmZlY3RfaGJfcmFpbiA9IFwiYXVkaW8vaGJfcmFpblwiO1xyXG4gICAgLy/nuqLljIXovpNcclxuICAgIHN0YXRpYyBlZmZlY3RfaGJfbG9zZSA9IFwiYXVkaW8vY29pbl9oYl9sb3NlXCI7XHJcbiAgICAvL+e6ouWMhei1olxyXG4gICAgc3RhdGljIGVmZmVjdF9oYl93aW4gPSBcImF1ZGlvL3dpblwiO1xyXG5cclxuICAgIHN0YXRpYyBiZ20gPSBbXCJhdWRpby90YWJsZV9iZ20xXCIsIFwiYXVkaW8vdGFibGVfYmdtMlwiLCBcImF1ZGlvL3RhYmxlX2JnbTNcIiwgXCJhdWRpby90YWJsZV9iZ200XCIsIFwiYXVkaW8vdGFibGVfYmdtNVwiLCBcImF1ZGlvL3RhYmxlX2JnbTZcIl1cclxuXHJcbiAgICBzdGF0aWMgaXNQcmVsb2FkID0gZmFsc2U7XHJcbiAgICBzdGF0aWMgcHJlbG9hZCgpIHtcclxuICAgICAgICBpZiAodGhpcy5pc1ByZWxvYWQpIHJldHVybjtcclxuICAgICAgICB0aGlzLmlzUHJlbG9hZCA9IHRydWU7XHJcbiAgICAgICAgY29uc3QgYXJyID0gW1xyXG4gICAgICAgICAgICB0aGlzLmNvaW5zX2ZseSxcclxuICAgICAgICAgICAgdGhpcy5lZmZlY3RfYmV0U3RhcnQsXHJcbiAgICAgICAgICAgIHRoaXMuZWZmZWN0X2JldEVuZCxcclxuICAgICAgICAgICAgdGhpcy5lZmZlY3RfZmxpcENhcmQsXHJcbiAgICAgICAgICAgIHRoaXMuZWZmZWN0X3NlbmRDYXJkLFxyXG4gICAgICAgIF1cclxuICAgICAgICBjYy5yZXNvdXJjZXMucHJlbG9hZChhcnIsIGNjLkF1ZGlvQ2xpcCk7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Common/src/AudioManage.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '9e7dbvm46NP1ax5L+WIbaGl', 'AudioManage');
// Common/src/AudioManage.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AudioManage = void 0;
var audioManage = /** @class */ (function () {
    function audioManage() {
        this.effectVolume = 1;
        this.musicVolume = 1;
        this.effectIsClose = false;
        this.musicIsClose = false;
    }
    audioManage.prototype.playEffect = function (res, loop, volume) {
        if (loop === void 0) { loop = false; }
        if (this.effectIsClose) {
            return;
        }
        if (this.getEffectVolume() == 0) {
            return;
        }
        if (res instanceof cc.AudioClip) {
            var audioID = cc.audioEngine.playEffect(res, loop);
            return audioID;
        }
        else {
            if (res.substring(0, 4) == "http") {
                cc.assetManager.loadRemote(res, function (error, clip) {
                    if (error) {
                        cc.log(error);
                        return;
                    }
                    cc.audioEngine.playEffect(clip, loop);
                });
            }
            else {
                cc.resources.load(res, cc.AudioClip, function (error, clip) {
                    if (error) {
                        cc.log(error);
                        return;
                    }
                    cc.audioEngine.playEffect(clip, loop);
                });
            }
        }
    };
    audioManage.prototype.playMusic = function (res, loop, volume) {
        if (loop === void 0) { loop = false; }
        if (this.musicIsClose) {
            return;
        }
        if (this.getMusicVolume() == 0) {
            return;
        }
        if (res instanceof cc.AudioClip) {
            var audioID = cc.audioEngine.playMusic(res, loop);
            return audioID;
        }
        else {
            cc.resources.load(res, cc.AudioClip, null, function (error, clip) {
                cc.audioEngine.playMusic(clip, loop);
            });
        }
    };
    audioManage.prototype.getEffectVolume = function () {
        var volume = cc.sys.localStorage.getItem("effectVolume") || 0.5;
        this.effectVolume = parseFloat(volume);
        return this.effectVolume;
    };
    audioManage.prototype.setEffectVolume = function (volume) {
        if (volume == NaN)
            volume = 0.5;
        cc.sys.localStorage.setItem("effectVolume", volume);
        cc.audioEngine.setEffectsVolume(volume);
        this.effectIsClose = volume == 0;
    };
    audioManage.prototype.getMusicVolume = function () {
        var volume = cc.sys.localStorage.getItem("musicVolume") || 0.5;
        this.musicVolume = parseFloat(volume);
        return this.musicVolume;
    };
    audioManage.prototype.setMusicVolume = function (volume) {
        if (volume == NaN)
            volume = 0.5;
        cc.sys.localStorage.setItem("musicVolume", volume);
        cc.audioEngine.setMusicVolume(volume);
        this.musicIsClose = volume == 0;
    };
    return audioManage;
}());
exports.AudioManage = new audioManage();

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcQ29tbW9uXFxzcmNcXEF1ZGlvTWFuYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0lBQUE7UUFDSSxpQkFBWSxHQUFDLENBQUMsQ0FBQztRQUNmLGdCQUFXLEdBQUMsQ0FBQyxDQUFDO1FBQ2Qsa0JBQWEsR0FBQyxLQUFLLENBQUM7UUFDcEIsaUJBQVksR0FBQyxLQUFLLENBQUM7SUEyRXZCLENBQUM7SUF6RUcsZ0NBQVUsR0FBVixVQUFXLEdBQXlCLEVBQUUsSUFBa0IsRUFBQyxNQUFjO1FBQWpDLHFCQUFBLEVBQUEsWUFBa0I7UUFDcEQsSUFBSSxJQUFJLENBQUMsYUFBYSxFQUFDO1lBQ25CLE9BQU07U0FDVDtRQUNELElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRSxJQUFFLENBQUMsRUFBQztZQUMxQixPQUFNO1NBQ1Q7UUFDRCxJQUFLLEdBQUcsWUFBWSxFQUFFLENBQUMsU0FBUyxFQUFFO1lBQzlCLElBQUksT0FBTyxHQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBQyxJQUFJLENBQUMsQ0FBQTtZQUNsRCxPQUFPLE9BQU8sQ0FBQTtTQUNqQjthQUFNO1lBQ0gsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxNQUFNLEVBQUU7Z0JBQzlCLEVBQUUsQ0FBQyxZQUFZLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBQyxVQUFDLEtBQUssRUFBQyxJQUFpQjtvQkFDbkQsSUFBSSxLQUFLLEVBQUM7d0JBQ04sRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQTt3QkFDYixPQUFNO3FCQUNUO29CQUNELEVBQUUsQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLElBQUksRUFBQyxJQUFJLENBQUMsQ0FBQTtnQkFDeEMsQ0FBQyxDQUFDLENBQUE7YUFDTDtpQkFBTTtnQkFDSCxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FB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clxuICAgIGVmZmVjdFZvbHVtZT0xO1xyXG4gICAgbXVzaWNWb2x1bWU9MTsgXHJcbiAgICBlZmZlY3RJc0Nsb3NlPWZhbHNlOyBcclxuICAgIG11c2ljSXNDbG9zZT1mYWxzZTsgXHJcblxyXG4gICAgcGxheUVmZmVjdChyZXM6Y2MuQXVkaW9DbGlwIHwgc3RyaW5nLCBsb29wOmJvb2xlYW49ZmFsc2Usdm9sdW1lPzpudW1iZXIgKXtcclxuICAgICAgICBpZiAodGhpcy5lZmZlY3RJc0Nsb3NlKXtcclxuICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmdldEVmZmVjdFZvbHVtZSgpPT0wKXtcclxuICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICggcmVzIGluc3RhbmNlb2YgY2MuQXVkaW9DbGlwKSB7XHJcbiAgICAgICAgICAgIGxldCBhdWRpb0lEID0gIGNjLmF1ZGlvRW5naW5lLnBsYXlFZmZlY3QocmVzLGxvb3ApXHJcbiAgICAgICAgICAgIHJldHVybiBhdWRpb0lEXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHJlcy5zdWJzdHJpbmcoMCw0KSA9PSBcImh0dHBcIikge1xyXG4gICAgICAgICAgICAgICAgY2MuYXNzZXRNYW5hZ2VyLmxvYWRSZW1vdGUocmVzLChlcnJvcixjbGlwOmNjLkF1ZGlvQ2xpcCk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3Ipe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYy5sb2coZXJyb3IpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBjYy5hdWRpb0VuZ2luZS5wbGF5RWZmZWN0KGNsaXAsbG9vcClcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjYy5yZXNvdXJjZXMubG9hZChyZXMsY2MuQXVkaW9DbGlwLChlcnJvcixjbGlwOmNjLkF1ZGlvQ2xpcCk9PntcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZXJyb3Ipe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYy5sb2coZXJyb3IpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBjYy5hdWRpb0VuZ2luZS5wbGF5RWZmZWN0KGNsaXAsbG9vcClcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcGxheU11c2ljKHJlczpjYy5BdWRpb0NsaXAgfCBzdHJpbmcsIGxvb3A6Ym9vbGVhbj1mYWxzZSx2b2x1bWU/Om51bWJlciApe1xyXG4gICAgICAgIGlmICh0aGlzLm11c2ljSXNDbG9zZSl7XHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5nZXRNdXNpY1ZvbHVtZSgpPT0wKXtcclxuICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICggcmVzIGluc3RhbmNlb2YgY2MuQXVkaW9DbGlwKSB7XHJcbiAgICAgICAgICAgIGxldCBhdWRpb0lEID0gIGNjLmF1ZGlvRW5naW5lLnBsYXlNdXNpYyhyZXMsbG9vcClcclxuICAgICAgICAgICAgcmV0dXJuIGF1ZGlvSURcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjYy5yZXNvdXJjZXMubG9hZChyZXMsY2MuQXVkaW9DbGlwLG51bGwsKGVycm9yLGNsaXA6Y2MuQXVkaW9DbGlwKT0+e1xyXG4gICAgICAgICAgICAgICAgY2MuYXVkaW9FbmdpbmUucGxheU11c2ljKGNsaXAsbG9vcClcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIGdldEVmZmVjdFZvbHVtZSgpe1xyXG4gICAgICAgIGxldCB2b2x1bWUgPSBjYy5zeXMubG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJlZmZlY3RWb2x1bWVcIikgfHwgMC41XHJcbiAgICAgICAgdGhpcy5lZmZlY3RWb2x1bWUgPSBwYXJzZUZsb2F0KHZvbHVtZSlcclxuICAgICAgICByZXR1cm4gdGhpcy5lZmZlY3RWb2x1bWVcclxuICAgIH1cclxuXHJcbiAgICBzZXRFZmZlY3RWb2x1bWUodm9sdW1lOm51bWJlcil7XHJcbiAgICAgICAgaWYodm9sdW1lID09IE5hTil2b2x1bWU9MC41O1xyXG4gICAgICAgIGNjLnN5cy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImVmZmVjdFZvbHVtZVwiLHZvbHVtZSlcclxuICAgICAgICBjYy5hdWRpb0VuZ2luZS5zZXRFZmZlY3RzVm9sdW1lKHZvbHVtZSlcclxuICAgICAgICB0aGlzLmVmZmVjdElzQ2xvc2UgPSB2b2x1bWUgPT0gMFxyXG4gICAgfVxyXG5cclxuICAgIGdldE11c2ljVm9sdW1lKCl7XHJcbiAgICAgICAgbGV0IHZvbHVtZSA9IGNjLnN5cy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIm11c2ljVm9sdW1lXCIpIHx8IDAuNVxyXG4gICAgICAgIHRoaXMubXVzaWNWb2x1bWUgPSBwYXJzZUZsb2F0KHZvbHVtZSlcclxuICAgICAgICByZXR1cm4gdGhpcy5tdXNpY1ZvbHVtZVxyXG4gICAgfVxyXG5cclxuICAgIHNldE11c2ljVm9sdW1lKHZvbHVtZTpudW1iZXIpe1xyXG4gICAgICAgIGlmKHZvbHVtZSA9PSBOYU4pdm9sdW1lPTAuNTtcclxuICAgICAgICBjYy5zeXMubG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJtdXNpY1ZvbHVtZVwiLHZvbHVtZSlcclxuICAgICAgICBjYy5hdWRpb0VuZ2luZS5zZXRNdXNpY1ZvbHVtZSh2b2x1bWUpXHJcbiAgICAgICAgdGhpcy5tdXNpY0lzQ2xvc2UgPSB2b2x1bWUgPT0gMFxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgQXVkaW9NYW5hZ2UgPSBuZXcgYXVkaW9NYW5hZ2UgKCkiXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/reconnect.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '00357eu1j1PHaf2wvOnKouV', 'reconnect');
// Script/component/reconnect.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var DznSocket_1 = require("../../Common/src/DznSocket");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var reconnect = /** @class */ (function (_super) {
    __extends(reconnect, _super);
    function reconnect() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.recTimes = 0;
        _this.recInterval = 6;
        _this.maxTimes = 50;
        return _this;
    }
    reconnect.prototype.onLoad = function () {
        this.recTimes = 0;
        this.maxTimes = 50;
        this.recInterval = 6;
        DznSocket_1.DznSocket.on("webClientOnopen", this.webClientOnopen, this);
        DznSocket_1.DznSocket.on("webClientOnclose", this.webClientOnclose, this);
        // DznSocket.on("webClientOnerror", this.webClientOnclose, this);
    };
    reconnect.prototype.onDestroy = function () {
        DznSocket_1.DznSocket.targetOff(this);
    };
    reconnect.prototype.webClientOnopen = function () {
        this.recTimes = 0;
        this.maxTimes = 50;
        this.recInterval = 6;
    };
    reconnect.prototype.webClientOnclose = function () {
        var _this = this;
        var kick = DznSocket_1.DznSocket.getCache("KICK_OFF");
        var exit = DznSocket_1.DznSocket.getCache("EXIT_DESK_ACK");
        var error = DznSocket_1.DznSocket.getCache("ERROR_INFO");
        if (exit || error || kick) {
            this.unscheduleAllCallbacks();
            return;
        }
        // if (this.recTimes >= this.maxTimes) {
        //     popup.instance.toastLongTime("重连失败...", true);
        //     //返回大厅
        //     gameData.nataviApi.backHall();
        //     return;
        // }
        var delayTime = this.recInterval; //this.recTimes * this.recInterval;
        this.scheduleOnce(function () {
            if (exit || error || kick) {
                _this.unscheduleAllCallbacks();
                return;
            }
            DznSocket_1.DznSocket.OnConnect(DznSocket_1.DznSocket.pUrl);
            _this.recTimes += 1;
        }, delayTime);
        console.warn("第", this.recTimes + 1, "次重连"); //"延迟时间为:", this.recTimes * this.recInterval
    };
    __decorate([
        property
    ], reconnect.prototype, "recTimes", void 0);
    __decorate([
        property
    ], reconnect.prototype, "recInterval", void 0);
    __decorate([
        property
    ], reconnect.prototype, "maxTimes", void 0);
    reconnect = __decorate([
        ccclass
    ], reconnect);
    return reconnect;
}(cc.Component));
exports.default = reconnect;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxjb21wb25lbnRcXHJlY29ubmVjdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSx3REFBc0Q7QUFFaEQsSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBdUMsNkJBQVk7SUFBbkQ7UUFBQSxxRUE0REM7UUF6REcsY0FBUSxHQUFXLENBQUMsQ0FBQztRQUdyQixpQkFBVyxHQUFXLENBQUMsQ0FBQztRQUd4QixjQUFRLEdBQVcsRUFBRSxDQUFDOztJQW1EMUIsQ0FBQztJQWpERywwQkFBTSxHQUFOO1FBQ0ksSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDbEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxDQUFDLENBQUM7UUFDckIscUJBQVMsQ0FBQyxFQUFFLENBQUMsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGVBQWUsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM1RCxxQkFBUyxDQUFDLEVBQUUsQ0FBQyxrQkFBa0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDOUQsaUVBQWlFO0lBQ3JFLENBQUM7SUFFRCw2QkFBUyxHQUFUO1FBQ0kscUJBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVELG1DQUFlLEdBQWY7UUFDSSxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNuQixJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRUQsb0NBQWdCLEdBQWhCO1FBQUEsaUJBNEJDO1FBM0JHLElBQUksSUFBSSxHQUFHLHFCQUFTLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQzFDLElBQUksSUFBSSxHQUFHLHFCQUFTLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQy9DLElBQUksS0FBSyxHQUFHLHFCQUFTLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzdDLElBQUksSUFBSSxJQUFJLEtBQUssSUFBSSxJQUFJLEVBQUU7WUFDdkIsSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7WUFDOUIsT0FBTztTQUNWO1FBRUQsd0NBQXdDO1FBQ3hDLHFEQUFxRDtRQUNyRCxhQUFhO1FBQ2IscUNBQXFDO1FBQ3JDLGNBQWM7UUFDZCxJQUFJO1FBRUosSUFBSSxTQUFTLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFBLG1DQUFtQztRQUVwRSxJQUFJLENBQUMsWUFBWSxDQUFDO1lBQ2QsSUFBSSxJQUFJLElBQUksS0FBSyxJQUFJLElBQUksRUFBRTtnQkFDdkIsS0FBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7Z0JBQzlCLE9BQU87YUFDVjtZQUNELHFCQUFTLENBQUMsU0FBUyxDQUFDLHFCQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDcEMsS0FBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUM7UUFDdkIsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBRWQsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUMsSUFBSSxDQUFDLFFBQVEsR0FBQyxDQUFDLEVBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQSw0Q0FBNEM7SUFDeEYsQ0FBQztJQXZERDtRQURDLFFBQVE7K0NBQ1k7SUFHckI7UUFEQyxRQUFRO2tEQUNlO0lBR3hCO1FBREMsUUFBUTsrQ0FDYTtJQVRMLFNBQVM7UUFEN0IsT0FBTztPQUNhLFNBQVMsQ0E0RDdCO0lBQUQsZ0JBQUM7Q0E1REQsQUE0REMsQ0E1RHNDLEVBQUUsQ0FBQyxTQUFTLEdBNERsRDtrQkE1RG9CLFNBQVMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEem5Tb2NrZXQgfSBmcm9tIFwiLi4vLi4vQ29tbW9uL3NyYy9Eem5Tb2NrZXRcIlxyXG5pbXBvcnQgeyBnYW1lRGF0YSB9IGZyb20gXCIuL2dhbWVEYXRhXCI7XHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyByZWNvbm5lY3QgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIEBwcm9wZXJ0eVxyXG4gICAgcmVjVGltZXM6IG51bWJlciA9IDA7XHJcblxyXG4gICAgQHByb3BlcnR5XHJcbiAgICByZWNJbnRlcnZhbDogbnVtYmVyID0gNjtcclxuXHJcbiAgICBAcHJvcGVydHlcclxuICAgIG1heFRpbWVzOiBudW1iZXIgPSA1MDtcclxuXHJcbiAgICBvbkxvYWQoKSB7XHJcbiAgICAgICAgdGhpcy5yZWNUaW1lcyA9IDA7XHJcbiAgICAgICAgdGhpcy5tYXhUaW1lcyA9IDUwO1xyXG4gICAgICAgIHRoaXMucmVjSW50ZXJ2YWwgPSA2O1xyXG4gICAgICAgIER6blNvY2tldC5vbihcIndlYkNsaWVudE9ub3BlblwiLCB0aGlzLndlYkNsaWVudE9ub3BlbiwgdGhpcyk7XHJcbiAgICAgICAgRHpuU29ja2V0Lm9uKFwid2ViQ2xpZW50T25jbG9zZVwiLCB0aGlzLndlYkNsaWVudE9uY2xvc2UsIHRoaXMpO1xyXG4gICAgICAgIC8vIER6blNvY2tldC5vbihcIndlYkNsaWVudE9uZXJyb3JcIiwgdGhpcy53ZWJDbGllbnRPbmNsb3NlLCB0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgRHpuU29ja2V0LnRhcmdldE9mZih0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICB3ZWJDbGllbnRPbm9wZW4oKSB7XHJcbiAgICAgICAgdGhpcy5yZWNUaW1lcyA9IDA7XHJcbiAgICAgICAgdGhpcy5tYXhUaW1lcyA9IDUwO1xyXG4gICAgICAgIHRoaXMucmVjSW50ZXJ2YWwgPSA2O1xyXG4gICAgfVxyXG5cclxuICAgIHdlYkNsaWVudE9uY2xvc2UoKSB7XHJcbiAgICAgICAgbGV0IGtpY2sgPSBEem5Tb2NrZXQuZ2V0Q2FjaGUoXCJLSUNLX09GRlwiKTtcclxuICAgICAgICBsZXQgZXhpdCA9IER6blNvY2tldC5nZXRDYWNoZShcIkVYSVRfREVTS19BQ0tcIik7XHJcbiAgICAgICAgbGV0IGVycm9yID0gRHpuU29ja2V0LmdldENhY2hlKFwiRVJST1JfSU5GT1wiKTtcclxuICAgICAgICBpZiAoZXhpdCB8fCBlcnJvciB8fCBraWNrKSB7XHJcbiAgICAgICAgICAgIHRoaXMudW5zY2hlZHVsZUFsbENhbGxiYWNrcygpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBpZiAodGhpcy5yZWNUaW1lcyA+PSB0aGlzLm1heFRpbWVzKSB7XHJcbiAgICAgICAgLy8gICAgIHBvcHVwLmluc3RhbmNlLnRvYXN0TG9uZ1RpbWUoXCLph43ov57lpLHotKUuLi5cIiwgdHJ1ZSk7XHJcbiAgICAgICAgLy8gICAgIC8v6L+U5Zue5aSn5Y6FXHJcbiAgICAgICAgLy8gICAgIGdhbWVEYXRhLm5hdGF2aUFwaS5iYWNrSGFsbCgpO1xyXG4gICAgICAgIC8vICAgICByZXR1cm47XHJcbiAgICAgICAgLy8gfVxyXG5cclxuICAgICAgICBsZXQgZGVsYXlUaW1lID0gdGhpcy5yZWNJbnRlcnZhbDsvL3RoaXMucmVjVGltZXMgKiB0aGlzLnJlY0ludGVydmFsO1xyXG5cclxuICAgICAgICB0aGlzLnNjaGVkdWxlT25jZSgoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChleGl0IHx8IGVycm9yIHx8IGtpY2spIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudW5zY2hlZHVsZUFsbENhbGxiYWNrcygpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIER6blNvY2tldC5PbkNvbm5lY3QoRHpuU29ja2V0LnBVcmwpO1xyXG4gICAgICAgICAgICB0aGlzLnJlY1RpbWVzICs9IDE7XHJcbiAgICAgICAgfSwgZGVsYXlUaW1lKTtcclxuXHJcbiAgICAgICAgY29uc29sZS53YXJuKFwi56ysXCIsdGhpcy5yZWNUaW1lcysxLFwi5qyh6YeN6L+eXCIpOy8vXCLlu7bov5/ml7bpl7TkuLo6XCIsIHRoaXMucmVjVGltZXMgKiB0aGlzLnJlY0ludGVydmFsXHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/serverTime.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e1cb9BPYIVFD4M/goGCmoxe', 'serverTime');
// Script/component/serverTime.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var serverTime = /** @class */ (function () {
    function serverTime() {
    }
    serverTime.setOffsetTime = function (v) {
        var msgTime = Date.now() - v.clientTime;
        var serverNow = v.serverTime + msgTime / 2;
        this.offsetTime = Math.round(serverNow - Date.now());
    };
    Object.defineProperty(serverTime, "serverTime", {
        get: function () {
            return Date.now() + this.offsetTime;
        },
        enumerable: false,
        configurable: true
    });
    serverTime.offsetTime = 0;
    return serverTime;
}());
exports.default = serverTime;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxjb21wb25lbnRcXHNlcnZlclRpbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtJQUFBO0lBWUEsQ0FBQztJQVRVLHdCQUFhLEdBQXBCLFVBQXFCLENBQWU7UUFDaEMsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUM7UUFDeEMsSUFBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDLFVBQVUsR0FBRyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1FBQzNDLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVELHNCQUFXLHdCQUFVO2FBQXJCO1lBQ0ksT0FBTyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUN4QyxDQUFDOzs7T0FBQTtJQVZNLHFCQUFVLEdBQUcsQ0FBQyxDQUFDO0lBVzFCLGlCQUFDO0NBWkQsQUFZQyxJQUFBO2tCQVpvQixVQUFVIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3Mgc2VydmVyVGltZSB7XHJcbiAgICBzdGF0aWMgb2Zmc2V0VGltZSA9IDA7XHJcblxyXG4gICAgc3RhdGljIHNldE9mZnNldFRpbWUodjogYXBpRGF0YS5wb25nKSB7XHJcbiAgICAgICAgbGV0IG1zZ1RpbWUgPSBEYXRlLm5vdygpIC0gdi5jbGllbnRUaW1lO1xyXG4gICAgICAgIGxldCBzZXJ2ZXJOb3cgPSB2LnNlcnZlclRpbWUgKyBtc2dUaW1lIC8gMjtcclxuICAgICAgICB0aGlzLm9mZnNldFRpbWUgPSBNYXRoLnJvdW5kKHNlcnZlck5vdyAtIERhdGUubm93KCkpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBnZXQgc2VydmVyVGltZSgpIHtcclxuICAgICAgICByZXR1cm4gRGF0ZS5ub3coKSArIHRoaXMub2Zmc2V0VGltZTtcclxuICAgIH1cclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/tishi.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '84dccBLmM9AQ5YCivBuouzZ', 'tishi');
// Script/component/tishi.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var AudioManage_1 = require("../../Common/src/AudioManage");
var AudioConfig_1 = require("../../Common/src/AudioConfig");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var tishi = /** @class */ (function (_super) {
    __extends(tishi, _super);
    function tishi() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.tishi = null;
        _this.callBack = null;
        _this.isOpen = false;
        return _this;
    }
    tishi_1 = tishi;
    tishi.prototype.onLoad = function () {
        tishi_1.instance = this;
    };
    tishi.prototype.setString = function (str) {
        this.tishi.string = str;
    };
    tishi.prototype.onCloseTishi = function () {
        this.isOpen = false;
        if (this.node)
            this.node.destroy();
        if (this.callBack) {
            AudioManage_1.AudioManage.playEffect(AudioConfig_1.default.effect_button_click);
            this.callBack();
        }
    };
    var tishi_1;
    tishi.instance = null;
    __decorate([
        property(cc.Label)
    ], tishi.prototype, "tishi", void 0);
    tishi = tishi_1 = __decorate([
        ccclass
    ], tishi);
    return tishi;
}(cc.Component));
exports.default = tishi;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxjb21wb25lbnRcXHRpc2hpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLDREQUEwRDtBQUMxRCw0REFBc0Q7QUFDaEQsSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBbUMseUJBQVk7SUFBL0M7UUFBQSxxRUE0QkM7UUF2QkcsV0FBSyxHQUFhLElBQUksQ0FBQztRQUV2QixjQUFRLEdBQVksSUFBSSxDQUFDO1FBRXpCLFlBQU0sR0FBRyxLQUFLLENBQUM7O0lBbUJuQixDQUFDO2NBNUJvQixLQUFLO0lBV3RCLHNCQUFNLEdBQU47UUFDSSxPQUFLLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUMxQixDQUFDO0lBRUQseUJBQVMsR0FBVCxVQUFVLEdBQVc7UUFDakIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDO0lBQzVCLENBQUM7SUFFRCw0QkFBWSxHQUFaO1FBQ0ksSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDcEIsSUFBRyxJQUFJLENBQUMsSUFBSTtZQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDakMsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2YseUJBQVcsQ0FBQyxVQUFVLENBQUMscUJBQVcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1lBQ3hELElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQTtTQUNsQjtJQUNMLENBQUM7O0lBeEJNLGNBQVEsR0FBVSxJQUFJLENBQUM7SUFHOUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzt3Q0FDSTtJQUxOLEtBQUs7UUFEekIsT0FBTztPQUNhLEtBQUssQ0E0QnpCO0lBQUQsWUFBQztDQTVCRCxBQTRCQyxDQTVCa0MsRUFBRSxDQUFDLFNBQVMsR0E0QjlDO2tCQTVCb0IsS0FBSyIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0b2FzdCBmcm9tIFwiLi90b2FzdFwiXHJcbmltcG9ydCB7IEF1ZGlvTWFuYWdlIH0gZnJvbSBcIi4uLy4uL0NvbW1vbi9zcmMvQXVkaW9NYW5hZ2VcIlxyXG5pbXBvcnQgYXVkaW9Db25maWcgZnJvbSBcIi4uLy4uL0NvbW1vbi9zcmMvQXVkaW9Db25maWdcIlxyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgdGlzaGkgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIHN0YXRpYyBpbnN0YW5jZTogdGlzaGkgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcclxuICAgIHRpc2hpOiBjYy5MYWJlbCA9IG51bGw7XHJcblxyXG4gICAgY2FsbEJhY2s6RnVuY3Rpb24gPSBudWxsO1xyXG5cclxuICAgIGlzT3BlbiA9IGZhbHNlO1xyXG5cclxuICAgIG9uTG9hZCgpIHtcclxuICAgICAgICB0aXNoaS5pbnN0YW5jZSA9IHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0U3RyaW5nKHN0cjogc3RyaW5nKXtcclxuICAgICAgICB0aGlzLnRpc2hpLnN0cmluZyA9IHN0cjtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsb3NlVGlzaGkoKSB7XHJcbiAgICAgICAgdGhpcy5pc09wZW4gPSBmYWxzZTtcclxuICAgICAgICBpZih0aGlzLm5vZGUpdGhpcy5ub2RlLmRlc3Ryb3koKTtcclxuICAgICAgICBpZiAodGhpcy5jYWxsQmFjaykge1xyXG4gICAgICAgICAgICBBdWRpb01hbmFnZS5wbGF5RWZmZWN0KGF1ZGlvQ29uZmlnLmVmZmVjdF9idXR0b25fY2xpY2spO1xyXG4gICAgICAgICAgICB0aGlzLmNhbGxCYWNrKClcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/utils.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '0772481R+RLmrnVbGWkiZGq', 'utils');
// Script/component/utils.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.utils = void 0;
var utils;
(function (utils) {
    var LineInfo = /** @class */ (function () {
        function LineInfo() {
        }
        return LineInfo;
    }());
    utils.LineInfo = LineInfo;
    /**
     * 文本颜色
     */
    function getColorText(text, color) {
        return "<color=" + color + ">" + text + "</color>";
    }
    utils.getColorText = getColorText;
    /**
     * 文本颜色
     */
    function getRichColorText(text, color, color2, width) {
        var str = "<color=" + color + ">" + text + "</color>";
        return "<outline color=" + color2 + "width=" + width + ">" + str + "</outline>";
    }
    utils.getRichColorText = getRichColorText;
    /**
     * 获取 点p 与p1 p2 构成的的直线的对称点 垂足 距离
     */
    function getPointInfo(p, p1, p2) {
        // 先求p2 p3 直线 A B C
        var A = p2.y - p1.y;
        var B = p1.x - p2.x;
        var C = p2.x * p1.y - p1.x * p2.y;
        var dis = getDis(p, A, B, C);
        var p3 = getOpPoint(p, A, B, C);
        var footP = cc.v2((p.x + p3.x) / 2, (p.y + p3.y) / 2);
        return { dis: dis, antipole: p3, drop: footP };
    }
    utils.getPointInfo = getPointInfo;
    /**
     * 求对称点
     */
    function getOpPoint(p, A, B, C) {
        var x = (p.x - 2 * A * (A * p.x + B * p.y + C) / (A * A + B * B));
        var y = p.y - 2 * B * (A * p.x + B * p.y + C) / (A * A + B * B);
        return cc.v2(x, y);
    }
    utils.getOpPoint = getOpPoint;
    /**
     * 求点到直线的距离
     */
    function getDis(p, A, B, C) {
        var dis = Math.abs((A * p.x + B * p.y + C) / Math.sqrt(A * A + B * B));
        return dis;
    }
    utils.getDis = getDis;
    function toolNick(val) {
        var len = 0;
        var nick = [];
        for (var i = 0; i < val.length; i++) {
            var a = val.charAt(i);
            nick.push(val[i]);
            if (a.match(/[^\x00-\xff]/ig) != null) {
                len += 2;
                nick.push("");
            }
            else {
                len += 1;
            }
        }
        if (len > 8)
            val = (nick.slice(0, 8)).join("") + "...";
        return val;
    }
    utils.toolNick = toolNick;
    /**
     * 获得 v1=>v2 的夹角
     */
    function getSignAngle(v1, v2) {
        var radian = v1.signAngle(v2);
        var angle = 180 / Math.PI * radian;
        return angle;
    }
    utils.getSignAngle = getSignAngle;
    /**
     * 获得 v1=>v2 距离 返回移动角度
     * v1 起始向量
     * v2 起始向量
     * 横向变化差值大于纵向变化差值时 左右 +-180
     * 纵向变化差值大于纵向变化差值时 左右 +-90
     */
    function getDistanceRotation(v1, v2) {
        var xDis = Math.abs(v2.x - v1.x);
        var yDis = Math.abs(v2.y - v1.y);
        return xDis > yDis ? 180 : 90;
    }
    utils.getDistanceRotation = getDistanceRotation;
    /**
     * 获得外接矩形的大小
     */
    function getOutRectSize(inRect, angle) {
        angle = Math.abs(angle);
        if (angle > 90 && angle <= 180) {
            angle = 180 - angle;
        }
        var radian = Math.PI / 180 * angle;
        var w = inRect.height * Math.sin(radian) + inRect.width * Math.cos(radian);
        var h = inRect.height * Math.cos(radian) + inRect.width * Math.sin(radian);
        return cc.size(w, h);
    }
    utils.getOutRectSize = getOutRectSize;
    /**
     * 获得外接矩形的大小
     * angle +-180 时 h高不变
     * angle +-90 时 w宽不变
     */
    function getOutRectSizeStraight(inRect, angle) {
        angle = Math.abs(angle);
        // if (angle > 90 && angle <= 180) {
        //     angle = 180 - angle;
        // }
        var w = 0;
        var h = 0;
        var radian = Math.PI / 180 * angle;
        if (angle === 180) { //高不变
            w = inRect.width; //inRect.height * Math.sin(radian) + inRect.width * Math.cos(radian);
            h = inRect.height;
        }
        else { //宽不变
            h = inRect.width; //inRect.height * Math.cos(radian) + inRect.width * Math.sin(radian);
            w = inRect.height;
        }
        return cc.size(w, h);
    }
    utils.getOutRectSizeStraight = getOutRectSizeStraight;
    /**
     * 得四个顶点的世界坐标
     */
    function getNodeVertexByWorldSpaceAR(node, offset) {
        if (offset === void 0) { offset = 0; }
        var vertexs = getNodeVertexByNodeSpaceAR(node, offset);
        for (var i = 0; i < vertexs.length; i++) {
            vertexs[i] = node.convertToWorldSpaceAR(vertexs[i]);
        }
        return vertexs;
    }
    utils.getNodeVertexByWorldSpaceAR = getNodeVertexByWorldSpaceAR;
    /**
     * 得四个顶点的节点坐标
     */
    function getNodeVertexByNodeSpaceAR(node, offset) {
        if (offset === void 0) { offset = 0; }
        var left = node.width * node.anchorX + offset;
        var right = node.width * (1 - node.anchorX) + offset;
        var bottom = node.height * node.anchorY + offset;
        var top = node.height * (1 - node.anchorY) + offset;
        var lt = cc.v2(-left, top);
        var rt = cc.v2(right, top);
        var rb = cc.v2(right, -bottom);
        var lb = cc.v2(-left, -bottom);
        return [lt, rt, rb, lb];
    }
    utils.getNodeVertexByNodeSpaceAR = getNodeVertexByNodeSpaceAR;
    function GetQueryVariable(url, variable) {
        var str = url.substr(url.indexOf("?") + 1, url.length);
        var vars = str.split("&");
        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");
            if (pair[0] == variable) {
                return pair[1];
            }
        }
        return "";
    }
    utils.GetQueryVariable = GetQueryVariable;
    ;
    function copyToClipboard(txt) {
        var selectText = function (textbox, startIndex, stopIndex) {
            if (textbox.createTextRange) {
                var range = textbox.createTextRange();
                range.collapse(true);
                range.moveStart('character', startIndex);
                range.moveEnd('character', stopIndex - startIndex);
                range.select();
            }
            else {
                textbox.setSelectionRange(startIndex, stopIndex);
                textbox.focus();
            }
        };
        var input = document.querySelector('#copy-input');
        if (!input) {
            input = document.createElement('input');
            input.id = "copy-input";
            input.readOnly = "readOnly";
            input.style.position = "absolute";
            input.style.left = "-1000px";
            input.style.zIndex = "-1000";
            document.body.appendChild(input);
        }
        input.value = txt;
        selectText(input, 0, txt.length);
        if (document.execCommand('copy')) {
        }
        input.blur();
    }
    utils.copyToClipboard = copyToClipboard;
    function prefixInteger(num, length) {
        return (Array(length).join('0') + num).slice(-length);
    }
    utils.prefixInteger = prefixInteger;
    var clickGetPrefab = /** @class */ (function () {
        function clickGetPrefab() {
        }
        clickGetPrefab.clickGetPrefab = function (url, callback) {
            clickGetPrefab.lastKey++;
            if (clickGetPrefab.lastKey > 0)
                return;
            // console.log(clickGetPrefab.lastKey,"击的key");
            utils.getPrefab(url, function (node) {
                clickGetPrefab.lastKey = -1;
                // console.log(clickGetPrefab.lastKey,"回调的key");
                callback && callback(node);
            });
        };
        clickGetPrefab.lastKey = -1;
        return clickGetPrefab;
    }());
    utils.clickGetPrefab = clickGetPrefab;
    //load预制体
    function getPrefab(url, callback) {
        var node = null;
        cc.resources.load(url, function (err, prefab) {
            if (err == null && prefab) {
                node = cc.instantiate(prefab);
                callback && callback(node);
                if (node.parent)
                    node.parent.removeChild(node);
                node.parent = cc.find('Canvas');
                return true;
            }
            else {
                clickGetPrefab.lastKey = -1;
                cc.warn("加载UI：" + url + "错误");
                return null;
            }
        });
    }
    utils.getPrefab = getPrefab;
})(utils = exports.utils || (exports.utils = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/toast.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'a5232kR0fZC4adJXguj1Tn7', 'toast');
// Script/component/toast.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var toast = /** @class */ (function (_super) {
    __extends(toast, _super);
    function toast() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.label = null;
        _this.ani = null;
        return _this;
    }
    toast.prototype.play = function (name, callback) {
        this.ani.play(name);
        this.ani.once(name, callback);
        this.label.string;
    };
    toast.prototype.setString = function (str) {
        this.label.string = str;
    };
    toast.prototype.playLongTime = function (name) {
        this.ani.play(name);
        this.label.string;
    };
    __decorate([
        property(cc.Label)
    ], toast.prototype, "label", void 0);
    __decorate([
        property(cc.Animation)
    ], toast.prototype, "ani", void 0);
    toast = __decorate([
        ccclass
    ], toast);
    return toast;
}(cc.Component));
exports.default = toast;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxjb21wb25lbnRcXHRvYXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVNLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRzVDO0lBQW1DLHlCQUFZO0lBQS9DO1FBQUEscUVBcUJDO1FBbkJHLFdBQUssR0FBYSxJQUFJLENBQUM7UUFHdkIsU0FBRyxHQUFpQixJQUFJLENBQUM7O0lBZ0I3QixDQUFDO0lBZEcsb0JBQUksR0FBSixVQUFLLElBQVcsRUFBRSxRQUE4RTtRQUM1RixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUE7SUFDckIsQ0FBQztJQUVELHlCQUFTLEdBQVQsVUFBVSxHQUFVO1FBQ2hCLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQztJQUM1QixDQUFDO0lBRUQsNEJBQVksR0FBWixVQUFhLElBQVc7UUFDcEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDcEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUE7SUFDckIsQ0FBQztJQWxCRDtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDO3dDQUNJO0lBR3ZCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUM7c0NBQ0U7SUFMUixLQUFLO1FBRHpCLE9BQU87T0FDYSxLQUFLLENBcUJ6QjtJQUFELFlBQUM7Q0FyQkQsQUFxQkMsQ0FyQmtDLEVBQUUsQ0FBQyxTQUFTLEdBcUI5QztrQkFyQm9CLEtBQUsiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyB0b2FzdCBleHRlbmRzIGNjLkNvbXBvbmVudCB7XHJcbiAgICBAcHJvcGVydHkoY2MuTGFiZWwpXHJcbiAgICBsYWJlbDogY2MuTGFiZWwgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5BbmltYXRpb24pXHJcbiAgICBhbmk6IGNjLkFuaW1hdGlvbiA9IG51bGw7XHJcblxyXG4gICAgcGxheShuYW1lOnN0cmluZywgY2FsbGJhY2s6IChhcmcxPzogYW55LCBhcmcyPzogYW55LCBhcmczPzogYW55LCBhcmc0PzogYW55LCBhcmc1PzogYW55KSA9PiB2b2lkKSB7XHJcbiAgICAgICAgdGhpcy5hbmkucGxheShuYW1lKTtcclxuICAgICAgICB0aGlzLmFuaS5vbmNlKG5hbWUsIGNhbGxiYWNrKTtcclxuICAgICAgICB0aGlzLmxhYmVsLnN0cmluZ1xyXG4gICAgfVxyXG5cclxuICAgIHNldFN0cmluZyhzdHI6c3RyaW5nKXtcclxuICAgICAgICB0aGlzLmxhYmVsLnN0cmluZyA9IHN0cjtcclxuICAgIH1cclxuXHJcbiAgICBwbGF5TG9uZ1RpbWUobmFtZTpzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLmFuaS5wbGF5KG5hbWUpO1xyXG4gICAgICAgIHRoaXMubGFiZWwuc3RyaW5nXHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/gameData.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e9677xH4fZGW7wboJPS+jQ8', 'gameData');
// Script/component/gameData.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.gameData = void 0;
var LEvent_1 = require("../lightUI/events/LEvent");
var Dictionary_1 = require("../lightUI/utils/Dictionary");
var gameData;
(function (gameData) {
    /**
     * 主页信息
     */
    var roomData = /** @class */ (function () {
        function roomData() {
        }
        roomData.updateMarquee = function (bullet) {
            this.MARQUEE.push(bullet);
        };
        roomData.setTokenData = function (data) {
            this.tokenData = data;
        };
        roomData.tokenData = ""; //
        return roomData;
    }());
    gameData.roomData = roomData;
    /**
     * 用户信息
     */
    var userInfo = /** @class */ (function () {
        function userInfo() {
        }
        userInfo.setUsereInfo = function (data) {
            this.usereInfo = data;
        };
        userInfo.setDrawCard = function (data) {
            this.drawCard = data;
        };
        userInfo.setConfigData = function (data) {
            this.configData = data;
        };
        userInfo.usereInfo = null; //用户信息
        userInfo.drawCard = []; //用户拥有的卡片数组
        userInfo.configData = null; //活动配置信息
        return userInfo;
    }());
    gameData.userInfo = userInfo;
    /**
     * 接口请求
     */
    var httpServer = /** @class */ (function () {
        function httpServer() {
        }
        /**主页信息 用户信息 */
        httpServer.requestMainHomeInfo = function (callback) {
            var param = {};
            gameData.httpServer.httpGet("home", param, function (data) {
                callback && callback(data);
            });
        };
        /**抽一次卡牌或十次卡牌 */
        httpServer.requestOneDraw = function (num, callback) {
            var param = {};
            var api = num == 1 ? "draw_one" : "draw_ten";
            gameData.httpServer.httpPost(api, param, function (data) {
                callback && callback(data);
            });
        };
        /**合成卡
         * id：number --需要合成的卡牌id
        */
        httpServer.requestComposite = function (id, callback) {
            var param = {
                id: id
            };
            gameData.httpServer.httpPost("composite", param, function (data) {
                callback && callback(data);
            });
        };
        /**用户球星卡列表 */
        httpServer.requestUserCard = function (num, callback) {
            var param = {};
            gameData.httpServer.httpPost("user_card", param, function (data) {
                callback && callback(data);
            });
        };
        /**所有球星卡列表 */
        httpServer.requestCardList = function (num, callback) {
            var param = {};
            gameData.httpServer.httpPost("card_list", param, function (data) {
                callback && callback(data);
            });
        };
        /**奖励列表
         * type number --1-积分；2-卡牌；3-彩金
         */
        httpServer.requestCardAward = function (type, callback) {
            var param = {
                award: type
            };
            gameData.httpServer.httpPost("card_award", param, function (data) {
                callback && callback(data);
            });
        };
        /**领取奖励
         * id number --用户合成奖励ID
        */
        httpServer.requestReceiveAward = function (id, callback) {
            var param = {
                id: id
            };
            gameData.httpServer.httpPost("receive_award", param, function (data) {
                callback && callback(data);
            });
        };
        /**卡牌产出
         * time string --时间：today=今日；yesterday=昨日；week=近7日；month=近30日
        */
        httpServer.requestDrawCard = function (time, callback) {
            var param = {
                time: time
            };
            gameData.httpServer.httpPost("draw_card", param, function (data) {
                callback && callback(data);
            });
        };
        /**卡牌消耗
         *  time string --时间：today=今日；yesterday=昨日；week=近7日；month=近30日
         */
        httpServer.requestUserAward = function (time, callback) {
            var param = {
                time: time
            };
            gameData.httpServer.httpPost("user_award", param, function (data) {
                callback && callback(data);
            });
        };
        //短链接POST请求
        httpServer.httpPost = function (api, params, callback, fireParam) {
            var _this = this;
            if (fireParam === void 0) { fireParam = false; }
            var url = window.GetAppConfig()['apiAdrress'] + api;
            return new Promise(function (resolve, reject) {
                var xhr = cc.loader.getXMLHttpRequest();
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4 && xhr.status == 200) {
                        var respone = xhr.responseText;
                        console.log("respone ", respone);
                        if (callback) {
                            if (respone == "" || respone == null) {
                                if (fireParam == true)
                                    callback(params);
                                else
                                    callback(null);
                            }
                            else {
                                if (fireParam == true)
                                    callback(respone, params);
                                else
                                    callback(respone);
                            }
                        }
                    }
                    else if (xhr.readyState === 4 && xhr.status == 400) {
                        var respone = JSON.parse(xhr.responseText);
                        console.log("respone err", respone);
                    }
                    else if (xhr.readyState == 4 && xhr.status == 401) {
                        this.checkErro();
                    }
                }.bind(_this);
                xhr.open("POST", url, true);
                xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
                xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');
                xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type');
                xhr.setRequestHeader("Content-Type", "application/json");
                xhr.setRequestHeader('Authorization', gameData.roomData.tokenData);
                xhr.timeout = 8000; // 5 seconds for timeout
                if (params == null) {
                    xhr.send();
                    return;
                }
                xhr.send(JSON.stringify(params));
            });
        };
        //短链接GET请求
        httpServer.httpGet = function (api, param, callback) {
            var url = window.GetAppConfig()['apiAdrress'] + api;
            var xhr = cc.loader.getXMLHttpRequest();
            param = (param) ? param : {};
            var params = [];
            for (var key in param) {
                params.push(key + '=' + param[key]);
            }
            //参数拼接方式
            // var dataStr = params.join('&');
            // url += "?" + dataStr;
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {
                    var respone = xhr.responseText;
                    if (respone)
                        respone = JSON.parse(respone);
                    console.log("response ", respone instanceof Array, respone);
                    callback && callback(respone);
                }
                else if (xhr.readyState === 4 && xhr.status == 400) {
                    var respone = JSON.parse(xhr.responseText);
                    console.log("respone err", respone);
                }
                else {
                }
            }.bind(this);
            xhr.withCredentials = true;
            xhr.open("GET", url, true);
            xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
            xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');
            xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type');
            xhr.setRequestHeader("Content-Type", " text/html");
            xhr.setRequestHeader('Authorization', gameData.roomData.tokenData);
            xhr.timeout = 8000; // 8 seconds for timeout
            xhr.send();
        };
        return httpServer;
    }());
    gameData.httpServer = httpServer;
    /**
     * 读写文件
     */
    var WebviewWriteAndReadFile = /** @class */ (function () {
        function WebviewWriteAndReadFile() {
        }
        Object.defineProperty(WebviewWriteAndReadFile, "volumeMusic", {
            get: function () {
                var betNum = cc.sys.localStorage.getItem("autoBetScore") || 0;
                return betNum;
            },
            set: function (autoBet) {
                cc.sys.localStorage.setItem("autoBetScore", autoBet);
            },
            enumerable: false,
            configurable: true
        });
        WebviewWriteAndReadFile.fileJson = null;
        return WebviewWriteAndReadFile;
    }());
    gameData.WebviewWriteAndReadFile = WebviewWriteAndReadFile;
    /**
     * 加载预制体
     * 二级弹窗
     */
    var PreloadPrefab = /** @class */ (function () {
        function PreloadPrefab() {
        }
        //预加载预制体
        PreloadPrefab.loadPrefab = function () {
            var prefab = [PreloadPrefab.pgz_layer, PreloadPrefab.sjhg_layer, PreloadPrefab.yxsz_layer, PreloadPrefab.chat1, PreloadPrefab.chat2, PreloadPrefab.jsfj_layer, PreloadPrefab.jackpot_detail, PreloadPrefab.redBagNode, PreloadPrefab.redbag_layer, PreloadPrefab.home_bg_mohu, PreloadPrefab.shopView];
            prefab.forEach(function (value, index) {
                cc.resources.preload(value);
            });
        };
        //优先加载托管弹窗&&房间信息弹窗资源
        PreloadPrefab.loadPrefabFirst = function () {
            var prefab = [PreloadPrefab.thRoomDataView];
            prefab.forEach(function (value, index) {
                cc.resources.preload(value);
            });
        };
        /**
         * 加载UI
         * @param url
         * @param parent
         * @param mask              default true    是否需要挡住下层点击
         * @param autoRemove           default true     是否自动移除  是的话 在接受node close事件时候 销毁和移除ui
         * @param completeHandler
         * @param progressCallback
         */
        PreloadPrefab.loadUI = function (url, parent, mask, autoRemove, completeHandler, progressCallback) {
            if (mask === void 0) { mask = true; }
            if (autoRemove === void 0) { autoRemove = true; }
            var ui = this._uiDic.get(url);
            if (ui) {
                PreloadPrefab.showUI(url, ui, parent, mask, autoRemove, completeHandler);
            }
            else {
                cc.loader.loadRes(url, progressCallback, function (err, prefab) {
                    if (err == null && prefab) {
                        var ui_1 = cc.instantiate(prefab);
                        if (ui_1) {
                            PreloadPrefab.showUI(url, ui_1, parent, mask, autoRemove, completeHandler);
                        }
                    }
                    else {
                        cc.warn("加载UI：" + url + "错误");
                    }
                });
            }
        };
        /**显示 UI */
        PreloadPrefab.showUI = function (url, ui, parent, mask, autoRemove, completeHandler) {
            if (mask === void 0) { mask = true; }
            if (autoRemove === void 0) { autoRemove = false; }
            console.log("showUI url:", url);
            this._uiDic.set(url, ui);
            if (ui.parent != null) {
                if (completeHandler)
                    completeHandler(ui);
                return;
            }
            // if (mask == true) ui.on(cc.Node.EventType.TOUCH_START, () => { })
            if (mask == true)
                ui.addComponent(cc.BlockInputEvents);
            if (parent)
                parent.addChild(ui);
            if (completeHandler)
                completeHandler(ui);
            setTimeout(function () {
                //确保 第一次时候  onShow 在start后触发
                ui.dispatchEvent(new LEvent_1.default(LEvent_1.default.SHOW));
            }, 0);
            if (autoRemove == true)
                ui.on(LEvent_1.default.CLOSE, function (e) {
                    //做好消除工作
                    var node = e.target;
                    PreloadPrefab.disdroyUI(url);
                });
        };
        PreloadPrefab.getUI = function (url) {
            return this._uiDic.get(url);
        };
        PreloadPrefab.addUI = function (ui, parent, mask, autoRemove) {
            if (mask === void 0) { mask = true; }
            if (autoRemove === void 0) { autoRemove = false; }
            if (mask == true)
                ui.addComponent(cc.BlockInputEvents);
            if (parent)
                parent.addChild(ui);
            ui.dispatchEvent(new LEvent_1.default(LEvent_1.default.SHOW));
            if (autoRemove == true)
                ui.on(LEvent_1.default.CLOSE, function (e) {
                    //做好消除工作
                    var node = e.target;
                    node.destroy();
                });
        };
        PreloadPrefab.getNodeUrl = function (node) {
            for (var _i = 0, _a = this._uiDic.keys; _i < _a.length; _i++) {
                var k = _a[_i];
                if (this._uiDic.get(k) == node)
                    return k;
            }
            return null;
        };
        PreloadPrefab.getUIComponent = function (url, clazz) {
            return PreloadPrefab.getUI(url).getComponent(clazz);
        };
        /**
         * 销毁UI
         * @param url
         */
        PreloadPrefab.disdroyUI = function (url) {
            // console.log("disdroyUI url:", url)
            var node = this.hideUI(url);
            if (node == null)
                return;
            node.destroy();
            this._uiDic.remove(url);
        };
        PreloadPrefab.removeUI = function (url) {
            var node = this._uiDic.get(url);
            node.removeFromParent(false);
        };
        PreloadPrefab.removeAllUI = function () {
            var d = this._uiDic;
            for (var key in d) {
                d[key].removeFromParent(false);
            }
        };
        PreloadPrefab.removeUIByNode = function (node) {
            var url = this.getNodeUrl(node);
            if (!url)
                return;
            this.removeUI(url);
        };
        /**
         * 隐藏ui
         * @param url
         * @returns
         */
        PreloadPrefab.hideUI = function (url) {
            // console.log("hideUI ", url)
            var ui = this._uiDic.get(url);
            if (ui == null)
                return null;
            ui.removeFromParent(false);
            return ui;
        };
        PreloadPrefab._uiDic = new Dictionary_1.default;
        PreloadPrefab.chat1 = "prefabs/chat1"; //聊天窗1
        PreloadPrefab.chat2 = "prefabs/chat2"; //聊天窗2
        PreloadPrefab.jsfj_layer = "prefabs/jsfj_layer"; //解散房间
        PreloadPrefab.yxsz_layer = "prefabs/yxsz_layer"; //游戏设置
        PreloadPrefab.sjhg_layer = "prefabs/sjhg_layer"; //上局回顾
        PreloadPrefab.pgz_layer = "prefabs/pgz_layer"; //旁观列表
        PreloadPrefab.thRoomDataView = "hall/teahouse/main/ThRoomDataView"; //房间详情
        PreloadPrefab.jackpot_detail = "prefabs/jackpot_detail"; //大奖池详情
        PreloadPrefab.redBagNode = "prefabs/redBagNode"; //抢红包
        PreloadPrefab.redbag_layer = "prefabs/redbag_layer"; //红包雨
        PreloadPrefab.home_bg_mohu = "prefabs/home_bg_mohu"; //战绩
        PreloadPrefab.shopView = "hall/main/shopView"; //充值
        PreloadPrefab.grxx_layer = "prefabs/grxx_layer"; //个人信息
        PreloadPrefab.trusteeTip1 = "prefabs/trusteeTip1";
        PreloadPrefab.trusteeTip2 = "prefabs/trusteeTip2";
        PreloadPrefab.trusteeShip = "prefabs/trusteeShip";
        return PreloadPrefab;
    }());
    gameData.PreloadPrefab = PreloadPrefab;
    /**
     * 原生函数调用
     */
    var nataviApi = /** @class */ (function () {
        function nataviApi() {
        }
        nataviApi.rnOperaData = function () {
            return window['RnOpera'];
        };
        nataviApi.rnOpera = function (data) {
            nataviApi.rnOperaData() && window['RnOpera'](data);
        };
        nataviApi.backHall = function () {
            window['backHall'] && window['backHall']();
        };
        //原生端震动接口pattern[]在 Android 上，pattern数组的奇数索引代表振动持续时间，而偶数索引代表分离时间。在 iOS 上，pattern数组中的数字代表分离时间，因为振动持续时间是固定的。
        // repeat-是否重复震动
        nataviApi.vibrate = function (pattern, repeat, webview, navigation) {
            if (gameData.WebviewWriteAndReadFile.fileJson && gameData.WebviewWriteAndReadFile.fileJson.shake <= 0)
                return;
            if (cc.sys.isMobile)
                window['RnOpera']({ cmd: 'vibrate', data: {} });
            // (pattern?: number | number[] | null, repeat?: boolean | null): void;
        };
        //cancel()被调用
        nataviApi.cancelVibrate = function () {
            if (cc.sys.isMobile)
                window['RnOpera']({ cmd: 'cancel()' });
        };
        return nataviApi;
    }());
    gameData.nataviApi = nataviApi;
})(gameData = exports.gameData || (exports.gameData = {}));

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/LComponent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '338124/XppGDaV6TElSRGs9', 'LComponent');
// Script/lightUI/components/LComponent.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../events/LEvent");
var MountDataAbs_1 = require("./MountDataAbs");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LComponent = /** @class */ (function (_super) {
    __extends(LComponent, _super);
    function LComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    // LIFE-CYCLE CALLBACKS:
    //onLoad 回调会在节点首次激活时触发
    LComponent.prototype.onLoad = function () {
        this.node.on(LEvent_1.default.CLOSE, this.onClose, this);
        this.node.on(LEvent_1.default.SHOW, this.onShow, this);
    };
    //标记组件是否完成初始化
    //start 回调函数会在组件第一次激活前
    LComponent.prototype.start = function () {
    };
    //组件调用close时候触发
    LComponent.prototype.onClose = function () {
    };
    //每次被显示的时候调用  第一次 早于 start触发
    LComponent.prototype.onShow = function () {
    };
    LComponent.prototype.onProgress = function (value) {
        //TODO: 显示加载进度条
    };
    LComponent.prototype.onUpdateView = function (e) {
    };
    LComponent.prototype.showMe = function (data) {
        data && this.setData(data);
    };
    LComponent.prototype.hideMe = function (data) {
    };
    LComponent.prototype.setData = function (data) {
        this.data = data;
    };
    LComponent.prototype.mountData = function (data) {
        this.data = data;
        this.data.on(MountDataAbs_1.default.SHOWME, this.showMe, this);
        this.data.on(MountDataAbs_1.default.HIDEME, this.hideMe, this);
        this.data.on(MountDataAbs_1.default.UPDATE, this.updataHandler, this);
    };
    LComponent.prototype.updataHandler = function (e) {
        this.onUpdateView(e.data);
    };
    LComponent.prototype.unMountData = function () {
        if (this.data == null)
            return;
        this.data.off(MountDataAbs_1.default.SHOWME, this.showMe);
        this.data.off(MountDataAbs_1.default.HIDEME, this.hideMe);
        this.data.off(MountDataAbs_1.default.UPDATE, this.updataHandler);
        this.data = null;
    };
    LComponent = __decorate([
        ccclass
    ], LComponent);
    return LComponent;
}(cc.Component));
exports.default = LComponent;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxjb21wb25lbnRzXFxMQ29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUFzQztBQUN0QywrQ0FBMEQ7QUFFcEQsSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFJNUM7SUFBd0MsOEJBQVk7SUFBcEQ7O0lBZ0VBLENBQUM7SUE5REcsd0JBQXdCO0lBRXhCLHNCQUFzQjtJQUN0QiwyQkFBTSxHQUFOO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsZ0JBQU0sQ0FBQyxLQUFLLEVBQUMsSUFBSSxDQUFDLE9BQU8sRUFBQyxJQUFJLENBQUMsQ0FBQztRQUM3QyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxnQkFBTSxDQUFDLElBQUksRUFBQyxJQUFJLENBQUMsTUFBTSxFQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFHRCxhQUFhO0lBRWIsc0JBQXNCO0lBQ3RCLDBCQUFLLEdBQUw7SUFDQSxDQUFDO0lBRUQsZUFBZTtJQUNmLDRCQUFPLEdBQVA7SUFFQSxDQUFDO0lBRUQsNEJBQTRCO0lBQzVCLDJCQUFNLEdBQU47SUFFQSxDQUFDO0lBRU8sK0JBQVUsR0FBbEIsVUFBbUIsS0FBSztRQUNwQixlQUFlO0lBQ25CLENBQUM7SUFFTSxpQ0FBWSxHQUFuQixVQUFvQixDQUFhO0lBRWpDLENBQUM7SUFFTSwyQkFBTSxHQUFiLFVBQWMsSUFBUztRQUNuQixJQUFJLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUM5QixDQUFDO0lBRU0sMkJBQU0sR0FBYixVQUFjLElBQVM7SUFFdkIsQ0FBQztJQUVNLDRCQUFPLEdBQWQsVUFBZSxJQUFRO1FBQ25CLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLENBQUM7SUFFTSw4QkFBUyxHQUFoQixVQUFpQixJQUFpQjtRQUM5QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxzQkFBWSxDQUFDLE1BQU0sRUFBQyxJQUFJLENBQUMsTUFBTSxFQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLHNCQUFZLENBQUMsTUFBTSxFQUFDLElBQUksQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsc0JBQVksQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLGFBQWEsRUFBQyxJQUFJLENBQUMsQ0FBQztJQUM5RCxDQUFDO0lBQ08sa0NBQWEsR0FBckIsVUFBc0IsQ0FBUTtRQUMxQixJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUM3QixDQUFDO0lBRU0sZ0NBQVcsR0FBbEI7UUFDSSxJQUFJLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSTtZQUFFLE9BQU87UUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsc0JBQVksQ0FBQyxNQUFNLEVBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLHNCQUFZLENBQUMsTUFBTSxFQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxzQkFBWSxDQUFDLE1BQU0sRUFBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7SUFDckIsQ0FBQztJQS9EZ0IsVUFBVTtRQUY5QixPQUFPO09BRWEsVUFBVSxDQWdFOUI7SUFBRCxpQkFBQztDQWhFRCxBQWdFQyxDQWhFdUMsRUFBRSxDQUFDLFNBQVMsR0FnRW5EO2tCQWhFb0IsVUFBVSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMRXZlbnQgZnJvbSBcIi4uL2V2ZW50cy9MRXZlbnRcIjtcclxuaW1wb3J0IE1vdW50RGF0YUFicywgeyBNb3VudFBhcmFtIH0gZnJvbSBcIi4vTW91bnREYXRhQWJzXCI7XHJcblxyXG5jb25zdCB7IGNjY2xhc3MsIHByb3BlcnR5IH0gPSBjYy5fZGVjb3JhdG9yO1xyXG5cclxuQGNjY2xhc3NcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExDb21wb25lbnQgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIC8vIExJRkUtQ1lDTEUgQ0FMTEJBQ0tTOlxyXG5cclxuICAgIC8vb25Mb2FkIOWbnuiwg+S8muWcqOiKgueCuemmluasoea/gOa0u+aXtuinpuWPkVxyXG4gICAgb25Mb2FkICgpIHtcclxuICAgICAgICB0aGlzLm5vZGUub24oTEV2ZW50LkNMT1NFLHRoaXMub25DbG9zZSx0aGlzKTtcclxuICAgICAgICB0aGlzLm5vZGUub24oTEV2ZW50LlNIT1csdGhpcy5vblNob3csdGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGRhdGE6YW55O1xyXG4gICAgLy/moIforrDnu4Tku7bmmK/lkKblrozmiJDliJ3lp4vljJZcclxuXHJcbiAgICAvL3N0YXJ0IOWbnuiwg+WHveaVsOS8muWcqOe7hOS7tuesrOS4gOasoea/gOa0u+WJjVxyXG4gICAgc3RhcnQoKSB7XHJcbiAgICB9XHJcblxyXG4gICAgLy/nu4Tku7bosIPnlKhjbG9zZeaXtuWAmeinpuWPkVxyXG4gICAgb25DbG9zZSgpe1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvL+avj+asoeiiq+aYvuekuueahOaXtuWAmeiwg+eUqCAg56ys5LiA5qyhIOaXqeS6jiBzdGFydOinpuWPkVxyXG4gICAgb25TaG93KCl7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25Qcm9ncmVzcyh2YWx1ZSkge1xyXG4gICAgICAgIC8vVE9ETzog5pi+56S65Yqg6L296L+b5bqm5p2hXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uVXBkYXRlVmlldyhlPzpNb3VudFBhcmFtKXtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNob3dNZShkYXRhPzphbnkpe1xyXG4gICAgICAgIGRhdGEgJiYgdGhpcy5zZXREYXRhKGRhdGEpXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGhpZGVNZShkYXRhPzphbnkpe1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0RGF0YShkYXRhOmFueSl7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgIH0gXHJcblxyXG4gICAgcHVibGljIG1vdW50RGF0YShkYXRhOk1vdW50RGF0YUFicyl7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgICAgICB0aGlzLmRhdGEub24oTW91bnREYXRhQWJzLlNIT1dNRSx0aGlzLnNob3dNZSx0aGlzKTtcclxuICAgICAgICB0aGlzLmRhdGEub24oTW91bnREYXRhQWJzLkhJREVNRSx0aGlzLmhpZGVNZSx0aGlzKTtcclxuICAgICAgICB0aGlzLmRhdGEub24oTW91bnREYXRhQWJzLlVQREFURSx0aGlzLnVwZGF0YUhhbmRsZXIsdGhpcyk7XHJcbiAgICB9XHJcbiAgICBwcml2YXRlIHVwZGF0YUhhbmRsZXIoZTpMRXZlbnQpOnZvaWR7XHJcbiAgICAgICAgdGhpcy5vblVwZGF0ZVZpZXcoZS5kYXRhKVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyB1bk1vdW50RGF0YSgpe1xyXG4gICAgICAgIGlmKCB0aGlzLmRhdGEgPT0gbnVsbCkgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuZGF0YS5vZmYoTW91bnREYXRhQWJzLlNIT1dNRSx0aGlzLnNob3dNZSk7XHJcbiAgICAgICAgdGhpcy5kYXRhLm9mZihNb3VudERhdGFBYnMuSElERU1FLHRoaXMuaGlkZU1lKTtcclxuICAgICAgICB0aGlzLmRhdGEub2ZmKE1vdW50RGF0YUFicy5VUERBVEUsdGhpcy51cGRhdGFIYW5kbGVyKTtcclxuICAgICAgICB0aGlzLmRhdGEgPSBudWxsO1xyXG4gICAgfVxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/hall/service/HttpService.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8ea8609tu5Ie7bWD78KSdiJ', 'HttpService');
// Script/hall/service/HttpService.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var HallNotification_1 = require("../events/HallNotification");
var HallFacase_1 = require("./HallFacase");
var HallAlert_1 = require("../utils/HallAlert");
var GameHttpService_1 = require("./GameHttpService");
var MountDataAbs_1 = require("../../lightUI/components/MountDataAbs");
var gameData_1 = require("../../../Script/component/gameData");
/**
 * 这里处理与服务器段的http通信事务
 */
var HttpService = /** @class */ (function (_super) {
    __extends(HttpService, _super);
    function HttpService() {
        var _this = _super.call(this, HttpService.NAME) || this;
        _this.tenantId = "AS";
        _this._token = "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjI2MzMxLCJhdWQiOiIiLCJleHAiOjE2NjUwNDcyNzgsImlhdCI6MTY2MjQ1NTI3OCwiaXNzIjoiIiwianRpIjoiYTljYzEyMzhlY2MwZDg2NDhhMGNjN2UwODQ4MGQ4MTEiLCJuYmYiOjE2NjI0NTUyNzgsInN1YiI6IiJ9.ITQC7zbvDV8OpUrTfO3o69STngyxbg30Q90UH6FaNGw";
        _this.isShowAlert = false;
        _this.token = cc.sys.localStorage.getItem('token');
        _this.tenantId = cc.sys.localStorage.getItem('tenantId') || 'AS';
        return _this;
    }
    Object.defineProperty(HttpService.prototype, "token", {
        get: function () {
            return this._token;
        },
        set: function (value) {
            // console.log("set token==>", value);
            this._token = value;
            cc.sys.localStorage.setItem('token', this._token);
            var games = HallFacase_1.default.getInstance().getModel(GameHttpService_1.default.NAME);
            if (games)
                games.token = this._token;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(HttpService.prototype, "_tenantId", {
        set: function (val) {
            this.tenantId = val;
        },
        enumerable: false,
        configurable: true
    });
    HttpService.prototype.loginByTel = function (param) {
        // this.sendRequest();
    };
    HttpService.prototype.httpGetCallBack = function (url, param, callback, hasTenantId) {
        if (hasTenantId === void 0) { hasTenantId = false; }
        var xhr = cc.loader.getXMLHttpRequest();
        this.tenantId = cc.sys.localStorage.getItem('tenantId') || 'AS';
        param = (param) ? param : {};
        if (hasTenantId == true)
            param.tenantId = this.tenantId;
        var params = [];
        for (var key in param) {
            params.push(key + '=' + param[key]);
        }
        var dataStr = params.join('&');
        if (params.length > 0)
            url += "?" + dataStr;
        var none = ['get-bank-card', 'myMessage', 'queryGameConfig']; //筛选loading
        var need = true;
        for (var i = 0; i < none.length; i++) {
            if (url.indexOf(none[i]) != -1)
                need = false;
        }
        if (need)
            this.sentNotification(HallNotification_1.default.SMALL_LOADING_SHOW, "httpGetCallBack");
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status == 200) {
                var respone = xhr.responseText;
                if (respone)
                    respone = JSON.parse(respone);
                callback && callback(respone);
                this.sentNotification(HallNotification_1.default.SMALL_LOADING_HIDE, "httpGetCallBack");
            }
            else if (xhr.readyState === 4 && xhr.status == 400) {
                var respone = JSON.parse(xhr.responseText);
                HallAlert_1.default.SmallAlert(respone.message);
                this.sentNotification(HallNotification_1.default.SMALL_LOADING_HIDE, "httpGetCallBack");
            }
            else if (xhr.readyState == 4 && xhr.status == 401) {
                this.sentNotification(HallNotification_1.default.SMALL_LOADING_HIDE, "httpGetCallBack");
                this.checkErro();
            }
        }.bind(this);
        xhr.withCredentials = true;
        xhr.open('GET', url, true);
        xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
        xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type,authorization');
        xhr.setRequestHeader("Content-Type", " text/html");
        if (this.token)
            xhr.setRequestHeader('Authorization', this.token);
        xhr.setRequestHeader('tenantId', this.tenantId);
        xhr.timeout = 8000; // 8 seconds for timeout
        xhr.send();
    };
    HttpService.prototype.checkErro = function () {
        var _this = this;
        if (this.isShowAlert == true)
            return;
        this.isShowAlert = true;
        this.sentNotification(HallNotification_1.default.SMALL_LOADING_HIDE, "httpGetCallBack");
        var merberMount = this.getSingleton(MountDataAbs_1.default.TOKENERROR);
        merberMount.update({ type: MountDataAbs_1.default.TOKENERROR, data: null });
        HallAlert_1.default.AlertOk("账号在其它地方登录，请重新登陆!", function () {
            _this.isShowAlert = false;
            HallFacase_1.default.getInstance().sentNotification(HallNotification_1.default.HALL_QUIT);
            HallFacase_1.default.getInstance().sentNotification(HallNotification_1.default.MAINLAYER_HIDE);
            //LightUI.removeAllUI();
        });
    };
    /**
     * get请求
     * @param url
     * @param param
     * @param callbackNoritication  //回调的消息
     * @param fireParam             //是否将请求的参数也传递给回调 默认不传递
     */
    HttpService.httpGet = function (url, param, callbackNoritication, fireParam) {
        if (fireParam === void 0) { fireParam = false; }
        var xhr = cc.loader.getXMLHttpRequest();
        param = (param) ? param : {};
        param.tenantId = gameData_1.gameData.roomData.tenantId;
        var params = [];
        for (var key in param) {
            params.push(key + '=' + param[key]);
        }
        var dataStr = params.join('&');
        url += "?" + dataStr;
        var none = ['/mail/mine']; //筛选loading
        var need = true;
        for (var i = 0; i < none.length; i++) {
            if (url.indexOf(none[i]) != -1)
                need = false;
        }
        xhr.onreadystatechange = function () {
            // cc.log("Get: readyState:" + xhr.readyState + " status:" + xhr.status);
            if (xhr.readyState === 4 && xhr.status == 200) {
                var respone = {};
                respone["status"] = xhr.status;
                respone['data'] = xhr.responseText;
                callbackNoritication(respone);
            }
            else if (xhr.readyState === 4 && xhr.status == 400) {
                //callback({ status: 401 });
                var respone = JSON.parse(xhr.responseText);
                respone["status"] = xhr.status;
                callbackNoritication(respone);
            }
        }.bind(this);
        xhr.withCredentials = true;
        xhr.open('GET', url, true);
        // if (cc.sys.isNative) {
        xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
        // xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');
        xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type,authorization');
        // xhr.setRequestHeader("Content-Type", "application/json");
        xhr.setRequestHeader("Content-Type", " text/html");
        // text/html;charset=UTF-8
        if (gameData_1.gameData.roomData.tokenData)
            xhr.setRequestHeader('Authorization', gameData_1.gameData.roomData.tokenData);
        xhr.setRequestHeader('tenantId', gameData_1.gameData.roomData.tenantId);
        // xhr.setRequestHeader('Authorization', 'Bearer ' + "");
        // }
        // note: In Internet Explorer, the timeout property may be set only after calling the open()
        // method and before calling the send() method.
        xhr.timeout = 8000; // 8 seconds for timeout
        xhr.send();
    };
    /**
     * 发起post请求 成功后回调callback
     * @param url
     * @param params
     * @param callback
     * @param fireParam         是否把请求参数返回给回调
     * @returns
     */
    HttpService.prototype.httpPostCallBack = function (url, params, callback, fireParam) {
        var _this = this;
        if (fireParam === void 0) { fireParam = false; }
        return new Promise(function (resolve, reject) {
            var xhr = cc.loader.getXMLHttpRequest();
            xhr.onreadystatechange = function () {
                // cc.log("Get: readyState:" + xhr.readyState + " status:" + xhr.status);
                if (xhr.readyState === 4 && xhr.status == 200) {
                    var respone = xhr.responseText;
                    if (callback) {
                        if (respone == "" || respone == null) {
                            if (fireParam == true)
                                callback(params);
                            else
                                callback(null);
                        }
                        else {
                            if (fireParam == true)
                                callback(JSON.parse(respone), params);
                            else
                                callback(JSON.parse(respone));
                        }
                    }
                }
                else if (xhr.readyState === 4 && xhr.status == 400) {
                    var respone = JSON.parse(xhr.responseText);
                    HallAlert_1.default.SmallAlert(respone.message);
                }
                else if (xhr.readyState == 4 && xhr.status == 401) {
                    //callback(-1);
                    this.checkErro();
                }
            }.bind(_this);
            xhr.open("POST", url, true);
            // xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
            // // xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');
            // xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type,authorization');
            // xhr.setRequestHeader("Content-Type", "application/json");
            // xhr.setRequestHeader("Content-Type", " text/html");
            // xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");  
            // text/html;charset=UTF-8
            xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
            xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');
            xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type');
            xhr.setRequestHeader("Content-Type", "application/json");
            if (_this.token)
                xhr.setRequestHeader('Authorization', _this.token);
            xhr.setRequestHeader('tenantId', _this.tenantId);
            xhr.timeout = 8000; // 5 seconds for timeout
            if (params == null) {
                xhr.send();
                return;
            }
            xhr.send(JSON.stringify(params));
        });
    };
    /**
     * 发送post 请求
     * @param url
     * @param params
     * @param callbackNoritication
     * @param fireParam
     * @returns
     */
    HttpService.prototype.httpPost = function (url, params, callbackNoritication, fireParam, type) {
        var _this = this;
        if (fireParam === void 0) { fireParam = false; }
        if (type === void 0) { type = "POST"; }
        return new Promise(function (resolve, reject) {
            var xhr = cc.loader.getXMLHttpRequest();
            xhr.onreadystatechange = function () {
                // cc.log("Get: readyState:" + xhr.readyState + " status:" + xhr.status);
                if (xhr.readyState === 4 && xhr.status == 200) {
                    var respone = xhr.responseText;
                    if (fireParam == true)
                        this.sentNotification(callbackNoritication, { "respone": respone, "param": params });
                    else
                        this.sentNotification(callbackNoritication, respone);
                }
                else if (xhr.readyState === 4 && xhr.status == 400) {
                    var respone = JSON.parse(xhr.responseText);
                    HallAlert_1.default.SmallAlert(respone.message);
                }
                else if (xhr.readyState == 4 && xhr.status == 401) {
                    //callback(-1);
                    this.checkErro();
                }
            }.bind(_this);
            xhr.open("POST", url, true);
            // xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
            // // xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');
            // xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type,authorization');
            // xhr.setRequestHeader("Content-Type", "application/json");
            // xhr.setRequestHeader("Content-Type", " text/html");
            // xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");  
            // text/html;charset=UTF-8
            xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
            xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');
            xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type');
            xhr.setRequestHeader("Content-Type", "application/json");
            if (_this.token)
                xhr.setRequestHeader('Authorization', _this.token);
            xhr.setRequestHeader('tenantId', _this.tenantId);
            xhr.timeout = 8000; // 5 seconds for timeout
            xhr.send(JSON.stringify(params));
        });
    };
    HttpService.NAME = "HttpService";
    HttpService.POST = "POST";
    HttpService.PUT = "PUT";
    return HttpService;
}(com.lightMVC.parrerns.Model));
exports.default = HttpService;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/hall/service/GameHttpService.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '34c10sNInlOjKuHdb/xa3Wb', 'GameHttpService');
// Script/hall/service/GameHttpService.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var HallNotification_1 = require("../events/HallNotification");
var HallAlert_1 = require("../utils/HallAlert");
var MountDataAbs_1 = require("../../lightUI/components/MountDataAbs");
var HallFacase_1 = require("./HallFacase");
/**
 * 这里处理与服务器段的http通信事务  游戏相关接口在这里
 */
var GameHttpService = /** @class */ (function (_super) {
    __extends(GameHttpService, _super);
    function GameHttpService() {
        var _this = _super.call(this, GameHttpService.NAME) || this;
        _this.tenantId = "AS";
        _this._token = "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjI2MzMxLCJhdWQiOiIiLCJleHAiOjE2NjUwNDcyNzgsImlhdCI6MTY2MjQ1NTI3OCwiaXNzIjoiIiwianRpIjoiYTljYzEyMzhlY2MwZDg2NDhhMGNjN2UwODQ4MGQ4MTEiLCJuYmYiOjE2NjI0NTUyNzgsInN1YiI6IiJ9.ITQC7zbvDV8OpUrTfO3o69STngyxbg30Q90UH6FaNGw";
        _this.isShowAlert = false;
        _this.token = cc.sys.localStorage.getItem('token');
        return _this;
    }
    Object.defineProperty(GameHttpService.prototype, "token", {
        get: function () {
            return this._token;
        },
        set: function (value) {
            this._token = value;
            cc.sys.localStorage.setItem('token', this._token);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(GameHttpService.prototype, "_tenantId", {
        set: function (val) {
            this.tenantId = val;
        },
        enumerable: false,
        configurable: true
    });
    GameHttpService.prototype.httpGet = function (url, param, callback) {
        // let lobbyhttp = window.GetAppConfig()['lobbyhttp'];
        // let htp = lobbyhttp.split(':')[0];
        // url = htp + "://" + url;
        url = window.GetAppConfig()['apiAdrress'] + url;
        var xhr = cc.loader.getXMLHttpRequest();
        param = (param) ? param : {};
        // param.tenantId = this.tenantId;
        var params = [];
        for (var key in param) {
            params.push(key + '=' + param[key]);
        }
        // var dataStr = params.join('&');
        // url += "?" + dataStr;
        // this.sentNotification(HallNotification.SMALL_LOADING_SHOW, "httpGetCallBack");
        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4 && xhr.status == 200) {
                var respone = xhr.responseText;
                if (respone)
                    respone = JSON.parse(respone);
                callback && callback(respone);
                // this.sentNotification(HallNotification.SMALL_LOADING_HIDE, "httpGetCallBack");
            }
            else if (xhr.readyState === 4 && xhr.status == 400) {
                var respone = JSON.parse(xhr.responseText);
                HallAlert_1.default.SmallAlert(respone.message);
                // this.sentNotification(HallNotification.SMALL_LOADING_HIDE, "httpGetCallBack");
            }
            else if (xhr.readyState === 4 && xhr.status == 401) {
                this.checkErro();
            }
        }.bind(this);
        xhr.withCredentials = true;
        xhr.open('GET', url, true);
        xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
        xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type,authorization');
        xhr.setRequestHeader("Content-Type", " text/html");
        if (this.token)
            xhr.setRequestHeader('Authorization', this.token);
        // xhr.setRequestHeader('tenantId', this.tenantId);
        xhr.timeout = 8000; // 8 seconds for timeout
        xhr.send();
    };
    GameHttpService.prototype.checkErro = function () {
        var _this = this;
        if (this.isShowAlert == true)
            return;
        this.isShowAlert = true;
        this.sentNotification(HallNotification_1.default.SMALL_LOADING_HIDE, "httpGetCallBack");
        var merberMount = this.getSingleton(MountDataAbs_1.default.TOKENERROR);
        merberMount.update({ type: MountDataAbs_1.default.TOKENERROR, data: null });
        HallAlert_1.default.AlertOk("账号在其它地方登录，请重新登陆!", function () {
            _this.isShowAlert = false;
            HallFacase_1.default.getInstance().sentNotification(HallNotification_1.default.HALL_QUIT);
            HallFacase_1.default.getInstance().sentNotification(HallNotification_1.default.MAINLAYER_HIDE);
            //LightUI.removeAllUI();
        });
    };
    /**
     * 发起post请求 成功后回调callback
     * @param url
     * @param params
     * @param callback
     * @param fireParam         是否把请求参数返回给回调
     * @returns
     */
    GameHttpService.prototype.httpPost = function (url, params, callback, fireParam) {
        var _this = this;
        if (fireParam === void 0) { fireParam = false; }
        var lobbyhttp = window.GetAppConfig()['lobbyhttp'];
        var htp = lobbyhttp.split(':')[0];
        url = htp + "://" + url;
        return new Promise(function (resolve, reject) {
            var xhr = cc.loader.getXMLHttpRequest();
            xhr.onreadystatechange = function () {
                // cc.log("Get: readyState:" + xhr.readyState + " status:" + xhr.status);
                if (xhr.readyState === 4 && xhr.status == 200) {
                    var respone = xhr.responseText;
                    if (callback) {
                        if (respone == "" || respone == null) {
                            if (fireParam == true)
                                callback(params);
                            else
                                callback(null);
                        }
                        else {
                            if (fireParam == true)
                                callback(JSON.parse(respone), params);
                            else
                                callback(JSON.parse(respone));
                        }
                    }
                }
                else if (xhr.readyState === 4 && xhr.status == 400) {
                    var respone = JSON.parse(xhr.responseText);
                    HallAlert_1.default.SmallAlert(respone.message);
                }
                else if (xhr.readyState === 4 && xhr.status == 401) {
                    this.checkErro();
                    //callback(-1);
                }
            }.bind(_this);
            xhr.open("POST", url, true);
            xhr.setRequestHeader('Access-Control-Allow-Origin', '*');
            xhr.setRequestHeader('Access-Control-Allow-Methods', 'GET, POST');
            xhr.setRequestHeader('Access-Control-Allow-Headers', 'x-requested-with,content-type');
            xhr.setRequestHeader("Content-Type", "application/json");
            if (_this.token)
                xhr.setRequestHeader('Authorization', _this.token);
            xhr.setRequestHeader('tenantId', _this.tenantId);
            xhr.timeout = 8000; // 5 seconds for timeout
            xhr.send(JSON.stringify(params));
        });
    };
    /**主页信息 用户信息 */
    GameHttpService.prototype.requestMainHomeInfo = function (callback) {
        var param = {};
        this.httpGet("home", param, function (data) {
            callback && callback(data);
        });
    };
    GameHttpService.NAME = "GameHttpService";
    GameHttpService.POST = "POST";
    GameHttpService.PUT = "PUT";
    return GameHttpService;
}(com.lightMVC.parrerns.Model));
exports.default = GameHttpService;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/LightUI.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e74a23JPuBJy47lHfeMR9l/', 'LightUI');
// Script/lightUI/LightUI.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LayerManager_1 = require("../lightUI/managers/LayerManager");
var LEvent_1 = require("./events/LEvent");
var Logger_1 = require("./logging/Logger");
var LogLevel_1 = require("./logging/LogLevel");
var PopupManager_1 = require("./managers/PopupManager");
var TaskManager_1 = require("./managers/TaskManager");
var Dictionary_1 = require("./utils/Dictionary");
var LightUI = /** @class */ (function () {
    function LightUI() {
    }
    LightUI.init = function (root) {
        this.root = root;
        this.layerManager = new LayerManager_1.default();
        this.layerManager.init(root);
        this.popupManager = new PopupManager_1.default();
        this.taskManager = new TaskManager_1.default(500);
        LightUI.setIsDebug(true, 2);
    };
    LightUI.clearAllPopupManager = function () {
        LightUI.layerManager.popupLayer.removeAllChildren();
        // LightUI.layerManager.sceneLayer.removeAllChildren();
        for (var i = 0; i < LightUI.layerManager.sceneLayer.childrenCount; i++) {
            var item = LightUI.layerManager.sceneLayer.children[i];
            if (item.name == "loadingLayer")
                item.active = true;
            else
                item.active = false;
        }
        this._uiDic.clear();
    };
    LightUI.getRootPos = function (pos, parent) {
        var position = new cc.Vec3();
        //世界坐标
        position = parent.convertToWorldSpaceAR(pos);
        //root坐标
        position = LightUI.root.convertToNodeSpaceAR(position);
        return position;
    };
    LightUI.setIsDebug = function (value, level) {
        if (level === void 0) { level = -1; }
        this.logger.isDebug = value;
        level = (level < 0) ? LogLevel_1.default.DEBUG : level;
        this.logger.loggingLevel = level;
    };
    LightUI.loadPrefab = function (url, completeHandler) {
        cc.loader.loadRes(url, function (err, prefab) {
            if (err == null && prefab) {
                var ui = cc.instantiate(prefab);
                if (ui) {
                    if (completeHandler)
                        completeHandler(ui);
                }
            }
            else {
                cc.warn("加载Prefab：" + url + "错误");
            }
        });
    };
    //UI
    /**
     * 加载UI
     * @param url
     * @param parent
     * @param mask              default true    是否需要挡住下层点击
     * @param autoRemove           default true     是否自动移除  是的话 在接受node close事件时候 销毁和移除ui
     * @param completeHandler
     * @param progressCallback
     */
    LightUI.loadUI = function (url, parent, mask, autoRemove, completeHandler, progressCallback) {
        if (mask === void 0) { mask = true; }
        if (autoRemove === void 0) { autoRemove = true; }
        // console.log("loadUI url:",url)
        var ui = this._uiDic.get(url);
        if (ui) {
            LightUI.showUI(url, ui, parent, mask, autoRemove, completeHandler);
        }
        else {
            cc.loader.loadRes(url, progressCallback, function (err, prefab) {
                if (err == null && prefab) {
                    var ui_1 = cc.instantiate(prefab);
                    if (ui_1) {
                        LightUI.showUI(url, ui_1, parent, mask, autoRemove, completeHandler);
                    }
                }
                else {
                    cc.warn("加载UI：" + url + "错误");
                }
            });
        }
    };
    LightUI.showUI = function (url, ui, parent, mask, autoRemove, completeHandler) {
        if (mask === void 0) { mask = true; }
        if (autoRemove === void 0) { autoRemove = false; }
        // console.log("showUI url:", url)
        this._uiDic.set(url, ui);
        if (ui.parent != null) {
            if (completeHandler)
                completeHandler(ui);
            return;
        }
        // if (mask == true) ui.on(cc.Node.EventType.TOUCH_START, () => { })
        if (mask == true)
            ui.addComponent(cc.BlockInputEvents);
        if (parent)
            parent.addChild(ui);
        if (completeHandler)
            completeHandler(ui);
        setTimeout(function () {
            //确保 第一次时候  onShow 在start后触发
            ui.dispatchEvent(new LEvent_1.default(LEvent_1.default.SHOW));
        }, 0);
        if (autoRemove == true)
            ui.on(LEvent_1.default.CLOSE, function (e) {
                //做好消除工作
                var node = e.target;
                LightUI.disdroyUI(url);
            });
    };
    LightUI.getUI = function (url) {
        return this._uiDic.get(url);
    };
    LightUI.addUI = function (ui, parent, mask, autoRemove) {
        if (mask === void 0) { mask = true; }
        if (autoRemove === void 0) { autoRemove = false; }
        if (mask == true)
            ui.addComponent(cc.BlockInputEvents);
        if (parent)
            parent.addChild(ui);
        ui.dispatchEvent(new LEvent_1.default(LEvent_1.default.SHOW));
        if (autoRemove == true)
            ui.on(LEvent_1.default.CLOSE, function (e) {
                //做好消除工作
                var node = e.target;
                node.destroy();
            });
    };
    LightUI.getNodeUrl = function (node) {
        for (var _i = 0, _a = this._uiDic.keys; _i < _a.length; _i++) {
            var k = _a[_i];
            if (this._uiDic.get(k) == node)
                return k;
        }
        return null;
    };
    LightUI.getUIComponent = function (url, clazz) {
        return LightUI.getUI(url).getComponent(clazz);
    };
    /**
     * 销毁ui
     * @param url
     */
    LightUI.disdroyUI = function (url) {
        // console.log("disdroyUI url:", url)
        var node = this.hideUI(url);
        if (node == null)
            return;
        node.destroy();
        this._uiDic.remove(url);
    };
    LightUI.removeUI = function (url) {
        var node = this._uiDic.get(url);
        node.removeFromParent(false);
    };
    LightUI.removeAllUI = function () {
        var d = this._uiDic;
        for (var key in d) {
            d[key].removeFromParent(false);
        }
    };
    LightUI.removeUIByNode = function (node) {
        var url = this.getNodeUrl(node);
        if (!url)
            return;
        this.removeUI(url);
    };
    /**
     * 隐藏ui
     * @param url
     * @returns
     */
    LightUI.hideUI = function (url) {
        // console.log("hideUI ", url)
        var ui = this._uiDic.get(url);
        if (ui == null)
            return null;
        // ui.active = false;
        ui.removeFromParent(false);
        // this.layerManager.hideScene(ui);
        return ui;
    };
    LightUI.loadScene = function (url, parent, autoRemove, completeHandler, mask, progressCallback) {
        if (autoRemove === void 0) { autoRemove = true; }
        if (mask === void 0) { mask = true; }
        this.loadUI(url, parent, mask, autoRemove, completeHandler, progressCallback);
    };
    //popup
    //scene
    LightUI.addScene = function (scene) {
        this.layerManager.addScene(scene);
    };
    LightUI.removeScene = function (scene) {
        this.layerManager.removeScene(scene);
    };
    LightUI.desdroyScene = function (scene) {
        this.layerManager.desdroyScene(scene);
    };
    LightUI.showScene = function (scene) {
        this.layerManager.showScene(scene);
    };
    LightUI.hideSceneByNode = function (scene) {
        this.layerManager.hideScene(scene);
        for (var _i = 0, _a = this._uiDic.keys; _i < _a.length; _i++) {
            var k = _a[_i];
            if (scene == this._uiDic.get(k))
                this.hideScene(k);
        }
    };
    LightUI.hideScene = function (url) {
        // console.log("hideScene ", url)
        // let scene:cc.Node = this._uiDic.get(url);
        // if(scene == null) return;
        // this.layerManager.hideScene(scene);
        this.hideUI(url);
    };
    LightUI.logger = new Logger_1.default("LUI", false, "http://10.63.7.63:60521/ClientLog", "bull.log");
    LightUI._uiDic = new Dictionary_1.default;
    return LightUI;
}());
exports.default = LightUI;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/LViewStack.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'e2b75o/y1hM/ax+HF7zOoOP', 'LViewStack');
// Script/lightUI/components/LViewStack.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../events/LEvent");
var LComponent_1 = require("./LComponent");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LViewStack = /** @class */ (function (_super) {
    __extends(LViewStack, _super);
    function LViewStack() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._views = [];
        _this._selectIndex = -1;
        return _this;
    }
    LViewStack.prototype.onLoad = function () {
        for (var i = 0; i < this.node.childrenCount; i++) {
            this._views.push(this.node.children[i]);
        }
    };
    LViewStack.prototype.visibleAll = function (value) {
        var l = this._views.length;
        for (var i = 0; i < l; i++) {
            this._views[i].active = value;
        }
    };
    LViewStack.prototype.getViewByIndex = function (index) {
        return this._views[index];
    };
    Object.defineProperty(LViewStack.prototype, "selectIndex", {
        get: function () { return this._selectIndex; },
        set: function (value) {
            if (this._selectIndex == value)
                return;
            this._selectIndex = value;
            this.visibleAll(false);
            this.getViewByIndex(value).active = true;
            this.node.dispatchEvent(new LEvent_1.default(LEvent_1.default.CHANGED));
            this.node.dispatchEvent(new LEvent_1.default(LEvent_1.default.SELECT));
        },
        enumerable: false,
        configurable: true
    });
    ;
    LViewStack.prototype.addView = function (view) {
        this.node.addChild(view);
        this._views.push(view);
        view.active = false;
    };
    LViewStack.prototype.removeView = function (view) {
        var l = this._views.length;
        for (var i = 0; i < l; i++) {
            if (this._views[i] == view) {
                this._views.splice(i, 1);
                this.node.removeChild(view, false);
            }
        }
    };
    Object.defineProperty(LViewStack.prototype, "views", {
        get: function () { return this._views; },
        set: function (value) {
            var l = this._views.length;
            for (var i = 0; i < l; i++) {
                this.addView(value[i]);
            }
        },
        enumerable: false,
        configurable: true
    });
    ;
    LViewStack = __decorate([
        ccclass
    ], LViewStack);
    return LViewStack;
}(LComponent_1.default));
exports.default = LViewStack;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxjb21wb25lbnRzXFxMVmlld1N0YWNrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUFzQztBQUN0QywyQ0FBcUM7QUFHL0IsSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFJNUM7SUFBd0MsOEJBQVU7SUFBbEQ7UUFBQSxxRUEwREM7UUF6RFcsWUFBTSxHQUFrQixFQUFFLENBQUM7UUFDM0Isa0JBQVksR0FBVSxDQUFDLENBQUMsQ0FBQzs7SUF3RHJDLENBQUM7SUF0REcsMkJBQU0sR0FBTjtRQUNJLEtBQUksSUFBSSxDQUFDLEdBQVUsQ0FBQyxFQUFFLENBQUMsR0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDLEVBQUUsRUFBQztZQUNqRCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQzNDO0lBQ0wsQ0FBQztJQUVPLCtCQUFVLEdBQWxCLFVBQW1CLEtBQWE7UUFDNUIsSUFBSSxDQUFDLEdBQVUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDbEMsS0FBSSxJQUFJLENBQUMsR0FBVSxDQUFDLEVBQUUsQ0FBQyxHQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBQztZQUMzQixJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7U0FDakM7SUFDTCxDQUFDO0lBRU0sbUNBQWMsR0FBckIsVUFBc0IsS0FBWTtRQUM5QixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUE7SUFDN0IsQ0FBQztJQUVELHNCQUFXLG1DQUFXO2FBVXRCLGNBQWlDLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQSxDQUFDLENBQUM7YUFWM0QsVUFBdUIsS0FBWTtZQUMvQixJQUFHLElBQUksQ0FBQyxZQUFZLElBQUksS0FBSztnQkFBRSxPQUFPO1lBQ3RDLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO1lBRTFCLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDdkIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBRXpDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksZ0JBQU0sQ0FBQyxnQkFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDcEQsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxnQkFBTSxDQUFDLGdCQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUN2RCxDQUFDOzs7T0FBQTtJQUMwRCxDQUFDO0lBR3JELDRCQUFPLEdBQWQsVUFBZSxJQUFZO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3hCLENBQUM7SUFFTSwrQkFBVSxHQUFqQixVQUFrQixJQUFZO1FBQzFCLElBQUksQ0FBQyxHQUFVLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQ2xDLEtBQUksSUFBSSxDQUFDLEdBQVUsQ0FBQyxFQUFFLENBQUMsR0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUM7WUFDM0IsSUFBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLElBQUksRUFBQztnQkFDdEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN4QixJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUMsS0FBSyxDQUFDLENBQUM7YUFDckM7U0FDSjtJQUNMLENBQUM7SUFFRCxzQkFBVyw2QkFBSzthQU9oQixjQUFtQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUEsQ0FBQyxDQUFDO2FBUHZELFVBQWlCLEtBQW9CO1lBQ2pDLElBQUksQ0FBQyxHQUFVLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQ2xDLEtBQUksSUFBSSxDQUFDLEdBQVUsQ0FBQyxFQUFFLENBQUMsR0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUM7Z0JBQzNCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDMUI7UUFDTCxDQUFDOzs7T0FBQTtJQUVzRCxDQUFDO0lBekR2QyxVQUFVO1FBRjlCLE9BQU87T0FFYSxVQUFVLENBMEQ5QjtJQUFELGlCQUFDO0NBMURELEFBMERDLENBMUR1QyxvQkFBVSxHQTBEakQ7a0JBMURvQixVQUFVIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExFdmVudCBmcm9tIFwiLi4vZXZlbnRzL0xFdmVudFwiO1xyXG5pbXBvcnQgTENvbXBvbmVudCBmcm9tIFwiLi9MQ29tcG9uZW50XCJcclxuaW1wb3J0IExUYWJCYXIgZnJvbSBcIi4vTFRhYkJhclwiO1xyXG5cclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMVmlld1N0YWNrIGV4dGVuZHMgTENvbXBvbmVudHtcclxuICAgIHByaXZhdGUgX3ZpZXdzOkFycmF5PGNjLk5vZGU+ID0gW107XHJcbiAgICBwcml2YXRlIF9zZWxlY3RJbmRleDpudW1iZXIgPSAtMTsgICBcclxuXHJcbiAgICBvbkxvYWQoKXtcclxuICAgICAgICBmb3IodmFyIGk6bnVtYmVyID0gMDsgaTx0aGlzLm5vZGUuY2hpbGRyZW5Db3VudDsgaSsrKXtcclxuICAgICAgICAgICAgdGhpcy5fdmlld3MucHVzaCh0aGlzLm5vZGUuY2hpbGRyZW5baV0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHZpc2libGVBbGwodmFsdWU6Ym9vbGVhbik6dm9pZHtcclxuICAgICAgICB2YXIgbDpudW1iZXIgPSB0aGlzLl92aWV3cy5sZW5ndGg7XHJcbiAgICAgICAgZm9yKHZhciBpOm51bWJlciA9IDA7IGk8bDsgaSsrKXtcclxuICAgICAgICAgICAgdGhpcy5fdmlld3NbaV0uYWN0aXZlID0gdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRWaWV3QnlJbmRleChpbmRleDpudW1iZXIpOmNjLk5vZGV7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZpZXdzW2luZGV4XVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZXQgc2VsZWN0SW5kZXgodmFsdWU6bnVtYmVyKXtcclxuICAgICAgICBpZih0aGlzLl9zZWxlY3RJbmRleCA9PSB2YWx1ZSkgcmV0dXJuO1xyXG4gICAgICAgIHRoaXMuX3NlbGVjdEluZGV4ID0gdmFsdWU7XHJcblxyXG4gICAgICAgIHRoaXMudmlzaWJsZUFsbChmYWxzZSk7XHJcbiAgICAgICAgdGhpcy5nZXRWaWV3QnlJbmRleCh2YWx1ZSkuYWN0aXZlID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgdGhpcy5ub2RlLmRpc3BhdGNoRXZlbnQobmV3IExFdmVudChMRXZlbnQuQ0hBTkdFRCkpO1xyXG4gICAgICAgIHRoaXMubm9kZS5kaXNwYXRjaEV2ZW50KG5ldyBMRXZlbnQoTEV2ZW50LlNFTEVDVCkpO1xyXG4gICAgfVxyXG4gICAgcHVibGljIGdldCBzZWxlY3RJbmRleCgpOm51bWJlcnsgcmV0dXJuIHRoaXMuX3NlbGVjdEluZGV4IH07XHJcblxyXG5cclxuICAgIHB1YmxpYyBhZGRWaWV3KHZpZXc6Y2MuTm9kZSl7XHJcbiAgICAgICAgdGhpcy5ub2RlLmFkZENoaWxkKHZpZXcpO1xyXG4gICAgICAgIHRoaXMuX3ZpZXdzLnB1c2godmlldyk7XHJcbiAgICAgICAgdmlldy5hY3RpdmUgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcmVtb3ZlVmlldyh2aWV3OmNjLk5vZGUpe1xyXG4gICAgICAgIHZhciBsOm51bWJlciA9IHRoaXMuX3ZpZXdzLmxlbmd0aDtcclxuICAgICAgICBmb3IodmFyIGk6bnVtYmVyID0gMDsgaTxsOyBpKyspe1xyXG4gICAgICAgICAgICBpZih0aGlzLl92aWV3c1tpXSA9PSB2aWV3KXtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3ZpZXdzLnNwbGljZShpLDEpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ub2RlLnJlbW92ZUNoaWxkKHZpZXcsZmFsc2UpO1xyXG4gICAgICAgICAgICB9IFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IHZpZXdzKHZhbHVlOkFycmF5PGNjLk5vZGU+KXtcclxuICAgICAgICB2YXIgbDpudW1iZXIgPSB0aGlzLl92aWV3cy5sZW5ndGg7XHJcbiAgICAgICAgZm9yKHZhciBpOm51bWJlciA9IDA7IGk8bDsgaSsrKXtcclxuICAgICAgICAgICAgdGhpcy5hZGRWaWV3KHZhbHVlW2ldKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCB2aWV3cygpOkFycmF5PGNjLk5vZGU+eyByZXR1cm4gdGhpcy5fdmlld3MgfTtcclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/LTabBar.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f55fcLrnZ9C/KqlHrqZs67K', 'LTabBar');
// Script/lightUI/components/LTabBar.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../events/LEvent");
var LComponent_1 = require("./LComponent");
var LViewStack_1 = require("./LViewStack");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LTabBar = /** @class */ (function (_super) {
    __extends(LTabBar, _super);
    function LTabBar() {
        var _this = _super.call(this) || this;
        _this.viewStack = null;
        _this._btns = [];
        _this._selectIndex = -1;
        return _this;
        // console.log("LTabBar.constructor");
    }
    //@override 
    LTabBar.prototype.onLoad = function () {
        // console.log("LTabBar.onLoad",this.node.childrenCount);
        var btn;
        var isShow = true;
        for (var i = 0; i < this.node.childrenCount; i++) {
            btn = this.node.children[i].getComponent(cc.Button);
            if (btn != null) {
                this._btns.push(btn);
                btn.node["index"] = this._btns.length - 1;
                if (btn.node.active == true && btn.node.opacity == 255) {
                    btn.node.on(cc.Node.EventType.TOUCH_START, this.onItemClick, this);
                }
            }
        }
        this.node.dispatchEvent(new LEvent_1.default(LEvent_1.default.ITEM_CLICK, this.selectIndex));
    };
    LTabBar.prototype.onItemClick = function (e) {
        // console.log("seleonItemClickctAll",e.target["index"]);
        this.selectIndex = e.target["index"];
        this.node.dispatchEvent(new LEvent_1.default(LEvent_1.default.ITEM_CLICK, this.selectIndex));
    };
    LTabBar.prototype.selectAll = function (value) {
        // console.log("selectAll",value);
        var l = this._btns.length;
        for (var i = 0; i < l; i++) {
            this._btns[i].interactable = !value;
        }
    };
    LTabBar.prototype.getButtonByIndex = function (index) {
        return this._btns[index];
    };
    LTabBar.prototype.clear = function () {
        this._selectIndex = -1;
        var btn;
        for (var i = 0; i < this._btns.length; i++) {
            btn = this._btns[i];
            btn.node.off(cc.Node.EventType.TOUCH_START, this.onItemClick, this);
            btn.interactable = true;
        }
        this._btns = [];
    };
    LTabBar.prototype.getSelectButton = function () {
        if (this._selectIndex == -1)
            return null;
        return this._btns[this._selectIndex];
    };
    Object.defineProperty(LTabBar.prototype, "selectIndex", {
        get: function () { return this._selectIndex; },
        set: function (value) {
            //-1则清除选中状态
            if (value < 0) {
                this._selectIndex = -1;
                this.selectAll(false);
                return;
            }
            ;
            if (this._btns.length <= 0)
                return;
            if (this._selectIndex == value)
                return;
            this._selectIndex = value;
            // console.log("selectIndex", value);
            this.selectAll(false);
            this.getButtonByIndex(value).interactable = false;
            if (this.viewStack)
                this.viewStack.selectIndex = this._selectIndex;
            this.node.dispatchEvent(new LEvent_1.default(LEvent_1.default.CHANGED, value));
            this.node.dispatchEvent(new LEvent_1.default(LEvent_1.default.SELECT, value));
        },
        enumerable: false,
        configurable: true
    });
    ;
    Object.defineProperty(LTabBar.prototype, "selectButton", {
        get: function () {
            return this._btns[this._selectIndex];
        },
        enumerable: false,
        configurable: true
    });
    __decorate([
        property(LViewStack_1.default)
    ], LTabBar.prototype, "viewStack", void 0);
    LTabBar = __decorate([
        ccclass
    ], LTabBar);
    return LTabBar;
}(LComponent_1.default));
exports.default = LTabBar;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/LListAbs.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '89cf7LUGo5MR6MShG+87sfW', 'LListAbs');
// Script/lightUI/components/LListAbs.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var LComponent_1 = require("./LComponent");
var LListAbs = /** @class */ (function (_super) {
    __extends(LListAbs, _super);
    function LListAbs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(LListAbs.prototype, "dataProvider", {
        // private _dataProvider;
        set: function (data) {
            // this._dataProvider = data;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LListAbs.prototype, "selectedIndex", {
        get: function () {
            return -1;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LListAbs.prototype, "selectedItem", {
        get: function () {
            return null;
        },
        enumerable: false,
        configurable: true
    });
    return LListAbs;
}(LComponent_1.default));
exports.default = LListAbs;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxjb21wb25lbnRzXFxMTGlzdEFicy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwyQ0FBc0M7QUFFdEM7SUFBc0MsNEJBQVU7SUFBaEQ7O0lBYUEsQ0FBQztJQVhHLHNCQUFXLGtDQUFZO1FBRHZCLHlCQUF5QjthQUN6QixVQUF3QixJQUFlO1lBQ25DLDZCQUE2QjtRQUNqQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFXLG1DQUFhO2FBQXhCO1lBQ0ksT0FBTyxDQUFDLENBQUMsQ0FBQztRQUNkLENBQUM7OztPQUFBO0lBRUQsc0JBQVcsa0NBQVk7YUFBdkI7WUFDSSxPQUFPLElBQUksQ0FBQztRQUNoQixDQUFDOzs7T0FBQTtJQUNMLGVBQUM7QUFBRCxDQWJBLEFBYUMsQ0FicUMsb0JBQVUsR0FhL0MiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTENvbXBvbmVudCBmcm9tIFwiLi9MQ29tcG9uZW50XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMTGlzdEFicyBleHRlbmRzIExDb21wb25lbnR7XHJcbiAgICAvLyBwcml2YXRlIF9kYXRhUHJvdmlkZXI7XHJcbiAgICBwdWJsaWMgc2V0IGRhdGFQcm92aWRlcihkYXRhOkFycmF5PGFueT4pe1xyXG4gICAgICAgIC8vIHRoaXMuX2RhdGFQcm92aWRlciA9IGRhdGE7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBzZWxlY3RlZEluZGV4KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIC0xO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgc2VsZWN0ZWRJdGVtKCk6IGFueSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/hall/lightMVC.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '74a3cZ5aUxPSKB2prEmvMcV', 'lightMVC');
// Script/hall/lightMVC.js

"use strict";

var __extends = void 0 && (void 0).__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

var com;

(function (com) {
  var lightMVC;

  (function (lightMVC) {
    var core;

    (function (core) {
      var Node =
      /** @class */
      function () {
        function Node(name) {
          if (name === void 0) {
            name = null;
          }

          this._isInitialize = false; ///////////////标记是否已经被初始化

          this.name = name;
        } //		public setProxy(proxy:IProxy):void{
        //			this.proxy = proxy;
        //			
        //			//TODO:  如此的做法 只能是  被注入的类 必须先与注入类 创建     优化方案   静态注入类  同一批次注入   动态注入的类  只能是被注入 已创建的类 
        //			//if(getInjector().length != 0) proxy["injector"](getInjector(),this);
        //		}


        Node.prototype.getName = function () {
          return this.name;
        }; //		public sentNotification(notiName:string, body:Object = null):INode{
        //			proxy.sentNotification(new Notification(notiName,body));
        //			return this;
        //		}


        Node.prototype.getInjector = function () {
          return [];
        };

        Node.prototype.getIsInitialize = function () {
          return this._isInitialize;
        };

        Node.prototype.setIsInitialize = function (value) {
          this._isInitialize = value;
        };

        return Node;
      }();

      core.Node = Node;
    })(core = lightMVC.core || (lightMVC.core = {}));
  })(lightMVC = com.lightMVC || (com.lightMVC = {}));
})(com || (com = {})); //========= parrerns ==========


(function (com) {
  var lightMVC;

  (function (lightMVC) {
    var parrerns;

    (function (parrerns) {
      var PipelineNotification =
      /** @class */
      function () {
        function PipelineNotification(name, body) {
          if (body === void 0) {
            body = null;
          }

          this._name = name;
          this._body = body;
        }

        PipelineNotification.prototype.getName = function () {
          return this._name;
        };

        PipelineNotification.prototype.setName = function (value) {
          this._name = value;
        };

        PipelineNotification.prototype.setBody = function (body) {
          this._body = body;
        };

        PipelineNotification.prototype.getBody = function () {
          return this._body;
        };

        PipelineNotification.prototype.toString = function () {
          return null;
        };

        return PipelineNotification;
      }();

      parrerns.PipelineNotification = PipelineNotification;
    })(parrerns = lightMVC.parrerns || (lightMVC.parrerns = {}));
  })(lightMVC = com.lightMVC || (com.lightMVC = {}));
})(com || (com = {}));

(function (com) {
  var lightMVC;

  (function (lightMVC) {
    var parrerns;

    (function (parrerns) {
      var PipelineNotification = com.lightMVC.parrerns.PipelineNotification;

      var FacadeManager =
      /** @class */
      function () {
        function FacadeManager() {}

        FacadeManager.getFacade = function (key) {
          var facade = this._facades[key];

          if (facade == null) {
            facade = new parrerns.Facade();
            this._facades[key] = facade;
          }

          return facade;
        };

        FacadeManager.registerFacade = function (name, facade) {
          this._facades[name] = facade;
        };

        FacadeManager.removeFacade = function (name) {
          var facade = this._facades[name];
          if (facade == null) return;
          facade.destroy();
          delete this._facades[name];
        };

        FacadeManager.sentPipelineNotification = function (notiName, body) {
          if (body === void 0) {
            body = null;
          } //foreach


          var facade;

          for (var key in this._facades) {
            facade = this._facades[key];
            facade.handlerPipelineNotification(new PipelineNotification(notiName, body));
          }
        };

        FacadeManager._facades = new Object();
        return FacadeManager;
      }();

      parrerns.FacadeManager = FacadeManager;
    })(parrerns = lightMVC.parrerns || (lightMVC.parrerns = {}));
  })(lightMVC = com.lightMVC || (com.lightMVC = {}));
})(com || (com = {}));

(function (com) {
  var lightMVC;

  (function (lightMVC) {
    var parrerns;

    (function (parrerns) {
      var Node = com.lightMVC.core.Node;

      var Mediator =
      /** @class */
      function (_super) {
        __extends(Mediator, _super);

        function Mediator(mediatorName, viewComponent) {
          if (mediatorName === void 0) {
            mediatorName = "";
          }

          if (viewComponent === void 0) {
            viewComponent = null;
          }

          var _this = _super.call(this) || this;

          _this.name = mediatorName != null ? mediatorName : Mediator.NAME; //if(viewComponent) setViewComponent(viewComponent);

          if (viewComponent) _this.viewComponent = viewComponent;
          return _this;
        }

        Mediator.prototype.getSingleton = function (clazzname) {
          return this._proxy.getSingleton(clazzname);
        };
        /**
         * 添加关注的消息名称
         * @param notiName	关注的消息名称
         * @return
         *
         */


        Mediator.prototype.addNotifiction = function (notiName) {
          this._proxy.registerNotificationMediator(notiName, this);

          return this;
        };
        /**
         * 删除关注的消息
         * @param notiName	消息名称
         * @return
         *
         */


        Mediator.prototype.removeNotifiction = function (notiName) {
          this._proxy.removeOneNotificationMediator(notiName, this);

          return this;
        };
        /**
         * 获取UI
         * @return
         *
         */


        Mediator.prototype.getViewComponent = function () {
          return this.viewComponent;
        };
        /**
         * 设置UI
         * @param viewComponent
         *
         */


        Mediator.prototype.setViewComponent = function (viewComponent) {
          this.viewComponent = viewComponent;
        };
        /**
         * 调用此方法 完成参数注入   参数需在 getInjector()数组里申明
         *
         */


        Mediator.prototype.injector = function () {
          this._proxy.injector(this.getInjector(), this);
        };

        Mediator.prototype.setProxy = function (proxy) {
          this._proxy = proxy;
        };
        /**
         * 获取model数据
         * @param modelName
         * @return
         *
         */


        Mediator.prototype.getModel = function (modelName) {
          return this._proxy.getModel(modelName);
        };
        /**
         * 获取mediatot视图
         * @param mediatorName
         * @return
         *
         */


        Mediator.prototype.getMediator = function (mediatorName) {
          return this._proxy.getMediator(mediatorName);
        };
        /**
         * 发送消息
         * @param notiName	消息名称
         * @param body		消息携带的参数
         *
         */


        Mediator.prototype.sentNotification = function (notiName, body) {
          if (body === void 0) {
            body = null;
          }

          this._proxy.sentNotification(new parrerns.Notification(notiName, body));

          return this;
        };
        /**
         * 发送管道消息
         * @param notiName
         * @param body
         * @return
         *
         */


        Mediator.prototype.sentPipeNotification = function (notiName, body) {
          if (body === void 0) {
            body = null;
          }

          this._proxy.sentNotification(new parrerns.Notification(notiName, body));

          return this;
        };
        /**
         * 注册完成后触发此函数
         *
         */


        Mediator.prototype.onRegister = function () {};
        /**
         * 初始化完成后触发此函数   如需获取其它注册对象  需在此函数执行后  否则不能确保获取成功
         *
         */


        Mediator.prototype.onInitialize = function () {};
        /**
         * 被移除时候调用此函数
         *
         */


        Mediator.prototype.onRemove = function () {};
        /**
         * 消息处理函数  子类可以重写此方法
         * @param notification
         *
         */


        Mediator.prototype.handler = function (notification) {};
        /**
         * 响应管道消息函数 自雷可以重写此方法
         * @param noti
         *
         */


        Mediator.prototype.pipeHandler = function (noti) {};
        /**
         * 绑定关注的视图类
         * @param viewClazz
         *
         */


        Mediator.prototype.bindingView = function (viewClazz) {
          this._viewClazz = viewClazz;
        };

        Mediator.prototype.getViewClazz = function () {
          return this._viewClazz;
        };

        Mediator.NAME = "Mediator";
        return Mediator;
      }(Node);

      parrerns.Mediator = Mediator;
    })(parrerns = lightMVC.parrerns || (lightMVC.parrerns = {}));
  })(lightMVC = com.lightMVC || (com.lightMVC = {}));
})(com || (com = {}));

(function (com) {
  var lightMVC;

  (function (lightMVC) {
    var parrerns;

    (function (parrerns) {
      var Node = com.lightMVC.core.Node;

      var Command =
      /** @class */
      function (_super) {
        __extends(Command, _super);

        function Command() {
          return _super !== null && _super.apply(this, arguments) || this;
        }

        Command.prototype.getSingleton = function (clazzname) {
          return this._proxy.getSingleton(clazzname);
        };
        /**
         * 获取一个model数据
         * @param modelName
         * @return
         *
         */


        Command.prototype.getModel = function (modelName) {
          return this._proxy.getModel(modelName);
        };
        /**
         * 获取一个mediator视图
         * @param mediatorName
         * @return
         *
         */


        Command.prototype.getMediator = function (mediatorName) {
          return this._proxy.getMediator(mediatorName);
        };

        Command.prototype.setProxy = function (proxy) {
          this._proxy = proxy;
        };
        /**
         * 发送消息
         * @param notiName	消息名称
         * @param body		消息携带的参数
         *
         */


        Command.prototype.sentNotification = function (notiName, body) {
          if (body === void 0) {
            body = null;
          }

          this._proxy.sentNotification(new parrerns.Notification(notiName, body));

          return this;
        };
        /**
         * 发送管道消息
         * @param notiName
         * @param body
         * @return
         *
         */


        Command.prototype.sentPipeNotification = function (notiName, body) {
          if (body === void 0) {
            body = null;
          }

          this._proxy.sentNotification(new parrerns.Notification(notiName, body));

          return this;
        };
        /**
         * 调用此方法 完成参数注入   参数需在 getInjector()数组里申明
         *
         */


        Command.prototype.injector = function () {
          this._proxy.injector(this.getInjector(), this);
        };
        /**
         * 消息处理函数  子类可以重写此方法
         * @param notification
         *
         */


        Command.prototype.handler = function (notification) {};
        /**
         * 响应管道消息函数 自雷可以重写此方法
         * @param noti
         *
         */


        Command.prototype.pipeHandler = function (noti) {};

        return Command;
      }(Node);

      parrerns.Command = Command;
    })(parrerns = lightMVC.parrerns || (lightMVC.parrerns = {}));
  })(lightMVC = com.lightMVC || (com.lightMVC = {}));
})(com || (com = {}));

(function (com) {
  var lightMVC;

  (function (lightMVC) {
    var parrerns;

    (function (parrerns) {
      var Notification =
      /** @class */
      function () {
        function Notification(name, body) {
          if (body === void 0) {
            body = null;
          }

          this._name = name;
          this._body = body;
        }

        Notification.prototype.getName = function () {
          return this._name;
        };

        Notification.prototype.setName = function (value) {
          this._name = value;
        };

        Notification.prototype.setBody = function (body) {
          this._body = body;
        };

        Notification.prototype.getBody = function () {
          return this._body;
        };

        Notification.prototype.toString = function () {
          return null;
        };

        return Notification;
      }();

      parrerns.Notification = Notification;
    })(parrerns = lightMVC.parrerns || (lightMVC.parrerns = {}));
  })(lightMVC = com.lightMVC || (com.lightMVC = {}));
})(com || (com = {}));

(function (com) {
  var lightMVC;

  (function (lightMVC) {
    var parrerns;

    (function (parrerns) {
      var Node = com.lightMVC.core.Node;

      var Configure =
      /** @class */
      function (_super) {
        __extends(Configure, _super);

        function Configure() {
          return _super.call(this) || this;
        }

        ;
        /**
         * 注入依赖关系
         *
         */

        Configure.prototype.injectorAll = function () {
          this._proxy.injectorAll();
        };

        Configure.prototype.asSingleton = function (name, single) {
          this._proxy.asSingleton(name, single);
        };
        /**
         * 子类可以重写此方法 完成流程配置
         *
         */


        Configure.prototype.configure = function () {};
        /**
         * 注册model数据
         * @param mmodel
         * @return
         *
         */


        Configure.prototype.registerModel = function (mmodel) {
          return this._proxy.registerModel(mmodel);
        };
        /**
         * 注册command控制器
         * @param noteName			需要关注的消息名
         * @param commandClassRef	处理的command类
         *
         */


        Configure.prototype.registerCommand = function (noteName, commandClassRef) {
          this._proxy.registerCommand(noteName, commandClassRef);
        };

        Configure.prototype.registerPipeCommand = function (noteName, commandClassRef) {
          this._proxy.registerPipeNotificationCommand(noteName, commandClassRef);
        };
        /**
         * 注册mediator视图
         * @param mediator
         * @return
         *
         */


        Configure.prototype.registerMediator = function (mediator, viewClazz) {
          if (viewClazz === void 0) {
            viewClazz = null;
          }

          return this._proxy.registerMediator(mediator, viewClazz);
        };

        Configure.prototype.setProxy = function (proxy) {
          this._proxy = proxy;
          this.configure();
        };

        Configure.prototype.getProxy = function () {
          return this._proxy;
        };
        /**
         * 发送消息
         * @param notiName	消息名称
         * @param body		消息携带的参数
         *
         */


        Configure.prototype.sentNotification = function (notiName, body) {
          if (body === void 0) {
            body = null;
          }

          this._proxy.sentNotification(new parrerns.Notification(notiName, body));

          return this;
        };

        return Configure;
      }(Node);

      parrerns.Configure = Configure;
    })(parrerns = lightMVC.parrerns || (lightMVC.parrerns = {}));
  })(lightMVC = com.lightMVC || (com.lightMVC = {}));
})(com || (com = {}));

(function (com) {
  var lightMVC;

  (function (lightMVC) {
    var parrerns;

    (function (parrerns) {
      var Node = com.lightMVC.core.Node;

      var Model =
      /** @class */
      function (_super) {
        __extends(Model, _super);

        function Model(modelName, data) {
          if (modelName === void 0) {
            modelName = null;
          }

          if (data === void 0) {
            data = null;
          }

          var _this = _super.call(this) || this;

          _this.name = modelName != null ? modelName : Model.NAME;
          if (data != null) _this.setData(data);
          return _this;
        }
        /**
         * 获取注册过的单列
         * @param clazzname
         * @return
         *
         */


        Model.prototype.getSingleton = function (clazzname) {
          return this._proxy.getSingleton(clazzname);
        };
        /**
         * 获取model数据
         * @param modelName
         * @return
         *
         */


        Model.prototype.getModel = function (modelName) {
          return this._proxy.getModel(modelName);
        };

        Model.prototype.setProxy = function (proxy) {
          this._proxy = proxy;
        };
        /**
         * 发送消息
         * @param notiName	消息名称
         * @param body		消息携带的参数
         *
         */


        Model.prototype.sentNotification = function (notiName, body) {
          if (body === void 0) {
            body = null;
          }

          this._proxy.sentNotification(new parrerns.Notification(notiName, body));

          return this;
        };
        /**
         * 发送管道消息
         * @param notiName
         * @param body
         * @return
         *
         */


        Model.prototype.sentPipeNotification = function (notiName, body) {
          if (body === void 0) {
            body = null;
          }

          this._proxy.sentNotification(new parrerns.Notification(notiName, body));

          return this;
        };
        /**
         * 调用此方法 完成参数注入   参数需在 getInjector()数组里申明
         *
         */


        Model.prototype.injector = function () {
          this._proxy.injector(this.getInjector(), this);
        };
        /**
         * 注册完成后触发此函数
         *
         */


        Model.prototype.onRegister = function () {};
        /**
         * 初始化完成后触发此函数   如需获取其它注册对象  需在此函数执行后  否则不能确保获取成功
         *
         */


        Model.prototype.onInitialize = function () {};
        /**
         * 被移除时候调用此函数
         *
         */


        Model.prototype.onRemove = function () {};

        Model.prototype.getData = function () {
          return this._data;
        };

        Model.prototype.setData = function (value) {
          this._data = value;
        };

        Model.NAME = "Model";
        return Model;
      }(Node);

      parrerns.Model = Model;
    })(parrerns = lightMVC.parrerns || (lightMVC.parrerns = {}));
  })(lightMVC = com.lightMVC || (com.lightMVC = {}));
})(com || (com = {}));

(function (com) {
  var lightMVC;

  (function (lightMVC) {
    var core;

    (function (core) {
      var FacadeManager = com.lightMVC.parrerns.FacadeManager;

      var Proxy =
      /** @class */
      function () {
        function Proxy() {
          //		private var _dispatcher:INofiticationDispatcher = new NofiticationDispatcher();
          this._commandMap = {}; /////////////以name为key

          this._mediatorMap = {};
          this._modelMap = {};
          this._singleMap = {};
          this._notoViewMap = {};
          this._notoCommMap = {};
          this._pipeViewMap = {};
          this._pipeCommMap = {};
        }

        Proxy.prototype.destroy = function () {
          this._commandMap = null; /////////////以name为key

          this._mediatorMap = null;
          this._modelMap = null;
          this._singleMap = null;
          this._notoViewMap = null;
          this._notoCommMap = null;
          this._pipeViewMap = null;
          this._pipeCommMap = null;
        };

        Proxy.prototype.asSingleton = function (name, clazz) {
          //Laya.ClassUtils.getClass();
          if (this._singleMap[name]) throw new Error("asSingleton() 单例不能重名");
          this._singleMap[name] = new SingleInfo(name, clazz);
        };

        Proxy.prototype.getSingleton = function (clazzname) {
          var info = this._singleMap[clazzname];
          return info ? info.single : null;
        };

        Proxy.prototype.hasSingleton = function (name) {
          return this._singleMap[name] == null ? false : true;
          ;
        };

        Proxy.prototype.removeSingleton = function (name) {
          var model = this._modelMap[name];
          delete this._modelMap[name];
          if (model.onRemove) model.onRemove();
          return model;
        };

        Proxy.prototype.registerModel = function (model) {
          //trace("registerModel",mmodel,mmodel.getName, mmodel is IModel,mmodel is TestModel)
          this._modelMap[model.getName()] = model;
          model.setProxy(this);
          model.onRegister(); //if(model.getInjector().length == 0) model.onInitialize();

          return model;
        };

        Proxy.prototype.getModel = function (modelName) {
          return this._modelMap[modelName];
        };

        Proxy.prototype.hasModel = function (modelName) {
          return this._modelMap[modelName] == null ? false : true;
        };

        Proxy.prototype.removeModel = function (modelName) {
          var model = this._modelMap[modelName];
          delete this._modelMap[modelName];
          model.onRemove();
          model = null;
        };

        Proxy.prototype.registerCommand = function (noteName, commandClassRef) {
          this._commandMap[commandClassRef] = commandClassRef;
          this.registerNotificationCommand(noteName, commandClassRef);
        };

        Proxy.prototype.hasCommand = function (commandClassRef) {
          return this._commandMap[commandClassRef] == null ? false : true;
        };

        Proxy.prototype.removeCommand = function (commandClassRef) {
          delete this._commandMap[commandClassRef];
          this.removeNotificationCommand(commandClassRef);
        };

        Proxy.prototype.registerMediator = function (mediator, viewClazz) {
          if (viewClazz === void 0) {
            viewClazz = null;
          }

          this._mediatorMap[mediator.getName()] = mediator;
          mediator.setProxy(this);
          mediator.onRegister();
          if (mediator.getViewComponent() != null) mediator.setViewComponent(mediator.getViewComponent());
          mediator.bindingView(viewClazz);
          if (mediator.getInjector().length == 0) mediator.onInitialize();
          return mediator;
        }; //getMediator(mediatorName:String):IMediator;


        Proxy.prototype.getMediator = function (mediatorName) {
          return this._mediatorMap[mediatorName];
        };

        Proxy.prototype.hasMediator = function (mediatorName) {
          return this._mediatorMap[mediatorName] == null ? false : true;
        };

        Proxy.prototype.removeMediator = function (mediatorName) {
          var mediator = this.getMediator(mediatorName);
          if (mediator == null) return;
          delete this._mediatorMap[mediatorName];
          this.removeAllNotificationMediator(mediatorName);
          mediator.onRemove();
        };

        Proxy.prototype.refisterPipeNotificationMediator = function (notiName, mediator) {
          if (this._pipeViewMap[notiName] == null) this._notoViewMap[notiName] = [];

          this._pipeViewMap[notiName].push(mediator);
        };

        Proxy.prototype.removeOnePipeNotificationMediator = function (notiName, mediator) {
          var handler;
          var items = this._pipeViewMap[notiName];
          if (items == null) return; //var l:number = items.length;

          for (var key in items) {
            handler = items[key];

            if (handler == mediator) {
              delete items[key];
            }
          }
        };

        Proxy.prototype.removeAllPipeNotificationMediator = function (nodename) {
          var handler;
          var items;

          for (var key in this._pipeViewMap) {
            items = this._pipeViewMap[key];

            for (var k in items) {
              handler = items[k];

              if (handler != null && handler.getName() == nodename) {
                delete items[k];
              }
            }

            delete this._pipeViewMap[key];
          }
        };

        Proxy.prototype.registerNotificationMediator = function (notiName, mediator) {
          if (this._notoViewMap[notiName] == null) this._notoViewMap[notiName] = [];

          this._notoViewMap[notiName].push(mediator);
        };

        Proxy.prototype.removeOneNotificationMediator = function (notiName, mediator) {
          var handler;
          var items = this._notoViewMap[notiName];
          if (items == null) return;
          var l = items.length;
          if (l == 0) delete this._notoViewMap[notiName];else {
            for (var i = 0; i < l; i++) {
              handler = items[i];

              if (handler == mediator) {
                items.splice(i, 1);
              }
            }
          }
        };

        Proxy.prototype.removeAllNotificationMediator = function (nodename) {
          var handler;
          var items;

          for (var key in this._notoViewMap) {
            items = this._notoViewMap[key];

            for (var i = 0; i < items.length; i++) {
              handler = items[i];

              if (handler != null && handler.getName() == nodename) {
                items.splice(i, 1);
              }
            }

            delete this._notoViewMap[key];
          }
        };

        Proxy.prototype.registerPipeNotificationCommand = function (nofiticationName, commandClassRef) {
          if (this._pipeCommMap[nofiticationName] == null) this._pipeCommMap[nofiticationName] = [];

          this._pipeCommMap[nofiticationName].push(commandClassRef);
        };

        Proxy.prototype.removePipeNotificationCommand = function (commandClassRef) {
          var comm;
          var items;

          for (var key in this._pipeCommMap) {
            items = this._pipeCommMap[key];
            var l = items.length;
            if (l == 0) delete this._pipeCommMap[key];else {
              for (var i = 0; i < items.length; i++) {
                comm = items[i];
                if (comm == commandClassRef) items.splice(i, 1);
              }
            }
          }
        };

        Proxy.prototype.registerNotificationCommand = function (nofiticationName, commandClassRef) {
          if (this._notoCommMap[nofiticationName] == null) this._notoCommMap[nofiticationName] = [];

          this._notoCommMap[nofiticationName].push(commandClassRef);
        };

        Proxy.prototype.removeNotificationCommand = function (commandClassRef) {
          var comm;
          var items;

          for (var key in this._notoCommMap) {
            items = this._notoCommMap[key];
            var l = items.length;

            if (l == 0) {
              delete this._notoCommMap[key];
            } else {
              for (var i = 0; i < items.length; i++) {
                comm = items[i];
                if (comm == commandClassRef) items.splice(i, 1);
              }
            }
          }
        };

        Proxy.prototype.handlerPipelineNotification = function (notification) {
          this.sendViewPipeModle(notification);
          this.sendCommandPipe(notification);
        };

        Proxy.prototype.sentPipeNotification = function (notification) {
          //sendViewPipeModle(notification);
          //sendCommandPipe(notification);
          FacadeManager.sentPipelineNotification(notification.getName(), notification.getBody());
        };

        Proxy.prototype.sendViewPipeModle = function (notification) {
          var list = this._pipeViewMap[notification.getName()];

          if (list == null) return;
          var l = list.length;
          var handler;

          for (var i = 0; i < list.length; i++) {
            handler = list[i];
            handler.pipeHandler(notification);
          }
        };

        Proxy.prototype.sendCommandPipe = function (notification) {
          var list = this._pipeCommMap[notification.getName()];

          if (list == null) return;
          var l = list.length;
          var clazz;
          var command;

          for (var i = 0; i < list.length; i++) {
            clazz = list[i];
            command = new clazz();
            command.setProxy(this);
            command["pipeHandler"](notification);
          }
        };

        Proxy.prototype.sentNotification = function (notification) {
          this.sendViewModle(notification);
          this.sendCommand(notification);
        };

        Proxy.prototype.sendViewModle = function (notification) {
          var list = this._notoViewMap[notification.getName()];

          if (list == null) return;
          var l = list.length;
          var handler;

          for (var i = 0; i < list.length; i++) {
            handler = list[i];
            handler.handler(notification);
          }
        };

        Proxy.prototype.sendCommand = function (notification) {
          var list = this._notoCommMap[notification.getName()];

          if (list == null) return;
          var l = list.length;
          var clazz;
          var command;

          for (var i = 0; i < list.length; i++) {
            clazz = list[i];
            command = new clazz();
            command.setProxy(this);
            command["handler"](notification); //(new clazz() as INode).setProxy(this);
            //(new clazz() as IHandle).handler(notification);
          }
        };

        Proxy.prototype.injectorAll = function () {
          this.injectorMediator();
          this.injectorModle();
          this.inJectorSingle();
        };

        Proxy.prototype.inJectorSingle = function () {
          var single;

          for (var key in this._singleMap) {
            single = this._singleMap[key];
            if (single.isInitialize) continue;
            this.inJectorSingleHandler(single.single["injector"], single.single);
          }
        };

        Proxy.prototype.inJectorSingleHandler = function (injectors, single) {
          //trace("inJectorSingleHandler",injectors)
          if (!injectors) return;
          var item;
          var key;
          var l = injectors.length;

          for (var i = 0; i < l; i++) {
            key = injectors[i];
            item = this.getSingleton(key);

            if (item) {
              single[key] = item;
            } else {
              console.log("要注入的" + key + "对象不存在 请检查注入名是否正确 或者确保注入对象已经注册成功！！！");
            }

            single["isInitialize"] = true;
          }
        };

        Proxy.prototype.injectorMediator = function () {
          var mediator;

          for (var key in this._mediatorMap) {
            mediator = this._mediatorMap[key];
            if (mediator.getIsInitialize()) continue;
            this.injector(mediator.getInjector(), mediator);

            if (mediator.getInjector().length > 0) {
              mediator.onInitialize();
              mediator.setIsInitialize(true);
            }
          }
        };

        Proxy.prototype.injectorModle = function () {
          var model;

          for (var key in this._modelMap) {
            model = this._modelMap[key];
            if (model.getIsInitialize()) continue;
            this.injector(model.getInjector(), model); //if(model.getInjector().length > 0){

            model.onInitialize();
            model.setIsInitialize(true); //}
          }
        };

        Proxy.prototype.injector = function (injectors, node) {
          var item;
          var key;
          var l = injectors.length;

          for (var i = 0; i < l; i++) {
            key = injectors[i];
            item = this.getNode(key);

            if (item) {
              node[key] = item;
            } else {
              console.log("injector" + node.getName() + "要注入的" + key + "对象不存在 请检查注入名是否正确 或者确保注入对象已经注册成功！！！"); //trace("injector: ",node.getName(),key,node[key],item);
            }
          }
        };

        Proxy.prototype.getNode = function (name) {
          var node;
          node = this.getMediator(name);
          if (node) return node;
          node = this.getModel(name);
          if (node) return node;
          node = this.getSingleton(name);
          if (node) return node;
          return null;
        };

        Proxy.prototype.getMediatorMap = function () {
          return this._mediatorMap;
        };

        return Proxy;
      }();

      core.Proxy = Proxy;

      var SingleInfo =
      /** @class */
      function () {
        function SingleInfo(name, single) {
          this.isInitialize = false;
          this.single = null;
          this.single = single;
        }

        return SingleInfo;
      }();
    })(core = lightMVC.core || (lightMVC.core = {}));
  })(lightMVC = com.lightMVC || (com.lightMVC = {}));
})(com || (com = {}));

(function (com) {
  var lightMVC;

  (function (lightMVC) {
    var parrerns;

    (function (parrerns) {
      var Proxy = com.lightMVC.core.Proxy;
      /**
       * mvc总管 入口   可以继承此类并设计为单列 方便调用
       * @author light-k
       *
       * TODO: 可以考虑增加 asSingleton 数据层直接发送时间 摆脱 model束缚
       *
       */

      var Facade =
      /** @class */
      function () {
        function Facade() {
          this._proxy = new Proxy();
        }

        Facade.prototype.getModel = function (modelName) {
          return this._proxy.getModel(modelName);
        };

        ;

        Facade.prototype.getSingleton = function (name) {
          return this._proxy.getSingleton(name);
        };

        Facade.prototype.registerModel = function (mmodel) {
          return this._proxy.registerModel(mmodel);
        };

        Facade.prototype.registerCommand = function (noteName, commandClassRef) {
          this._proxy.registerCommand(noteName, commandClassRef);
        };

        Facade.prototype.asSingleton = function (name, clazz) {
          this._proxy.asSingleton(name, clazz);
        };

        Facade.prototype.removeSingleton = function (name) {
          return this.removeSingleton(name);
        };

        Facade.prototype.registerMediator = function (mediator, viewClazz) {
          return this._proxy.registerMediator(mediator, viewClazz);
        };

        Facade.prototype.removeMediator = function (mediatorName) {
          this._proxy.removeMediator(mediatorName);
        };

        Facade.prototype.removeModel = function (modelName) {
          this._proxy.removeModel(modelName);
        };

        Facade.prototype.removeCommand = function (commandClassRef) {
          this._proxy.removeCommand(commandClassRef);
        };

        Facade.prototype.getProxy = function () {
          return this._proxy;
        };
        /**
         * 配置mvc流程  注册command mediator model 都可以在 IConfigure 配置类里进行
         * @param config	配置类
         * @return 			返回入口类
         *
         */


        Facade.prototype.configure = function (config) {
          config.setProxy(this._proxy);

          this._proxy.injectorAll();

          return this;
        };

        Facade.prototype.injectUI2Meditor = function (view, meditorName) {
          var mediator = this._proxy.getMediator(meditorName);

          if (mediator) this._proxy.getMediator(meditorName).setViewComponent(view);else console.log(view["name"] + "没有注册meditor");
          return this;
        };

        Facade.prototype.injectUI = function (view) {
          var mediatorMap = this._proxy.getMediatorMap();

          var mediator;

          for (var key in mediatorMap) {
            mediator = mediatorMap[key];

            if (mediator.getViewClazz() && view instanceof mediator.getViewClazz()) {
              mediator.setViewComponent(view);
            }
          }

          return this;
        };
        /**
         * 提供给子类使用 发送消息
         * @param notiName	消息名称
         * @param body		消息携带的参数
         *
         */


        Facade.prototype.sentNotification = function (notiName, body) {
          if (body === void 0) {
            body = null;
          }

          this._proxy.sentNotification(new parrerns.Notification(notiName, body));
        };
        /**
         * 给所有的facade发送管道消息
         * @param notiName
         * @param body
         *
         */


        Facade.prototype.sentPipelineNotification = function (notiName, body) {
          if (body === void 0) {
            body = null;
          }

          this._proxy.sentPipeNotification(new parrerns.PipelineNotification(notiName, body));
        };

        Facade.prototype.handlerPipelineNotification = function (notification) {
          this._proxy.handlerPipelineNotification(notification);
        };

        Facade.prototype.destroy = function () {
          this._proxy.destroy();
        };

        return Facade;
      }();

      parrerns.Facade = Facade;
    })(parrerns = lightMVC.parrerns || (lightMVC.parrerns = {}));
  })(lightMVC = com.lightMVC || (com.lightMVC = {}));
})(com || (com = {}));

window.com = com;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/LWindow.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8d978pBYaBLg4Hp6afE0ze2', 'LWindow');
// Script/lightUI/components/LWindow.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var LComponent_1 = require("./LComponent");
var LEvent_1 = require("../events/LEvent");
var AudioManage_1 = require("../../../../common/src/AudioManage");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LWindow = /** @class */ (function (_super) {
    __extends(LWindow, _super);
    function LWindow() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.title = "";
        _this.msg = "";
        _this.closeParent = false;
        _this.title_txt = null;
        _this.msg_txt = null;
        _this.close_btn = null;
        return _this;
    }
    //@override
    LWindow.prototype.onUpdateView = function () {
        if (this.title_txt)
            this.title_txt.string = this.title;
        if (this.msg_txt)
            this.msg_txt.string = this.msg;
    };
    //@override
    LWindow.prototype.onLoad = function () {
        var _this = this;
        // console.log("window close"+this.close_btn.node);
        if (this.close_btn)
            this.close_btn.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                // console.log("window close");
                _this.close(e.target.name);
            }, this);
        this.onUpdateView();
        //遮挡下层事件
        this.node.on(cc.Node.EventType.TOUCH_START, this.none);
    };
    LWindow.prototype.close = function (targetName) {
        if (targetName === void 0) { targetName = ""; }
        console.log("windows close", targetName);
        this.node.dispatchEvent(new LEvent_1.default(LEvent_1.default.CLOSE, targetName));
        this.node.off(cc.Node.EventType.TOUCH_START, this.none);
        if (this.closeParent == true) {
            this.node.parent.parent && this.node.parent.parent.removeChild(this.node, false);
        }
        else {
            this.node.parent && this.node.parent.removeChild(this.node, false);
        }
        AudioManage_1.AudioManage.playEffect('audio/click_close');
    };
    LWindow.prototype.none = function () { };
    LWindow.prototype.getMsg = function () { return this.msg; };
    LWindow.prototype.setMsg = function (value) {
        this.msg = value;
        if (this.msg_txt)
            this.msg_txt.string = this.msg;
    };
    LWindow.prototype.getTitle = function () { return this.title; };
    LWindow.prototype.setTitle = function (value) {
        this.title = value;
        if (this.title_txt)
            this.title_txt.string = this.title;
    };
    __decorate([
        property()
    ], LWindow.prototype, "title", void 0);
    __decorate([
        property()
    ], LWindow.prototype, "msg", void 0);
    __decorate([
        property()
    ], LWindow.prototype, "closeParent", void 0);
    __decorate([
        property(cc.Label)
    ], LWindow.prototype, "title_txt", void 0);
    __decorate([
        property(cc.Label)
    ], LWindow.prototype, "msg_txt", void 0);
    __decorate([
        property(cc.Button)
    ], LWindow.prototype, "close_btn", void 0);
    LWindow = __decorate([
        ccclass
    ], LWindow);
    return LWindow;
}(LComponent_1.default));
exports.default = LWindow;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxjb21wb25lbnRzXFxMV2luZG93LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUFxQztBQUNyQywyQ0FBc0M7QUFDdEMsa0VBQWlFO0FBRTNELElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBSTVDO0lBQXFDLDJCQUFVO0lBQS9DO1FBQUEscUVBK0RDO1FBN0RHLFdBQUssR0FBVSxFQUFFLENBQUM7UUFHbEIsU0FBRyxHQUFVLEVBQUUsQ0FBQztRQUdoQixpQkFBVyxHQUFXLEtBQUssQ0FBQztRQUdyQixlQUFTLEdBQVksSUFBSSxDQUFDO1FBRzFCLGFBQU8sR0FBWSxJQUFJLENBQUM7UUFHeEIsZUFBUyxHQUFhLElBQUksQ0FBQzs7SUE4Q3RDLENBQUM7SUE1Q0csV0FBVztJQUNKLDhCQUFZLEdBQW5CO1FBQ0ksSUFBRyxJQUFJLENBQUMsU0FBUztZQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdEQsSUFBRyxJQUFJLENBQUMsT0FBTztZQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUM7SUFDcEQsQ0FBQztJQUVELFdBQVc7SUFDWCx3QkFBTSxHQUFOO1FBQUEsaUJBVUM7UUFURyxtREFBbUQ7UUFDbkQsSUFBRyxJQUFJLENBQUMsU0FBUztZQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxXQUFXLEVBQUMsVUFBQyxDQUFVO2dCQUMvRSwrQkFBK0I7Z0JBQy9CLEtBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM5QixDQUFDLEVBQUMsSUFBSSxDQUFDLENBQUM7UUFDUixJQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFFcEIsUUFBUTtRQUNSLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDM0QsQ0FBQztJQUVNLHVCQUFLLEdBQVosVUFBYSxVQUFzQjtRQUF0QiwyQkFBQSxFQUFBLGVBQXNCO1FBQy9CLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksZ0JBQU0sQ0FBQyxnQkFBTSxDQUFDLEtBQUssRUFBQyxVQUFVLENBQUMsQ0FBQyxDQUFDO1FBQzdELElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDeEQsSUFBRyxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksRUFBRTtZQUN6QixJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFDLEtBQUssQ0FBQyxDQUFDO1NBQ25GO2FBQU07WUFDSCxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksRUFBQyxLQUFLLENBQUMsQ0FBQztTQUNyRTtRQUNELHlCQUFXLENBQUMsVUFBVSxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVPLHNCQUFJLEdBQVosY0FBb0IsQ0FBQztJQUVkLHdCQUFNLEdBQWIsY0FBd0IsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUUsQ0FBQztJQUNwQyx3QkFBTSxHQUFiLFVBQWMsS0FBWTtRQUN0QixJQUFJLENBQUMsR0FBRyxHQUFHLEtBQUssQ0FBQztRQUNqQixJQUFHLElBQUksQ0FBQyxPQUFPO1lBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQztJQUNwRCxDQUFDO0lBRU0sMEJBQVEsR0FBZixjQUEwQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBRSxDQUFDO0lBQ3hDLDBCQUFRLEdBQWYsVUFBZ0IsS0FBWTtRQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFHLElBQUksQ0FBQyxTQUFTO1lBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztJQUMxRCxDQUFDO0lBNUREO1FBREMsUUFBUSxFQUFFOzBDQUNPO0lBR2xCO1FBREMsUUFBUSxFQUFFO3dDQUNLO0lBR2hCO1FBREMsUUFBUSxFQUFFO2dEQUNpQjtJQUc1QjtRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDOzhDQUNjO0lBR2pDO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7NENBQ1k7SUFHL0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQzs4Q0FDYztJQWpCakIsT0FBTztRQUYzQixPQUFPO09BRWEsT0FBTyxDQStEM0I7SUFBRCxjQUFDO0NBL0RELEFBK0RDLENBL0RvQyxvQkFBVSxHQStEOUM7a0JBL0RvQixPQUFPIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExDb21wb25lbnQgZnJvbSBcIi4vTENvbXBvbmVudFwiXHJcbmltcG9ydCBMRXZuZXQgZnJvbSBcIi4uL2V2ZW50cy9MRXZlbnRcIjtcclxuaW1wb3J0IHsgQXVkaW9NYW5hZ2UgfSBmcm9tIFwiLi4vLi4vLi4vLi4vY29tbW9uL3NyYy9BdWRpb01hbmFnZVwiO1xyXG5cclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMV2luZG93IGV4dGVuZHMgTENvbXBvbmVudHtcclxuICAgIEBwcm9wZXJ0eSgpXHJcbiAgICB0aXRsZTpzdHJpbmcgPSBcIlwiO1xyXG5cclxuICAgIEBwcm9wZXJ0eSgpXHJcbiAgICBtc2c6c3RyaW5nID0gXCJcIjtcclxuXHJcbiAgICBAcHJvcGVydHkoKVxyXG4gICAgY2xvc2VQYXJlbnQ6Qm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcclxuICAgIHB1YmxpYyB0aXRsZV90eHQ6Y2MuTGFiZWwgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5MYWJlbClcclxuICAgIHB1YmxpYyBtc2dfdHh0OmNjLkxhYmVsID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuQnV0dG9uKVxyXG4gICAgcHVibGljIGNsb3NlX2J0bjpjYy5CdXR0b24gPSBudWxsO1xyXG5cclxuICAgIC8vQG92ZXJyaWRlXHJcbiAgICBwdWJsaWMgb25VcGRhdGVWaWV3KCk6dm9pZHtcclxuICAgICAgICBpZih0aGlzLnRpdGxlX3R4dCkgdGhpcy50aXRsZV90eHQuc3RyaW5nID0gdGhpcy50aXRsZTtcclxuICAgICAgICBpZih0aGlzLm1zZ190eHQpIHRoaXMubXNnX3R4dC5zdHJpbmcgPSB0aGlzLm1zZztcclxuICAgIH1cclxuXHJcbiAgICAvL0BvdmVycmlkZVxyXG4gICAgb25Mb2FkKCk6IHZvaWQge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwid2luZG93IGNsb3NlXCIrdGhpcy5jbG9zZV9idG4ubm9kZSk7XHJcbiAgICAgICAgaWYodGhpcy5jbG9zZV9idG4pIHRoaXMuY2xvc2VfYnRuLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfU1RBUlQsKGU6Y2MuRXZlbnQpPT57XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwid2luZG93IGNsb3NlXCIpO1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKGUudGFyZ2V0Lm5hbWUpO1xyXG4gICAgICAgIH0sdGhpcyk7XHJcbiAgICAgICAgdGhpcy5vblVwZGF0ZVZpZXcoKTtcclxuXHJcbiAgICAgICAgLy/pga7mjKHkuIvlsYLkuovku7ZcclxuICAgICAgICB0aGlzLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfU1RBUlQsIHRoaXMubm9uZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGNsb3NlKHRhcmdldE5hbWU6c3RyaW5nID0gXCJcIil7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJ3aW5kb3dzIGNsb3NlXCIsdGFyZ2V0TmFtZSk7XHJcbiAgICAgICAgdGhpcy5ub2RlLmRpc3BhdGNoRXZlbnQobmV3IExFdm5ldChMRXZuZXQuQ0xPU0UsdGFyZ2V0TmFtZSkpO1xyXG4gICAgICAgIHRoaXMubm9kZS5vZmYoY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfU1RBUlQsIHRoaXMubm9uZSk7XHJcbiAgICAgICAgaWYodGhpcy5jbG9zZVBhcmVudCA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIHRoaXMubm9kZS5wYXJlbnQucGFyZW50ICYmIHRoaXMubm9kZS5wYXJlbnQucGFyZW50LnJlbW92ZUNoaWxkKHRoaXMubm9kZSxmYWxzZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5ub2RlLnBhcmVudCAmJiB0aGlzLm5vZGUucGFyZW50LnJlbW92ZUNoaWxkKHRoaXMubm9kZSxmYWxzZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEF1ZGlvTWFuYWdlLnBsYXlFZmZlY3QoJ2F1ZGlvL2NsaWNrX2Nsb3NlJyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBub25lKCk6dm9pZHt9XHJcblxyXG4gICAgcHVibGljIGdldE1zZygpOnN0cmluZ3sgcmV0dXJuIHRoaXMubXNnOyAgfVxyXG4gICAgcHVibGljIHNldE1zZyh2YWx1ZTpzdHJpbmcpe1xyXG4gICAgICAgIHRoaXMubXNnID0gdmFsdWU7XHJcbiAgICAgICAgaWYodGhpcy5tc2dfdHh0KSB0aGlzLm1zZ190eHQuc3RyaW5nID0gdGhpcy5tc2c7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldFRpdGxlKCk6c3RyaW5neyByZXR1cm4gdGhpcy50aXRsZTsgIH1cclxuICAgIHB1YmxpYyBzZXRUaXRsZSh2YWx1ZTpzdHJpbmcpe1xyXG4gICAgICAgIHRoaXMudGl0bGUgPSB2YWx1ZTtcclxuICAgICAgICBpZih0aGlzLnRpdGxlX3R4dCkgdGhpcy50aXRsZV90eHQuc3RyaW5nID0gdGhpcy50aXRsZTtcclxuICAgIH1cclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/llist/ItemRender.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ca0f9k0oBVDbpQC+OMNTF3m', 'ItemRender');
// Script/lightUI/components/llist/ItemRender.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var ItemRender = /** @class */ (function (_super) {
    __extends(ItemRender, _super);
    function ItemRender() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**数据 */
        _this.data = null;
        /**索引 0表示第一项*/
        _this.itemIndex = 0;
        return _this;
    }
    /**数据改变时调用 */
    ItemRender.prototype.dataChanged = function () {
        // console.log("ItemRender",this.data);
        if (!this.label)
            return;
        if (this.data instanceof Object)
            this.label.string = this.data.label;
        else
            this.label.string = this.data;
    };
    __decorate([
        property({ type: cc.Label, tooltip: "显示文本" })
    ], ItemRender.prototype, "label", void 0);
    ItemRender = __decorate([
        ccclass
    ], ItemRender);
    return ItemRender;
}(cc.Component));
exports.default = ItemRender;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxjb21wb25lbnRzXFxsbGlzdFxcSXRlbVJlbmRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFTSxJQUFBLEtBQXdCLEVBQUUsQ0FBQyxVQUFVLEVBQW5DLE9BQU8sYUFBQSxFQUFFLFFBQVEsY0FBa0IsQ0FBQztBQUc1QztJQUF3Qyw4QkFBWTtJQUFwRDtRQUFBLHFFQWlCQztRQVpHLFFBQVE7UUFDRCxVQUFJLEdBQVEsSUFBSSxDQUFDO1FBQ3hCLGNBQWM7UUFDUCxlQUFTLEdBQVcsQ0FBQyxDQUFDOztJQVNqQyxDQUFDO0lBUEcsYUFBYTtJQUNOLGdDQUFXLEdBQWxCO1FBQ0ksdUNBQXVDO1FBQ3ZDLElBQUcsQ0FBQyxJQUFJLENBQUMsS0FBSztZQUFFLE9BQU87UUFDdkIsSUFBSSxJQUFJLENBQUMsSUFBSSxZQUFZLE1BQU07WUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQzs7WUFDaEUsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztJQUN2QyxDQUFDO0lBYkQ7UUFEQyxRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLENBQUM7NkNBQ3ZCO0lBSE4sVUFBVTtRQUQ5QixPQUFPO09BQ2EsVUFBVSxDQWlCOUI7SUFBRCxpQkFBQztDQWpCRCxBQWlCQyxDQWpCdUMsRUFBRSxDQUFDLFNBQVMsR0FpQm5EO2tCQWpCb0IsVUFBVSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMaXN0LCB7IExpc3RUeXBlIH0gZnJvbSBcIi4vTExpc3RcIjtcclxuXHJcbmNvbnN0IHsgY2NjbGFzcywgcHJvcGVydHkgfSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJdGVtUmVuZGVyIGV4dGVuZHMgY2MuQ29tcG9uZW50IHtcclxuXHJcbiAgICBAcHJvcGVydHkoeyB0eXBlOiBjYy5MYWJlbCwgdG9vbHRpcDogXCLmmL7npLrmlofmnKxcIiB9KVxyXG4gICAgcHVibGljIGxhYmVsOiBjYy5MYWJlbDtcclxuXHJcbiAgICAvKirmlbDmja4gKi9cclxuICAgIHB1YmxpYyBkYXRhOiBhbnkgPSBudWxsO1xyXG4gICAgLyoq57Si5byVIDDooajnpLrnrKzkuIDpobkqL1xyXG4gICAgcHVibGljIGl0ZW1JbmRleDogbnVtYmVyID0gMDtcclxuXHJcbiAgICAvKirmlbDmja7mlLnlj5jml7bosIPnlKggKi9cclxuICAgIHB1YmxpYyBkYXRhQ2hhbmdlZCgpIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIkl0ZW1SZW5kZXJcIix0aGlzLmRhdGEpO1xyXG4gICAgICAgIGlmKCF0aGlzLmxhYmVsKSByZXR1cm47XHJcbiAgICAgICAgaWYgKHRoaXMuZGF0YSBpbnN0YW5jZW9mIE9iamVjdCkgdGhpcy5sYWJlbC5zdHJpbmcgPSB0aGlzLmRhdGEubGFiZWw7XHJcbiAgICAgICAgZWxzZSB0aGlzLmxhYmVsLnN0cmluZyA9IHRoaXMuZGF0YTtcclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/MountDataAbs.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1b4e2CQ1YhBzqMvRjiYq6VK', 'MountDataAbs');
// Script/lightUI/components/MountDataAbs.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.MountParam = void 0;
var LEvent_1 = require("../events/LEvent");
var MountDataAbs = /** @class */ (function (_super) {
    __extends(MountDataAbs, _super);
    function MountDataAbs() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._active = false;
        return _this;
    }
    MountDataAbs.prototype.showMe = function () {
        this._active = true;
        this.dispatchEvent(new LEvent_1.default(MountDataAbs.SHOWME));
    };
    MountDataAbs.prototype.hideMe = function () {
        this._active = false;
        this.dispatchEvent(new LEvent_1.default(MountDataAbs.HIDEME));
    };
    MountDataAbs.prototype.update = function (data) {
        this.dispatchEvent(new LEvent_1.default(MountDataAbs.UPDATE, data));
    };
    MountDataAbs.SHOWME = "SHOWME";
    MountDataAbs.HIDEME = "HIDEME";
    MountDataAbs.UPDATE = "UPDATE";
    MountDataAbs.TOKENERROR = "TOKENERROR";
    return MountDataAbs;
}(cc.EventTarget));
exports.default = MountDataAbs;
var MountParam = /** @class */ (function () {
    function MountParam(type, data) {
        this.type = type;
        this.data = data;
    }
    return MountParam;
}());
exports.MountParam = MountParam;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxjb21wb25lbnRzXFxNb3VudERhdGFBYnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUFzQztBQUV0QztJQUEwQyxnQ0FBYztJQUF4RDtRQUFBLHFFQXdCQztRQWhCVyxhQUFPLEdBQVcsS0FBSyxDQUFDOztJQWdCcEMsQ0FBQztJQWJVLDZCQUFNLEdBQWI7UUFDSSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksZ0JBQU0sQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRU0sNkJBQU0sR0FBYjtRQUNJLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxnQkFBTSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFTSw2QkFBTSxHQUFiLFVBQWMsSUFBZ0I7UUFDMUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLGdCQUFNLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7SUF0QnNCLG1CQUFNLEdBQVUsUUFBUSxDQUFDO0lBQ3pCLG1CQUFNLEdBQVUsUUFBUSxDQUFDO0lBQ3pCLG1CQUFNLEdBQVUsUUFBUSxDQUFDO0lBRXpCLHVCQUFVLEdBQVUsWUFBWSxDQUFDO0lBbUI1RCxtQkFBQztDQXhCRCxBQXdCQyxDQXhCeUMsRUFBRSxDQUFDLFdBQVcsR0F3QnZEO2tCQXhCb0IsWUFBWTtBQTBCakM7SUFJSSxvQkFBWSxJQUFXLEVBQUMsSUFBUTtRQUM1QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztJQUNyQixDQUFDO0lBQ0wsaUJBQUM7QUFBRCxDQVJBLEFBUUMsSUFBQTtBQVJZLGdDQUFVIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExFdmVudCBmcm9tIFwiLi4vZXZlbnRzL0xFdmVudFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTW91bnREYXRhQWJzIGV4dGVuZHMgY2MuRXZlbnRUYXJnZXR7XHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IFNIT1dNRTpzdHJpbmcgPSBcIlNIT1dNRVwiO1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBISURFTUU6c3RyaW5nID0gXCJISURFTUVcIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgVVBEQVRFOnN0cmluZyA9IFwiVVBEQVRFXCI7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBUT0tFTkVSUk9SOnN0cmluZyA9IFwiVE9LRU5FUlJPUlwiO1xyXG5cclxuXHJcbiAgICBwcml2YXRlIF9hY3RpdmU6Ym9vbGVhbiA9IGZhbHNlO1xyXG5cclxuXHJcbiAgICBwdWJsaWMgc2hvd01lKCl7XHJcbiAgICAgICAgdGhpcy5fYWN0aXZlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLmRpc3BhdGNoRXZlbnQobmV3IExFdmVudChNb3VudERhdGFBYnMuU0hPV01FKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGhpZGVNZSgpe1xyXG4gICAgICAgIHRoaXMuX2FjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgTEV2ZW50KE1vdW50RGF0YUFicy5ISURFTUUpKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdXBkYXRlKGRhdGE/Ok1vdW50UGFyYW0pe1xyXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgTEV2ZW50KE1vdW50RGF0YUFicy5VUERBVEUsZGF0YSkpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgTW91bnRQYXJhbXtcclxuICAgIHB1YmxpYyB0eXBlOnN0cmluZztcclxuICAgIHB1YmxpYyBkYXRhOmFueTtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih0eXBlOnN0cmluZyxkYXRhOmFueSl7XHJcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xyXG4gICAgfVxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/LButton.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'aca6fxOQjlGnLTatyJK/7zu', 'LButton');
// Script/lightUI/components/LButton.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../events/LEvent");
var LComponent_1 = require("./LComponent");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var LButton = /** @class */ (function (_super) {
    __extends(LButton, _super);
    function LButton() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.toggle = false;
        _this.normal = null;
        _this.pressed = null;
        _this.hover = null;
        _this.disabled = null;
        _this.selectedSprite = null;
        _this.isSelected = false;
        _this.labelTex = null;
        _this.label = null;
        /**
        * @private
        */
        _this._stateChanged = false;
        /**
         * @private
         * 按钮的状态值。
         */
        _this._state = 0;
        _this._sources = [];
        return _this;
    }
    LButton_1 = LButton;
    LButton.prototype.onLoad = function () {
        this._sources = [this.normal, this.hover, this.pressed, this.disabled, this.selectedSprite];
        this._skin = this.node.getChildByName("Background").getComponent(cc.Sprite);
        this._skin.spriteFrame = this.normal;
        this.selected = this.isSelected;
        // console.log("LButton onLoad");
        // this.node.on(cc.Node.EventType.MOUSE_MOVE,this.onMouse,this,false);
        this.node.on(cc.Node.EventType.TOUCH_START, this.onMouse, this);
        // this.node.on(cc.Node.EventType.MOUSE_DOWN, this.onMouse, this, false);
        // this.node.on(cc.Node.EventType.MOUSE_UP, this.onMouse, this, false);
        // cc.Node.EventType.mou
        // this.node.on(cc.Node.EventType.TOUCH_START,this.onMouse,this,false);
    };
    LButton.prototype.onMouse = function (e) {
        // console.log("onMouseonMouse", e.type, this.toggle, this._selected);
        // this._skin.spriteFrame = this.normal;
        if (this.toggle === false && this._selected)
            return;
        if (e.type === cc.Node.EventType.TOUCH_START) {
            this.toggle && (this.selected = !this._selected);
            this._clickHandler && this._clickHandler();
            return;
        }
        !this._selected && (this.state = LButton_1.stateMap[e.type]);
    };
    Object.defineProperty(LButton.prototype, "selected", {
        /**
            * 表示按钮的选中状态。
            * <p>如果值为true，表示该对象处于选中状态。否则该对象处于未选中状态。</p>
            * @implements
            */
        get: function () {
            return this._selected;
        },
        set: function (value) {
            // console.log("set selected",value);
            if (this._selected != value) {
                this._selected = value;
                this.state = this._selected ? 4 : 0;
                this.node.dispatchEvent(new LEvent_1.default(LEvent_1.default.CHANGED));
            }
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LButton.prototype, "state", {
        /**
        * 对象的状态值。
        * @see #stateMap
        */
        get: function () {
            return this._state;
        },
        set: function (value) {
            if (this._state != value) {
                this._state = value;
                this._setStateChanged();
            }
        },
        enumerable: false,
        configurable: true
    });
    /**
     * @private
     * 改变对象的状态。
     */
    LButton.prototype.changeState = function () {
        // console.log("changeState");
        this._stateChanged = false;
        var index = this._state;
        if (index > -1)
            this._skin.spriteFrame = this._sources[index];
        // console.log("changeState", index, this._sources);
        // this._sources && (this._bitmap.source = this._sources[index]);
        // if (this.label) {
        //     this._text.color = this._labelColors[index];
        //     if (this._strokeColors) this._text.strokeColor = this._strokeColors[index];
        // }
    };
    LButton.prototype.setLabel = function (value) {
        this.labelTex.string = value;
        this.label = value;
    };
    LButton.prototype.getLabel = function () {
        return this.labelTex.string;
    };
    /**@private */
    LButton.prototype._setStateChanged = function () {
        if (!this._stateChanged) {
            this._stateChanged = true;
            // this.callLater(this.changeState);
            this.scheduleOnce(this.changeState, 0);
        }
    };
    Object.defineProperty(LButton.prototype, "clickHandler", {
        get: function () {
            return this.clickHandler;
        },
        set: function (value) {
            this._clickHandler = value;
        },
        enumerable: false,
        configurable: true
    });
    var LButton_1;
    /**
     * 按钮状态集。
     */
    LButton.stateMap = { "mouseup": 0, "mousemove": 1, "mousedown": 2, "mouseout": 0, "mouseleave": 0 };
    __decorate([
        property({ type: cc.Boolean, tooltip: "是否是切换模式" })
    ], LButton.prototype, "toggle", void 0);
    __decorate([
        property({ type: cc.SpriteFrame, tooltip: "平常态" })
    ], LButton.prototype, "normal", void 0);
    __decorate([
        property({ type: cc.SpriteFrame, tooltip: "按下" })
    ], LButton.prototype, "pressed", void 0);
    __decorate([
        property({ type: cc.SpriteFrame, tooltip: "悬浮" })
    ], LButton.prototype, "hover", void 0);
    __decorate([
        property({ type: cc.SpriteFrame, tooltip: "禁用" })
    ], LButton.prototype, "disabled", void 0);
    __decorate([
        property({ type: cc.SpriteFrame, tooltip: "选择" })
    ], LButton.prototype, "selectedSprite", void 0);
    __decorate([
        property({ type: cc.Boolean, tooltip: "选择" })
    ], LButton.prototype, "isSelected", void 0);
    __decorate([
        property({ type: cc.Label, tooltip: "选择" })
    ], LButton.prototype, "labelTex", void 0);
    __decorate([
        property({ type: cc.String, tooltip: "选择" })
    ], LButton.prototype, "label", void 0);
    LButton = LButton_1 = __decorate([
        ccclass
    ], LButton);
    return LButton;
}(LComponent_1.default));
exports.default = LButton;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/logging/Logger.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '014ebJrdv5Nh6NalBwtcO8k', 'Logger');
// Script/lightUI/logging/Logger.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../events/LEvent");
var LogLevel_1 = require("./LogLevel");
// import HttpRequest = Laya.HttpRequest;
// import Browser = Laya.Browser;
var Logger = /** @class */ (function (_super) {
    __extends(Logger, _super);
    function Logger(param1, isPersistence, address, path) {
        if (param1 === void 0) { param1 = "LightUI"; }
        if (isPersistence === void 0) { isPersistence = false; }
        if (address === void 0) { address = ""; }
        if (path === void 0) { path = ""; }
        var _this = _super.call(this) || this;
        _this._enableConsoleTrace = true;
        _this._enableEventDispatching = false;
        _this._loggingLevel = 200;
        _this._date = new Date();
        //是否开启持久化  存入服务端
        _this._isPersistence = false;
        // private _hr:HttpRequest;
        _this._isDebug = false;
        _this._loggingPrefix = param1;
        _this._isPersistence = isPersistence;
        _this._address = address;
        _this._path = path;
        return _this;
        // this._hr = new HttpRequest();
        // this._hr.once(Laya.Event.PROGRESS, this, this.onHttpRequestProgress);
        // this._hr.once(Laya.Event.COMPLETE, this, this.onHttpRequestComplete);
        // this._hr.once(Laya.Event.ERROR, this, this.onHttpRequestError);
    } // end function
    Object.defineProperty(Logger.prototype, "enableConsoleTrace", {
        get: function () {
            return this._enableConsoleTrace;
        } // end function
        ,
        set: function (param1) {
            this._enableConsoleTrace = param1;
            return;
        } // end function
        ,
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Logger.prototype, "enableEventDispatching", {
        get: function () {
            return this._enableEventDispatching;
        } // end function
        ,
        set: function (param1) {
            this._enableEventDispatching = param1;
            return;
        } // end function
        ,
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Logger.prototype, "loggingLevel", {
        get: function () {
            return this._loggingLevel;
        } // end function
        ,
        set: function (param1) {
            this._loggingLevel = param1;
            return;
        } // end function
        ,
        enumerable: false,
        configurable: true
    });
    Logger.prototype.debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.log(LogLevel_1.default.DEBUG, args.join(" "));
        return;
    }; // end function
    Logger.prototype.info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.log(LogLevel_1.default.INFO, args.join(" "));
        return;
    }; // end function
    Logger.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.log(LogLevel_1.default.WARN, args.join(" "));
        return;
    }; // end function
    Logger.prototype.error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.log(LogLevel_1.default.ERROR, args.join(" "));
        return;
    }; // end function
    Logger.prototype.log = function (param1, param2) {
        if (this._isDebug == false)
            return;
        var _loc_4 = null;
        //var _loc_5:LoggerEvent = null;
        if (param1 < this._loggingLevel) {
            return;
        }
        var _loc_3 = LogLevel_1.default.toString(param1);
        if (this._enableConsoleTrace) {
            console.log("[" + this._loggingPrefix + "|" + _loc_3 + "|" + this.getNewDate() + "]", param2);
            if (this._isPersistence) {
                //{"path" : "123/456.log", "content" : "test"}
                // var data:Object = {};
                // data["path"] = "123/456.log";
                // data["content"] = "[" + this._loggingPrefix + "|" + _loc_3 + "|" + this.getNewDate() + "]" + param2;
                // this._hr.send(this._address,JSON.stringify(data),"post","text");
            }
        }
        if (this._enableEventDispatching) {
            this.dispatchEvent(new LEvent_1.default(_loc_3, param2));
        }
        return;
    }; // end function
    Logger.prototype.onHttpRequestError = function (e) {
        if (e === void 0) { e = null; }
        this.error(e);
    };
    Logger.prototype.onHttpRequestProgress = function (e) {
        if (e === void 0) { e = null; }
        this.error(e);
    };
    Logger.prototype.onHttpRequestComplete = function (e) {
        if (e === void 0) { e = null; }
        //trace("收到数据：" + _hr.data);
    };
    Logger.prototype.getNewDate = function () {
        this._date = new Date();
        return this.dateFormart(this._date);
    };
    Logger.prototype.dateFormart = function (date) {
        return date.getHours() + ":" + date.getMinutes() + ":" + date.getSeconds() + ":" + date.getMilliseconds();
    };
    Object.defineProperty(Logger.prototype, "isPersistence", {
        get: function () {
            return this._isPersistence;
        },
        set: function (value) {
            this._isPersistence = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Logger.prototype, "isDebug", {
        get: function () {
            return this._isDebug;
        },
        set: function (value) {
            this._isDebug = value;
        },
        enumerable: false,
        configurable: true
    });
    return Logger;
}(cc.EventTarget));
exports.default = Logger;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/managers/PopupManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'b3845xrMydKz5xCLLR7o9Gs', 'PopupManager');
// Script/lightUI/managers/PopupManager.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PopupInfo = void 0;
var Dictionary_1 = require("../utils/Dictionary");
var LightUI_1 = require("../LightUI");
var Draw_1 = require("../utils/Draw");
var LEvent_1 = require("../events/LEvent");
var PopupManager = /** @class */ (function () {
    function PopupManager() {
        this._infos = new Dictionary_1.default();
    }
    /**
     *
     * @param window
     * @param parent
     * @param closeClickOut 是否点击外部关闭面板
     * @param modal         是否要遮罩
     * @param modalColor    遮罩颜色
     * @param modalAlpha    遮罩透明度  0-255
     * @returns
     */
    PopupManager.prototype.addPopUp = function (window, parent, closeClickOut, modal, modalColor, modalAlpha) {
        if (parent === void 0) { parent = null; }
        if (closeClickOut === void 0) { closeClickOut = false; }
        if (modal === void 0) { modal = false; }
        if (modalColor === void 0) { modalColor = null; }
        if (modalAlpha === void 0) { modalAlpha = 0; }
        if (closeClickOut == true)
            modal = true;
        modalColor = modalColor ? modalColor : "#000000";
        if (!parent)
            parent = LightUI_1.default.layerManager.popupLayer;
        if (this._infos.get(window)) {
            console.log("弹出面板已经存在");
            return;
        }
        var info = new PopupInfo(window, parent, closeClickOut, modal, modalColor, modalAlpha);
        this._infos.set(window, info);
        // bg_mask
        if (modal) {
            var sp = Draw_1.default.drawRect(new cc.Rect(0, 0, LightUI_1.default.root.width, LightUI_1.default.root.height), modalColor);
            sp.opacity = modalAlpha;
            console.log("弹出面板", sp.opacity);
            parent.addChild(sp);
            parent.addChild(window);
            info.modal_bg = sp;
        }
        else {
            var mask = window.getChildByName("bg_mask");
            if (mask) {
                info.modal_bg = mask;
                mask.addComponent(cc.BlockInputEvents);
            }
            parent.addChild(window);
            console.log("弹出面板");
        }
        window.dispatchEvent(new LEvent_1.default(LEvent_1.default.SHOW));
        if (closeClickOut) {
            // console.log("关闭面板",LightUI.root.width,LightUI.root.height);
            // let mask:cc.Node = window.getChildByName("bg_mask");
            // if(mask) {
            // 	mask.on(cc.Node.EventType.TOUCH_START,info.onCloseClickOut,info);
            // }
            if (info.modal_bg)
                info.modal_bg.on(cc.Node.EventType.TOUCH_START, info.onCloseClickOut, info);
        }
    };
    PopupManager.prototype.autoClose = function (window, delay) {
        var _this = this;
        if (delay != 0) {
            var info_1 = this._infos.get(window);
            var index = setTimeout(function () {
                if (!info_1)
                    return;
                _this.removePopUp(window);
                window.dispatchEvent(new cc.Event("close", false));
            }, delay);
            info_1.interval = index;
        }
    };
    PopupManager.prototype.removePopUp = function (popUp) {
        var info = this._infos.get(popUp);
        if (!info)
            return;
        var sp = info.modal_bg;
        this._infos.remove(popUp);
        LightUI_1.default.root.off(cc.Node.EventType.TOUCH_START, info.onCloseClickOut);
        if (popUp.parent) {
            popUp.parent.removeChild(popUp, false);
        }
        if (sp && sp.parent && info.modal == true) {
            sp.parent.removeChild(sp, false);
        }
        popUp.dispatchEvent(new cc.Event("close", false));
        return sp;
    };
    PopupManager.prototype.centerPopUp = function (popUp, rect) {
        if (rect === void 0) { rect = null; }
        if (rect != null) {
            popUp.x = (rect.width - popUp.width) / 2;
            popUp.y = (rect.height - popUp.height) / 2;
        }
        else {
            if (popUp.parent.width == 0 && popUp.parent.height == 0) {
                popUp.x = (LightUI_1.default.root.width - popUp.width) / 2;
                popUp.y = (LightUI_1.default.root.height - popUp.height) / 2;
            }
            else {
                popUp.x = (popUp.parent.width - popUp.width) / 2;
                popUp.y = (popUp.parent.height - popUp.height) / 2;
            }
        }
    };
    PopupManager.bringToFront = function (popUp) {
    };
    return PopupManager;
}());
exports.default = PopupManager;
var PopupInfo = /** @class */ (function () {
    function PopupInfo(window, parent, closeClickOut, modal, modalColor, modalAlpha) {
        if (parent === void 0) { parent = null; }
        if (closeClickOut === void 0) { closeClickOut = false; }
        if (modal === void 0) { modal = false; }
        if (modalColor === void 0) { modalColor = null; }
        if (modalAlpha === void 0) { modalAlpha = 25; }
        this.parent = null;
        this.closeClickOut = false;
        this.modal = false;
        this.modalColor = null;
        this.modalAlpha = 0.60;
        this.window = window;
        this.parent = parent;
        this.closeClickOut = closeClickOut;
        this.modal = modal;
        this.modalColor = modalColor;
        this.modalAlpha = modalAlpha;
    }
    PopupInfo.prototype.onCloseClickOut = function (e) {
        // console.log("onCloseClickOut");
        // if(this.window.getChildByUuid(e.target.uuid)) return;
        // if(this.modal_bg && e.target != this.modal_bg) return;
        LightUI_1.default.root.off(cc.Node.EventType.TOUCH_START, this.onCloseClickOut);
        // popupM.removePopUp(this.window);
        LightUI_1.default.popupManager.removePopUp(this.window);
    };
    return PopupInfo;
}());
exports.PopupInfo = PopupInfo;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/managers/TaskManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'cffcdh0mgBMCZX0w/mZ2KA9', 'TaskManager');
// Script/lightUI/managers/TaskManager.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../events/LEvent");
var Dictionary_1 = require("../utils/Dictionary");
var Handler_1 = require("../utils/Handler");
var MessageBlock_1 = require("./MessageBlock");
var TaskAbs_1 = require("./TaskAbs");
/**
 * 异步任务管理器 用来统一管理异步任务 做到统一停止所有的异步任务  同时也能简化顺序执行异步任务的写法
 * 应用场景  比如需要游戏暂停功能
 *
 *  example  simpletask
 *
 *  var tasks:Array<Laya.Handler> = new Array<Laya.Handler>();
 *  tasks.push(Laya.Handler.create(this,this.task1));
 *  tasks.push(Laya.Handler.create(this,this.task2));
 *  LightUI.taskManager.runSimpleTasksOrder(tasks,Laya.Handler.create(this,this.complete)); // task1=>task2=>complete
 *  LightUI.taskManager.runSimpleTasks(tasks,Laya.Handler.create(this,this.complete));  // task2=>task1=>complete
 *
 *	private complete(){
 *		console.log("complete");
 *	}
 *
 *	private task1(complete?:Laya.Handler){
 *		setTimeout(() => {
 *			console.log("task1");
 *			complete.run();
 *		}, 2000);
 *	}
 *
 *	private task2(complete?:Laya.Handler){
 *		setTimeout(() => {
 *			console.log("task2");
 *			complete.run();
 *		}, 1000);
 *	}
 *
 *
 *
 *
 * 作为任务队列的用法
 * private test(){
 *         LightUI.taskManager.addTask(TaskAbs.create(this,this.testTask));
 *         LightUI.taskManager.addTask(TaskAbs.create(this,this.testTask2));
 *          LightUI.taskManager.run
 *     }
 *
 *     private testTask():void{
 *         this.scheduleOnce(()=>{
 *             console.log("testTask1任务执行完毕");
 *             //complete.apply(this);
 *             LightUI.taskManager.runNextTask();
 *        },2);
 *    }
 *
 *  private testTask2():void{
 *      console.log("testTask2任务执行完毕");
 *      //complete.apply(this);
 *      LightUI.taskManager.runNextTask();
 *  }
 *
 * 或者是
 *
 * private test(){
 *    LightUI.taskManager.addTask(TaskAbs.create(this,this.testTask));
 *      LightUI.taskManager.addTask(TaskAbs.create(this,this.testTask2));
 *  }
 *
 *  private testTask(complete:Function):void{
 *      this.scheduleOnce(()=>{
 *          console.log("testTask1任务执行完毕");
 *          complete.apply(this);
 *      },2);
 *  }
 *
 *  private testTask2(complete:Function):void{
 *      console.log("testTask2任务执行完毕");
 *      complete.apply(this);
 *  }
 *
 *
 */
var TaskManager = /** @class */ (function (_super) {
    __extends(TaskManager, _super);
    function TaskManager(blockLength, autoReback) {
        if (blockLength === void 0) { blockLength = 500; }
        if (autoReback === void 0) { autoReback = false; }
        var _this = _super.call(this) || this;
        _this._id = 0;
        _this.dic = new Dictionary_1.default();
        _this._block = new MessageBlock_1.default(blockLength);
        _this._autoReback = autoReback;
        return _this;
    }
    TaskManager.creat = function (blockLength, autoReback) {
        if (blockLength === void 0) { blockLength = 500; }
        if (autoReback === void 0) { autoReback = true; }
        if (this._pool.length <= 0) {
            //creat
            return new TaskManager(blockLength, autoReback);
        }
        else {
            //borrow
            var taskManager = this._pool.pop();
            taskManager.blockLength = blockLength;
            taskManager.autoReback = autoReback;
            return taskManager;
        }
    };
    TaskManager.reback = function (taskManager) {
        taskManager.clear();
        this._pool.push(taskManager);
    };
    TaskManager.prototype.addTask = function (task) {
        // console.log("增加一个任务");
        this._block.add(task);
        //如果只有一个任务 则立马开始执行
        // if(this._block.size == 1) this.runTask(task);
    };
    TaskManager.prototype.run = function () {
        if (this._block.size <= 0)
            return;
        this.runTask(this._block.getFirst());
    };
    TaskManager.prototype.clear = function () {
        this._block.clear();
        this.dic.clear();
    };
    //手动调用执行下一个任务
    TaskManager.prototype.runNextTask = function () {
        this._block.pop(TaskAbs_1.default);
        if (this._block.size > 0)
            this.runTask(this._block.getFirst());
        else {
            //批次任务 执行完毕
            // console.log("批次任务 执行完毕");
            this.dispatchEvent(new LEvent_1.default(LEvent_1.default.COMPLETE));
            if (this._autoReback == true) {
                TaskManager.reback(this);
            }
        }
    };
    TaskManager.prototype.runTask = function (task) {
        var _this = this;
        task.once(LEvent_1.default.COMPLETE, function () {
            _this._block.pop(TaskAbs_1.default); //任务执行完毕  出列
            //如果还有任务 则继续执行
            if (_this._block.size > 0)
                _this.runTask(_this._block.getFirst());
            else
                console.log("暂无任务");
        });
        task.run();
    };
    TaskManager.prototype.runSimpleTask = function (task, complete) {
        if (this.dic.get(task)) {
            return null;
        }
        this.dic.set(task, task);
        if (!task.args)
            task.args = [];
        task.args.push(complete);
        task.run();
    };
    /**
     * 按顺序执行任务列表
     * @param tasks
     * @param complete
     */
    TaskManager.prototype.runSimpleTasksOrder = function (tasks, complete) {
        var _this = this;
        var id = this._id++;
        this.dic.set(id, tasks);
        var l = tasks.length;
        var task = tasks.shift();
        var itemComplete = function () {
            if (task)
                _this.clearSimpleTask(task);
            var tasklist = _this.dic.get(id);
            if (tasklist == null) {
                console.log("被清除了");
                return;
            }
            if (tasklist.length <= 0) {
                if (complete)
                    complete.run();
                return;
            }
            task = tasklist.shift();
            _this.runSimpleTask(task, Handler_1.default.create(_this, itemComplete));
        };
        this.runSimpleTask(task, Handler_1.default.create(this, itemComplete));
        return id;
    };
    /**
     * 同时执行一批任务
     * @param tasks
     * @param complete
     */
    TaskManager.prototype.runSimpleTasks = function (tasks, complete) {
        var _this = this;
        var l = tasks.length;
        if (l <= 0)
            if (complete)
                complete.run();
        var lights = 0;
        var itemComplete = function () {
            if (tasks[lights])
                _this.clearSimpleTask(tasks[lights]);
            if (++lights >= l) {
                if (complete)
                    complete.run();
                return;
            }
        };
        for (var i = 0; i < l; i++) {
            this.runSimpleTask(tasks[i], Handler_1.default.create(this, itemComplete));
        }
    };
    TaskManager.prototype.clearSimpleTask = function (task) {
        if (!this.dic.get(task))
            return;
        this.dic.remove(task);
    };
    Object.defineProperty(TaskManager.prototype, "blockLength", {
        set: function (value) {
            this._block.size = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(TaskManager.prototype, "autoReback", {
        set: function (value) {
            this._autoReback = value;
        },
        enumerable: false,
        configurable: true
    });
    TaskManager._pool = [];
    return TaskManager;
}(cc.EventTarget));
exports.default = TaskManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/managers/TaskAbs.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8c60aHVQWVFJrt57pj2vwsp', 'TaskAbs');
// Script/lightUI/managers/TaskAbs.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../events/LEvent");
/**
     * <p><code>Handler</code> 是事件处理器类。</p>
     * <p>推荐使用 Handler.create() 方法从对象池创建，减少对象创建消耗。创建的 Handler 对象不再使用后，可以使用 Handler.recover() 将其回收到对象池，回收后不要再使用此对象，否则会导致不可预料的错误。</p>
     * <p><b>注意：</b>由于鼠标事件也用本对象池，不正确的回收及调用，可能会影响鼠标事件的执行。</p>
     */
var TaskAbs = /** @class */ (function (_super) {
    __extends(TaskAbs, _super);
    /**
     * 根据指定的属性值，创建一个 <code>Handler</code> 类的实例。
     * @param	caller 执行域。
     * @param	method 处理函数。
     * @param	args 函数参数。
     * @param	once 是否只执行一次。
     */
    function TaskAbs(caller, method, args, once) {
        if (caller === void 0) { caller = null; }
        if (method === void 0) { method = null; }
        if (args === void 0) { args = null; }
        if (once === void 0) { once = false; }
        var _this = _super.call(this) || this;
        /** 表示是否只执行一次。如果为true，回调后执行recover()进行回收，回收后会被再利用，默认为false 。*/
        _this.runonce = false;
        /**@private */
        _this._id = 0;
        _this.setTo(caller, method, args, once);
        return _this;
    }
    /**
     * 设置此对象的指定属性值。
     * @param	caller 执行域(this)。
     * @param	method 回调方法。
     * @param	args 携带的参数。
     * @param	once 是否只执行一次，如果为true，执行后执行recover()进行回收。
     * @return  返回 handler 本身。
     */
    TaskAbs.prototype.setTo = function (caller, method, args, once) {
        if (once === void 0) { once = false; }
        this._id = TaskAbs._gid++;
        this.caller = caller;
        this.method = method;
        this.args = args;
        this.runonce = once;
        return this;
    };
    /**
     * 执行处理器。
     */
    TaskAbs.prototype.run = function () {
        var _this = this;
        if (this.method == null)
            return null;
        var id = this._id;
        this.args = [function () {
                _this.dispatchEvent(new LEvent_1.default(LEvent_1.default.COMPLETE));
            }];
        var result = this.method.apply(this.caller, this.args);
        this._id === id && this.runonce && this.recover();
        return result;
    };
    /**
     * 执行处理器，并携带额外数据。
     * @param	data 附加的回调数据，可以是单数据或者Array(作为多参)。
     */
    TaskAbs.prototype.runWith = function (data) {
        if (this.method == null)
            return null;
        var id = this._id;
        if (data == null)
            var result = this.method.apply(this.caller, this.args);
        else if (!this.args && !data.unshift)
            result = this.method.call(this.caller, data);
        else if (this.args)
            result = this.method.apply(this.caller, this.args.concat(data));
        else
            result = this.method.apply(this.caller, data);
        this._id === id && this.runonce && this.recover();
        return result;
    };
    /**
     * 清理对象引用。
     */
    TaskAbs.prototype.clear = function () {
        this.caller = null;
        this.method = null;
        this.args = null;
        return this;
    };
    /**
     * 清理并回收到 Handler 对象池内。
     */
    TaskAbs.prototype.recover = function () {
        if (this._id > 0) {
            this._id = 0;
            TaskAbs._pool.push(this.clear());
        }
    };
    TaskAbs.prototype.complete = function () {
        this.dispatchEvent(new LEvent_1.default(LEvent_1.default.COMPLETE));
    };
    /**
     * 从对象池内创建一个Handler，默认会执行一次并立即回收，如果不需要自动回收，设置once参数为false。
     * @param	caller 执行域(this)。
     * @param	method 回调方法。
     * @param	args 携带的参数。
     * @param	once 是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。
     * @return  返回创建的handler实例。
     */
    TaskAbs.create = function (caller, method, args, once) {
        if (args === void 0) { args = null; }
        if (once === void 0) { once = true; }
        if (TaskAbs._pool.length)
            return TaskAbs._pool.pop().setTo(caller, method, args, once);
        return new TaskAbs(caller, method, args, once);
    };
    /**@private handler对象池*/
    TaskAbs._pool = [];
    /**@private */
    TaskAbs._gid = 1;
    return TaskAbs;
}(cc.EventTarget));
exports.default = TaskAbs;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/utils/Handler.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '97dd0yDpDZK9rJzu8viF2iG', 'Handler');
// Script/lightUI/utils/Handler.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../events/LEvent");
/**
     * <p><code>Handler</code> 是事件处理器类。</p>
     * <p>推荐使用 Handler.create() 方法从对象池创建，减少对象创建消耗。创建的 Handler 对象不再使用后，可以使用 Handler.recover() 将其回收到对象池，回收后不要再使用此对象，否则会导致不可预料的错误。</p>
     * <p><b>注意：</b>由于鼠标事件也用本对象池，不正确的回收及调用，可能会影响鼠标事件的执行。</p>
     */
var Handler = /** @class */ (function (_super) {
    __extends(Handler, _super);
    /**
     * 根据指定的属性值，创建一个 <code>Handler</code> 类的实例。
     * @param	caller 执行域。
     * @param	method 处理函数。
     * @param	args 函数参数。
     * @param	once 是否只执行一次。
     */
    function Handler(caller, method, args, once) {
        if (caller === void 0) { caller = null; }
        if (method === void 0) { method = null; }
        if (args === void 0) { args = null; }
        if (once === void 0) { once = false; }
        var _this = _super.call(this) || this;
        /** 表示是否只执行一次。如果为true，回调后执行recover()进行回收，回收后会被再利用，默认为false 。*/
        _this.runonce = false;
        /**@private */
        _this._id = 0;
        _this.setTo(caller, method, args, once);
        return _this;
    }
    /**
     * 设置此对象的指定属性值。
     * @param	caller 执行域(this)。
     * @param	method 回调方法。
     * @param	args 携带的参数。
     * @param	once 是否只执行一次，如果为true，执行后执行recover()进行回收。
     * @return  返回 handler 本身。
     */
    Handler.prototype.setTo = function (caller, method, args, once) {
        if (once === void 0) { once = false; }
        this._id = Handler._gid++;
        this.caller = caller;
        this.method = method;
        this.args = args;
        this.runonce = once;
        return this;
    };
    /**
     * 执行处理器。
     */
    Handler.prototype.run = function () {
        if (this.method == null)
            return null;
        var id = this._id;
        var result = this.method.apply(this.caller, this.args);
        this._id === id && this.runonce && this.recover();
        return result;
    };
    /**
     * 执行处理器，并携带额外数据。
     * @param	data 附加的回调数据，可以是单数据或者Array(作为多参)。
     */
    Handler.prototype.runWith = function (data) {
        if (this.method == null)
            return null;
        var id = this._id;
        if (data == null)
            var result = this.method.apply(this.caller, this.args);
        else if (!this.args && !data.unshift)
            result = this.method.call(this.caller, data);
        else if (this.args)
            result = this.method.apply(this.caller, this.args.concat(data));
        else
            result = this.method.apply(this.caller, data);
        this._id === id && this.runonce && this.recover();
        return result;
    };
    /**
     * 清理对象引用。
     */
    Handler.prototype.clear = function () {
        this.caller = null;
        this.method = null;
        this.args = null;
        return this;
    };
    /**
     * 清理并回收到 Handler 对象池内。
     */
    Handler.prototype.recover = function () {
        if (this._id > 0) {
            this._id = 0;
            Handler._pool.push(this.clear());
        }
    };
    Handler.prototype.complete = function () {
        this.dispatchEvent(new LEvent_1.default(LEvent_1.default.COMPLETE));
    };
    /**
     * 从对象池内创建一个Handler，默认会执行一次并立即回收，如果不需要自动回收，设置once参数为false。
     * @param	caller 执行域(this)。
     * @param	method 回调方法。
     * @param	args 携带的参数。
     * @param	once 是否只执行一次，如果为true，回调后执行recover()进行回收，默认为true。
     * @return  返回创建的handler实例。
     */
    Handler.create = function (caller, method, args, once) {
        if (args === void 0) { args = null; }
        if (once === void 0) { once = true; }
        if (Handler._pool.length)
            return Handler._pool.pop().setTo(caller, method, args, once);
        return new Handler(caller, method, args, once);
    };
    /**@private handler对象池*/
    Handler._pool = [];
    /**@private */
    Handler._gid = 1;
    return Handler;
}(cc.EventTarget));
exports.default = Handler;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/utils/Draw.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '7cd1fJ6EZhI5rHXINzxltaL', 'Draw');
// Script/lightUI/utils/Draw.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Draw = /** @class */ (function () {
    function Draw() {
    }
    Draw.drawRect = function (rect, color) {
        if (color === void 0) { color = null; }
        color = color ? color : "0xff0000";
        var re = new cc.Node();
        re.width = rect.width;
        re.height = rect.height;
        // re.anchorX = 0;
        // re.anchorY = 0;
        var g = re.addComponent(cc.Graphics);
        g.fillColor.fromHEX(color);
        g.rect(-rect.width / 2, -rect.height / 2, rect.width, rect.height);
        g.fill();
        return re;
    };
    return Draw;
}());
exports.default = Draw;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFx1dGlsc1xcRHJhdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0lBQUE7SUFtQkEsQ0FBQztJQWpCaUIsYUFBUSxHQUF0QixVQUF1QixJQUFZLEVBQUUsS0FBbUI7UUFBbkIsc0JBQUEsRUFBQSxZQUFtQjtRQUUxRCxLQUFLLEdBQUcsS0FBSyxDQUFBLENBQUMsQ0FBQSxLQUFLLENBQUEsQ0FBQyxDQUFBLFVBQVUsQ0FBQztRQUUvQixJQUFJLEVBQUUsR0FBVyxJQUFJLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUN6QixFQUFFLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDdEIsRUFBRSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ3hCLGtCQUFrQjtRQUNsQixrQkFBa0I7UUFDbEIsSUFBSSxDQUFDLEdBQWUsRUFBRSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDakQsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0IsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUMsQ0FBQyxFQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sR0FBQyxDQUFDLEVBQUMsSUFBSSxDQUFDLEtBQUssRUFBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDbEUsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDO1FBRVQsT0FBTyxFQUFFLENBQUM7SUFDWCxDQUFDO0lBRUYsV0FBQztBQUFELENBbkJBLEFBbUJDLElBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBEcmF3e1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZHJhd1JlY3QocmVjdDpjYy5SZWN0LCBjb2xvcjpzdHJpbmcgPSBudWxsKTpjYy5Ob2Rle1xyXG5cdFx0XHJcblx0XHRjb2xvciA9IGNvbG9yP2NvbG9yOlwiMHhmZjAwMDBcIjtcclxuXHRcdFxyXG5cdFx0dmFyIHJlOmNjLk5vZGUgPSBuZXcgY2MuTm9kZSgpO1xyXG4gICAgICAgIHJlLndpZHRoID0gcmVjdC53aWR0aDtcclxuICAgICAgICByZS5oZWlnaHQgPSByZWN0LmhlaWdodDtcclxuICAgICAgICAvLyByZS5hbmNob3JYID0gMDtcclxuICAgICAgICAvLyByZS5hbmNob3JZID0gMDtcclxuICAgICAgICBsZXQgZzpjYy5HcmFwaGljcyA9IHJlLmFkZENvbXBvbmVudChjYy5HcmFwaGljcyk7XHJcbiAgICAgICAgZy5maWxsQ29sb3IuZnJvbUhFWChjb2xvcik7XHJcbiAgICAgICAgZy5yZWN0KC1yZWN0LndpZHRoLzIsLXJlY3QuaGVpZ2h0LzIscmVjdC53aWR0aCxyZWN0LmhlaWdodCk7XHJcblx0XHRnLmZpbGwoKTtcclxuXHRcdFxyXG5cdFx0cmV0dXJuIHJlO1xyXG5cdH1cclxuXHJcbn0iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/newlist/newlist.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f78d01THZlFm6MHYSYDoFLU', 'newlist');
// Script/lightUI/components/newlist/newlist.ts

"use strict";
// Learn TypeScript:
//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html
// Learn Attribute:
//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html
// Learn life-cycle callbacks:
//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StartAxisType = exports.ListType = void 0;
var LEvent_1 = require("../../events/LEvent");
var listItemRender_1 = require("./listItemRender");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
/**列表排列方式 */
var ListType;
(function (ListType) {
    /**水平排列 */
    ListType[ListType["Horizontal"] = 1] = "Horizontal";
    /**垂直排列 */
    ListType[ListType["Vertical"] = 2] = "Vertical";
    /**网格排列 */
    ListType[ListType["Grid"] = 3] = "Grid";
})(ListType = exports.ListType || (exports.ListType = {}));
/**网格布局中的方向 */
var StartAxisType;
(function (StartAxisType) {
    /**水平排列 */
    StartAxisType[StartAxisType["Horizontal"] = 1] = "Horizontal";
    /**垂直排列 */
    StartAxisType[StartAxisType["Vertical"] = 2] = "Vertical";
})(StartAxisType = exports.StartAxisType || (exports.StartAxisType = {}));
/**
 * 列表
 * 根据cocos_example的listView改动而来
 * @author chenkai 2020.7.8
 * @example
 *  1.创建cocos的ScrollView组件，添加List，设置List属性即可
 *
 */
var newlist = /** @class */ (function (_super) {
    __extends(newlist, _super);
    function newlist() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        //==================== 属性面板 =========================
        /**列表选项 */
        _this.itemRender = null;
        /**排列方式 */
        _this.type = ListType.Vertical;
        /**网格布局中的方向 */
        _this.startAxis = StartAxisType.Horizontal;
        /**列表项之间X间隔 */
        _this.spaceX = 0;
        /**列表项之间Y间隔 */
        _this.spaceY = 0;
        /**上间距 */
        _this.padding_top = 0;
        /**下间距 */
        _this.padding_buttom = 0;
        /**左间距 */
        _this.padding_left = 0;
        /**列表选项 */
        _this.none = null;
        _this._padding = 0;
        /**右间距 */
        _this.padding_right = 0;
        //====================== 滚动容器 ===============================
        /**列表滚动容器 */
        _this.scrollView = null;
        /**scrollView的内容容器 */
        _this.content = null;
        //======================== 列表项 ===========================
        /**列表项数据 */
        _this.itemDataList = [];
        /**应创建的实例数量 */
        _this.spawnCount = 0;
        /**存放列表项实例的数组 */
        _this.itemList = [];
        /**item的高度 */
        _this.itemHeight = 0;
        /**item的宽度 */
        _this.itemWidth = 0;
        /**存放不再使用中的列表项 */
        _this.itemPool = [];
        //======================= 计算参数 ==========================
        /**距离scrollView中心点的距离，超过这个距离的item会被重置，一般设置为 scrollVIew.height/2 + item.heigt/2 + space，因为这个距离item正好超出scrollView显示范围 */
        _this.halfScrollView = 0;
        /**上一次content的X值，用于和现在content的X值比较，得出是向左还是向右滚动 */
        _this.lastContentPosX = 0;
        /**上一次content的Y值，用于和现在content的Y值比较，得出是向上还是向下滚动 */
        _this.lastContentPosY = 0;
        /**网格行数 */
        _this.gridRow = 0;
        /**网格列数 */
        _this.gridCol = 0;
        /**刷新时间，单位s */
        _this.updateTimer = 0;
        /**刷新间隔，单位s */
        _this.updateInterval = 0.1;
        /**是否滚动容器 */
        _this.bScrolling = false;
        /**刷新的函数 */
        _this.updateFun = function () { };
        return _this;
    }
    newlist.prototype.onLoad = function () {
        this.itemHeight = this.itemRender.height;
        this.itemWidth = this.itemRender.width;
        this.scrollView = this.node.getComponent(cc.ScrollView);
        this.content = this.scrollView.content;
        this.content.anchorX = 0;
        this.content.anchorY = 1;
        this.content.removeAllChildren();
        this.scrollView.node.on("scrolling", this.onScrolling, this);
    };
    /**
     * 列表数据 (列表数据复制使用，如果列表数据改变，则需要重新设置一遍数据)
     * @param itemDataList item数据列表
     */
    newlist.prototype.setData = function (itemDataList) {
        if (itemDataList && itemDataList.length < 1) {
            this.onDestroy();
            return;
        }
        if (this.none)
            this.none.active = (itemDataList.length == 0);
        this.itemDataList = itemDataList.slice();
        this.updateContent();
    };
    /**计算列表的各项参数 */
    newlist.prototype.countListParam = function () {
        var dataLen = this.itemDataList.length;
        if (this.type == ListType.Vertical) {
            this.scrollView.horizontal = false;
            this.scrollView.vertical = true;
            this.content.width = this.content.parent.width;
            this.content.height = dataLen * this.itemHeight + (dataLen - 1) * this.spaceY + this.padding_top + this.padding_buttom;
            this.spawnCount = Math.round(this.scrollView.node.height / (this.itemHeight + this.spaceY)) + 2; //计算创建的item实例数量，比当前scrollView容器能放下的item数量再加上2个
            this.halfScrollView = this.scrollView.node.height / 2 + this.itemHeight / 2 + this.spaceY; //计算bufferZone，item的显示范围
            this.updateFun = this.updateV;
        }
        else if (this.type == ListType.Horizontal) {
            this.scrollView.horizontal = true;
            this.scrollView.vertical = false;
            this.content.width = dataLen * this.itemWidth + (dataLen - 1) * this.spaceX + this.padding_left + this.padding_right;
            this.content.height = this.content.parent.height;
            this.spawnCount = Math.round(this.scrollView.node.width / (this.itemWidth + this.spaceX)) + 2;
            this.halfScrollView = this.scrollView.node.width / 2 + this.itemWidth / 2 + this.spaceX;
            this.updateFun = this.udpateH;
        }
        else if (this.type == ListType.Grid) {
            if (this.startAxis == StartAxisType.Vertical) {
                this.scrollView.horizontal = false;
                this.scrollView.vertical = true;
                this.content.width = this.content.parent.width;
                //如果left和right间隔过大，导致放不下一个item，则left和right都设置为0，相当于不生效
                if (this.padding_left + this.padding_right + this.itemWidth + this.spaceX > this.content.width) {
                    this.padding_left = 0;
                    this.padding_right = 0;
                    console.error("padding_left或padding_right过大");
                }
                this.gridCol = Math.floor((this.content.width - this.padding_left - this.padding_right) / (this.itemWidth + this.spaceX));
                this.gridRow = Math.ceil(dataLen / this.gridCol);
                this.content.height = this.gridRow * this.itemHeight + (this.gridRow - 1) * this.spaceY + this.padding_top + this.padding_buttom;
                this.spawnCount = Math.round(this.scrollView.node.height / (this.itemHeight + this.spaceY)) * this.gridCol + this.gridCol * 2;
                this.halfScrollView = this.scrollView.node.height / 2 + this.itemHeight / 2 + this.spaceY;
                this.updateFun = this.updateGrid_V;
            }
            else if (this.startAxis == StartAxisType.Horizontal) {
                this.scrollView.horizontal = true;
                this.scrollView.vertical = false;
                //计算高间隔
                this.content.height = this.content.parent.height;
                //如果left和right间隔过大，导致放不下一个item，则left和right都设置为0，相当于不生效
                if (this.padding_top + this.padding_buttom + this.itemHeight + this.spaceY > this.content.height) {
                    this.padding_top = 0;
                    this.padding_buttom = 0;
                    console.error("padding_top或padding_buttom过大");
                }
                this.gridRow = Math.floor((this.content.height - this.padding_top - this.padding_buttom) / (this.itemHeight + this.spaceY));
                this.gridCol = Math.ceil(dataLen / this.gridRow);
                this.content.width = this.gridCol * this.itemWidth + (this.gridCol - 1) * this.spaceX + this.padding_left + this.padding_right;
                this.spawnCount = Math.round(this.scrollView.node.width / (this.itemWidth + this.spaceX)) * this.gridRow + this.gridRow * 2;
                this.halfScrollView = this.scrollView.node.width / 2 + this.itemWidth / 2 + this.spaceX;
                this.updateFun = this.updateGrid_H;
            }
        }
    };
    /**
     * 创建列表
     * @param startIndex 起始显示的数据索引 0表示第一项
     * @param offset     scrollView偏移量
     */
    newlist.prototype.createList = function (startIndex, offset) {
        //当需要显示的数据长度 > 虚拟列表长度， 删除最末尾几个数据时，列表需要重置位置到scrollView最底端
        if (this.itemDataList.length > this.spawnCount && (startIndex + this.spawnCount - 1) >= this.itemDataList.length) {
            startIndex = this.itemDataList.length - this.spawnCount;
            offset = this.scrollView.getMaxScrollOffset();
            //当需要显示的数据长度 <= 虚拟列表长度， 隐藏多余的虚拟列表项 
        }
        else if (this.itemDataList.length <= this.spawnCount) {
            startIndex = 0;
        }
        for (var i = 0; i < this.spawnCount; i++) {
            var item = void 0;
            //需要显示的数据索引在数据范围内，则item实例显示出来
            if (i + startIndex < this.itemDataList.length) {
                if (this.itemList[i] == null) {
                    item = this.getItem();
                    this.itemList.push(item);
                    item.parent = this.content;
                }
                else {
                    item = this.itemList[i];
                }
                //需要显示的数据索引超过了数据范围，则item实例隐藏起来
            }
            else {
                //item实例数量 > 需要显示的数据量
                if (this.itemList.length > (this.itemDataList.length - startIndex)) {
                    item = this.itemList.pop();
                    item.removeFromParent();
                    this.itemPool.push(item);
                }
                continue;
            }
            var itemRender = item.getComponent(listItemRender_1.default);
            itemRender.itemIndex = i + startIndex;
            itemRender.data = this.itemDataList[i + startIndex];
            itemRender.dataChanged();
            if (this.type == ListType.Vertical) {
                //因为content的锚点X是0，所以item的x值是content.with/2表示居中，锚点Y是1，所以item的y值从content顶部向下是0到负无穷。所以item.y= -item.height/2时，是在content的顶部。
                item.setPosition(this.content.width / 2, -item.height * (0.5 + i + startIndex) - this.spaceY * (i + startIndex) - this.padding_top);
            }
            else if (this.type == ListType.Horizontal) {
                item.setPosition(item.width * (0.5 + i + startIndex) + this.spaceX * (i + startIndex) + this.padding_left, -this.content.height / 2);
            }
            else if (this.type == ListType.Grid) {
                if (this.startAxis == StartAxisType.Vertical) {
                    var row = Math.floor((i + startIndex) / this.gridCol);
                    var col = (i + startIndex) % this.gridCol;
                    item.setPosition(item.width * (0.5 + col) + this.spaceX * col + this.padding_left, -item.height * (0.5 + row) - this.spaceY * row - this.padding_top);
                    item.opacity = 255;
                }
                else if (this.startAxis == StartAxisType.Horizontal) {
                    var row = (i + startIndex) % this.gridRow;
                    var col = Math.floor((i + startIndex) / this.gridRow);
                    item.setPosition(item.width * (0.5 + col) + this.spaceX * col + this.padding_left, -item.height * (0.5 + row) - this.spaceY * row - this.padding_top);
                    item.opacity = 255;
                }
            }
        }
        this.scrollView.scrollToOffset(offset);
    };
    /**获取一个列表项 */
    newlist.prototype.getItem = function () {
        if (this.itemPool.length == 0) {
            var item = cc.instantiate(this.itemRender);
            item.on(cc.Node.EventType.TOUCH_END, this.itemClickHandler, this);
            return item;
        }
        else {
            return this.itemPool.pop();
        }
    };
    newlist.prototype.itemClickHandler = function (event) {
        var item = event.currentTarget.getComponent(listItemRender_1.default);
        console.log("itemClickHandler ", item.itemIndex);
        this._selectedItem = item.data;
        this._selectedIndex = item.itemIndex;
        this.node.dispatchEvent(new LEvent_1.default(LEvent_1.default.ITEM_CLICK, item.itemIndex));
    };
    /**获取选中的视图*/
    newlist.prototype.getSelectedItemrander = function () {
        if (this._selectedIndex < 0)
            return null;
        var itemR;
        for (var _i = 0, _a = this.content.children; _i < _a.length; _i++) {
            var item = _a[_i];
            itemR = item.getComponent(listItemRender_1.default);
            if (itemR && itemR.itemIndex == this.selectedIndex)
                return item;
        }
        return null;
    };
    Object.defineProperty(newlist.prototype, "selectedIndex", {
        get: function () {
            return this._selectedIndex;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(newlist.prototype, "selectedItem", {
        get: function () {
            return this._selectedItem;
        },
        enumerable: false,
        configurable: true
    });
    newlist.prototype.update = function (dt) {
        if (this.bScrolling == false) {
            return;
        }
        this.updateTimer += dt;
        if (this.updateTimer < this.updateInterval) {
            return;
        }
        this.updateTimer = 0;
        this.bScrolling = false;
        this.updateFun();
    };
    newlist.prototype.onScrolling = function () {
        this.bScrolling = true;
    };
    // /**垂直排列 */
    // private updateV() {
    //     let items = this.itemList;
    //     let item;
    //     let bufferZone = this.halfScrollView;
    //     let isUp = this.scrollView.content.y > this.lastContentPosY;
    //     let offset = (this.itemHeight + this.spaceY) * items.length;
    //     for (let i = 0; i < items.length; i++) {
    //         item = items[i];
    //         let viewPos = this.getPositionInView(item);
    //         if (isUp) {
    //             //item上滑时，超出了scrollView上边界，将item移动到下方复用，item移动到下方的位置必须不超过content的下边界
    //             if (viewPos.y > bufferZone && item.y - offset - this.padding_buttom > -this.content.height) {
    //                 let itemRender: listItemRender = item.getComponent(listItemRender);
    //                 let itemIndex = itemRender.itemIndex + items.length;
    //                 itemRender.itemIndex = itemIndex;
    //                 itemRender.data = this.itemDataList[itemIndex];
    //                 itemRender.dataChanged();
    //                 item.y = item.y - offset;
    //             }
    //         } else {
    //             //item下滑时，超出了scrollView下边界，将item移动到上方复用，item移动到上方的位置必须不超过content的上边界
    //             if (viewPos.y < -bufferZone && item.y + offset + this.padding_top < 0) {
    //                 let itemRender: listItemRender = item.getComponent(listItemRender);
    //                 let itemIndex = itemRender.itemIndex - items.length;
    //                 itemRender.itemIndex = itemIndex;
    //                 itemRender.data = this.itemDataList[itemIndex];
    //                 itemRender.dataChanged();
    //                 item.y = item.y + offset;
    //             }
    //         }
    //     }
    //     this.lastContentPosY = this.scrollView.content.y;
    // }
    newlist.prototype.updateV = function () {
        var items = this.itemList;
        var item;
        var bufferZone = this.halfScrollView;
        var isUp = this.scrollView.content.y > this.lastContentPosY;
        var offset = (this.itemHeight + this.spaceY) * items.length;
        for (var i = 0; i < items.length; i++) {
            item = items[i];
            var viewPos = this.getPositionInView(item);
            if (isUp) {
                //item上滑时，超出了scrollView上边界，将item移动到下方复用，item移动到下方的位置必须不超过content的下边界
                if (viewPos.y > bufferZone && item.y - offset - this.padding_buttom > -this.content.height) {
                    var itemRender = item.getComponent(listItemRender_1.default);
                    var itemIndex = itemRender.itemIndex + items.length;
                    itemRender.itemIndex = itemIndex;
                    itemRender.data = this.itemDataList[itemIndex];
                    itemRender.data.index = itemIndex;
                    itemRender.dataChanged();
                    item.y = item.y - offset;
                }
            }
            else {
                //item下滑时，超出了scrollView下边界，将item移动到上方复用，item移动到上方的位置必须不超过content的上边界
                if (viewPos.y + item.height < -bufferZone && item.y + offset + this.padding_top < 0) {
                    console.log("超出了scrollView下边界");
                    var itemRender = item.getComponent(listItemRender_1.default);
                    var itemIndex = itemRender.itemIndex - items.length;
                    itemRender.itemIndex = itemIndex;
                    itemRender.data = this.itemDataList[itemIndex];
                    itemRender.data.index = itemIndex;
                    itemRender.dataChanged();
                    item.y = item.y + offset;
                }
            }
        }
        this.lastContentPosY = this.scrollView.content.y;
    };
    /**水平排列 */
    newlist.prototype.udpateH = function () {
        var items = this.itemList;
        var item;
        var bufferZone = this.halfScrollView;
        var isRight = this.scrollView.content.x > this.lastContentPosX;
        var offset = (this.itemWidth + this.spaceX) * items.length;
        for (var i = 0; i < items.length; i++) {
            item = items[i];
            var viewPos = this.getPositionInView(item);
            if (isRight) {
                //item右滑时，超出了scrollView右边界，将item移动到左方复用，item移动到左方的位置必须不超过content的左边界
                if (viewPos.x > bufferZone && item.x - offset - this.padding_left > 0) {
                    var itemRender = item.getComponent(listItemRender_1.default);
                    var itemIndex = itemRender.itemIndex - items.length;
                    itemRender.itemIndex = itemIndex;
                    itemRender.data = this.itemDataList[itemIndex];
                    itemRender.dataChanged();
                    item.x = item.x - offset;
                }
            }
            else {
                //item左滑时，超出了scrollView左边界，将item移动到右方复用，item移动到右方的位置必须不超过content的右边界
                if (viewPos.x < -bufferZone && item.x + offset + this.padding_right < this.content.width) {
                    var itemRender = item.getComponent(listItemRender_1.default);
                    var itemIndex = itemRender.itemIndex + items.length;
                    itemRender.itemIndex = itemIndex;
                    itemRender.data = this.itemDataList[itemIndex];
                    itemRender.dataChanged();
                    item.x = item.x + offset;
                }
            }
        }
        this.lastContentPosX = this.scrollView.content.x;
    };
    /**网格垂直排列 */
    newlist.prototype.updateGrid_V = function () {
        var items = this.itemList;
        var item;
        var bufferZone = this.halfScrollView;
        var isUp = this.scrollView.content.y > this.lastContentPosY;
        var offset = (this.itemHeight + this.spaceY) * (this.spawnCount / this.gridCol);
        for (var i = 0; i < items.length; i++) {
            item = items[i];
            var viewPos = this.getPositionInView(item);
            if (isUp) {
                //item上滑时，超出了scrollView上边界，将item移动到下方复用，item移动到下方的位置必须不超过content的下边界
                if (viewPos.y > bufferZone && item.y - offset - this.padding_buttom > -this.content.height) {
                    var itemRender = item.getComponent(listItemRender_1.default);
                    var itemIndex = itemRender.itemIndex + (this.spawnCount / this.gridCol) * this.gridCol;
                    if (this.itemDataList[itemIndex] != null) {
                        item.y = item.y - offset;
                        itemRender.itemIndex = itemIndex;
                        itemRender.data = this.itemDataList[itemIndex];
                        itemRender.dataChanged();
                        item.opacity = 255;
                    }
                    else {
                        item.y = item.y - offset;
                        itemRender.itemIndex = itemIndex;
                        item.opacity = 0;
                    }
                }
            }
            else { //item下滑时，超出了scrollView下边界，将item移动到上方复用，item移动到上方的位置必须不超过content的上边界
                if (viewPos.y < -bufferZone && item.y + offset + this.padding_top < 0) {
                    var itemRender = item.getComponent(listItemRender_1.default);
                    var itemIndex = itemRender.itemIndex - (this.spawnCount / this.gridCol) * this.gridCol;
                    if (this.itemDataList[itemIndex] != null) {
                        item.y = item.y + offset;
                        itemRender.itemIndex = itemIndex;
                        itemRender.data = this.itemDataList[itemIndex];
                        itemRender.dataChanged();
                        item.opacity = 255;
                    }
                    else {
                        item.y = item.y + offset;
                        itemRender.itemIndex = itemIndex;
                        item.opacity = 0;
                    }
                }
            }
        }
        this.lastContentPosY = this.scrollView.content.y;
    };
    /**网格水平排列 */
    newlist.prototype.updateGrid_H = function () {
        var items = this.itemList;
        var item;
        var bufferZone = this.halfScrollView;
        var isRight = this.scrollView.content.x > this.lastContentPosX;
        var offset = (this.itemWidth + this.spaceX) * (this.spawnCount / this.gridRow);
        for (var i = 0; i < items.length; i++) {
            item = items[i];
            var viewPos = this.getPositionInView(item);
            if (isRight) {
                //item右滑时，超出了scrollView右边界，将item移动到左方复用，item移动到左方的位置必须不超过content的左边界
                if (viewPos.x > bufferZone && item.x - offset - this.padding_left > 0) {
                    var itemRender = item.getComponent(listItemRender_1.default);
                    var itemIndex = itemRender.itemIndex - (this.spawnCount / this.gridRow) * this.gridRow;
                    if (this.itemDataList[itemIndex] != null) {
                        item.x = item.x - offset;
                        itemRender.itemIndex = itemIndex;
                        itemRender.data = this.itemDataList[itemIndex];
                        itemRender.dataChanged();
                        item.opacity = 255;
                    }
                    else {
                        item.x = item.x - offset;
                        itemRender.itemIndex = itemIndex;
                        item.opacity = 0;
                    }
                }
            }
            else {
                //item左滑时，超出了scrollView左边界，将item移动到右方复用，item移动到右方的位置必须不超过content的右边界
                if (viewPos.x < -bufferZone && item.x + offset + this.padding_right < this.content.width) {
                    var itemRender = item.getComponent(listItemRender_1.default);
                    var itemIndex = itemRender.itemIndex + (this.spawnCount / this.gridRow) * this.gridRow;
                    if (this.itemDataList[itemIndex] != null) {
                        item.x = item.x + offset;
                        itemRender.itemIndex = itemIndex;
                        itemRender.data = this.itemDataList[itemIndex];
                        itemRender.dataChanged();
                        item.opacity = 255;
                    }
                    else {
                        item.x = item.x + offset;
                        itemRender.itemIndex = itemIndex;
                        item.opacity = 0;
                    }
                }
            }
        }
        this.lastContentPosX = this.scrollView.content.x;
    };
    /**获取item在scrollView的局部坐标 */
    newlist.prototype.getPositionInView = function (item) {
        var worldPos = item.parent.convertToWorldSpaceAR(item.position);
        var viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);
        return viewPos;
    };
    /**获取列表数据 */
    newlist.prototype.getListData = function () {
        return this.itemDataList;
    };
    /**
     * 增加一项数据到列表的末尾
     * @param data 数据
     */
    newlist.prototype.addItem = function (data) {
        this.itemDataList.push(data);
        this.updateContent();
    };
    /**
     * 增加一项数据到列表指定位置
     * @param index   位置，0表示第1项
     * @param data  数据
     */
    newlist.prototype.addItemAt = function (index, data) {
        if (this.itemDataList[index] != null || this.itemDataList.length == index) {
            this.itemDataList.splice(index, 1, data);
            this.updateContent();
        }
    };
    /**
     * 删除一项数据
     * @param index 删除项的位置 ,0表示第1项
     */
    newlist.prototype.deleteItem = function (index) {
        if (this.itemDataList[index] != null) {
            this.itemDataList.splice(index, 1);
            this.updateContent();
        }
    };
    /**
     * 改变一项数据
     * @param index   位置,0表示第1项
     * @param data  替换的数据
     */
    newlist.prototype.changeItem = function (index, data) {
        if (this.itemDataList[index] != null) {
            this.itemDataList[index] = data;
            this.updateContent();
        }
    };
    /**获取第一个Item的位置 */
    newlist.prototype.updateContent = function () {
        //显示列表实例为0个
        if (this.itemList.length == 0) {
            this.countListParam();
            this.createList(0, new cc.Vec2(0, 0));
            //显示列表的实例不为0个，则需要重新排列item实例数组
        }
        else {
            if (this.type == ListType.Vertical) {
                this.itemList.sort(function (a, b) {
                    return b.y - a.y;
                });
            }
            else if (this.type == ListType.Horizontal) {
                this.itemList.sort(function (a, b) {
                    return a.x - b.x;
                });
            }
            else if (this.type == ListType.Grid) {
                if (this.startAxis == StartAxisType.Vertical) {
                    this.itemList.sort(function (a, b) {
                        return a.x - b.x;
                    });
                    this.itemList.sort(function (a, b) {
                        return b.y - a.y;
                    });
                }
                else if (this.startAxis == StartAxisType.Horizontal) {
                    this.itemList.sort(function (a, b) {
                        return b.y - a.y;
                    });
                    this.itemList.sort(function (a, b) {
                        return a.x - b.x;
                    });
                }
            }
            this.countListParam();
            //获取第一个item实例需要显示的数据索引
            var startIndex = this.itemList[0].getComponent(listItemRender_1.default).itemIndex;
            if (this.type == ListType.Grid && this.startAxis == StartAxisType.Vertical) {
                startIndex += (startIndex + this.spawnCount) % this.gridCol;
            }
            else if (this.type == ListType.Grid && this.startAxis == StartAxisType.Horizontal) {
                startIndex += (startIndex + this.spawnCount) % this.gridRow;
            }
            //getScrollOffset()和scrollToOffset()的x值是相反的
            var offset = this.scrollView.getScrollOffset();
            offset.x = -offset.x;
            this.createList(startIndex, offset);
        }
    };
    /**销毁 */
    newlist.prototype.onDestroy = function () {
        //清理列表项
        var len = this.itemList.length;
        for (var i = 0; i < len; i++) {
            if (cc.isValid(this.itemList[i], true)) {
                this.itemList[i].destroy();
            }
        }
        this.itemList.length = 0;
        //清理对象池
        len = this.itemPool.length;
        for (var i = 0; i < len; i++) {
            if (cc.isValid(this.itemPool[i], true)) {
                this.itemPool[i].destroy();
            }
        }
        this.itemPool.length = 0;
        //清理列表数据
        this.itemDataList.length = 0;
    };
    __decorate([
        property({ type: cc.Node, tooltip: "列表项" })
    ], newlist.prototype, "itemRender", void 0);
    __decorate([
        property({ type: cc.Enum(ListType), tooltip: "排列方式" })
    ], newlist.prototype, "type", void 0);
    __decorate([
        property({ type: cc.Enum(StartAxisType), tooltip: "网格布局中的方向", visible: function () { return this.type == ListType.Grid; } })
    ], newlist.prototype, "startAxis", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "列表项X间隔", visible: function () { return (this.type == ListType.Horizontal || this.type == ListType.Grid); } })
    ], newlist.prototype, "spaceX", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "列表项Y间隔", visible: function () { return this.type == ListType.Vertical || this.type == ListType.Grid; } })
    ], newlist.prototype, "spaceY", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "上间距", visible: function () { return (this.type == ListType.Vertical || this.type == ListType.Grid); } })
    ], newlist.prototype, "padding_top", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "下间距", visible: function () { return (this.type == ListType.Vertical || this.type == ListType.Grid); } })
    ], newlist.prototype, "padding_buttom", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "左间距", visible: function () { return (this.type == ListType.Horizontal || this.type == ListType.Grid); } })
    ], newlist.prototype, "padding_left", void 0);
    __decorate([
        property({ type: cc.Node, tooltip: "无数据时候的表现" })
    ], newlist.prototype, "none", void 0);
    __decorate([
        property(cc.Integer)
    ], newlist.prototype, "_padding", void 0);
    __decorate([
        property({ type: cc.Integer, tooltip: "右间距", visible: function () { return (this.type == ListType.Horizontal || this.type == ListType.Grid); } })
    ], newlist.prototype, "padding_right", void 0);
    newlist = __decorate([
        ccclass
    ], newlist);
    return newlist;
}(cc.Component));
exports.default = newlist;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxjb21wb25lbnRzXFxuZXdsaXN0XFxuZXdsaXN0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxvQkFBb0I7QUFDcEIsd0VBQXdFO0FBQ3hFLG1CQUFtQjtBQUNuQixrRkFBa0Y7QUFDbEYsOEJBQThCO0FBQzlCLGtGQUFrRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVsRiw4Q0FBeUM7QUFDekMsbURBQTZDO0FBRXZDLElBQUEsS0FBd0IsRUFBRSxDQUFDLFVBQVUsRUFBbkMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFrQixDQUFDO0FBRTVDLFlBQVk7QUFDWixJQUFZLFFBT1g7QUFQRCxXQUFZLFFBQVE7SUFDaEIsVUFBVTtJQUNWLG1EQUFjLENBQUE7SUFDZCxVQUFVO0lBQ1YsK0NBQVksQ0FBQTtJQUNaLFVBQVU7SUFDVix1Q0FBUSxDQUFBO0FBQ1osQ0FBQyxFQVBXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBT25CO0FBRUQsY0FBYztBQUNkLElBQVksYUFLWDtBQUxELFdBQVksYUFBYTtJQUNyQixVQUFVO0lBQ1YsNkRBQWMsQ0FBQTtJQUNkLFVBQVU7SUFDVix5REFBWSxDQUFBO0FBQ2hCLENBQUMsRUFMVyxhQUFhLEdBQWIscUJBQWEsS0FBYixxQkFBYSxRQUt4QjtBQUVEOzs7Ozs7O0dBT0c7QUFFSDtJQUFxQywyQkFBWTtJQUFqRDtRQUFBLHFFQWduQkM7UUE5bUJHLHFEQUFxRDtRQUNyRCxVQUFVO1FBRUgsZ0JBQVUsR0FBWSxJQUFJLENBQUM7UUFFbEMsVUFBVTtRQUVILFVBQUksR0FBYSxRQUFRLENBQUMsUUFBUSxDQUFDO1FBRTFDLGNBQWM7UUFFUCxlQUFTLEdBQWtCLGFBQWEsQ0FBQyxVQUFVLENBQUM7UUFFM0QsY0FBYztRQUVQLFlBQU0sR0FBVyxDQUFDLENBQUM7UUFFMUIsY0FBYztRQUVQLFlBQU0sR0FBVyxDQUFDLENBQUM7UUFFMUIs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QUMsSUFBSSxJQUFJLFFBQVEsQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUEsQ0FBQyxDQUFDLEVBQUUsQ0FBQztpREFDdEc7SUFJaEM7UUFEQyxRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLENBQUM7eUNBQ3JCO0lBRzVCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUM7NkNBQ087SUFJNUI7UUFEQyxRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sZ0JBQUssT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksUUFBUSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQSxDQUFDLENBQUMsRUFBRSxDQUFDO2tEQUNyRztJQTVDaEIsT0FBTztRQUQzQixPQUFPO09BQ2EsT0FBTyxDQWduQjNCO0lBQUQsY0FBQztDQWhuQkQsQUFnbkJDLENBaG5Cb0MsRUFBRSxDQUFDLFNBQVMsR0FnbkJoRDtrQkFobkJvQixPQUFPIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiLy8gTGVhcm4gVHlwZVNjcmlwdDpcclxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvdHlwZXNjcmlwdC5odG1sXHJcbi8vIExlYXJuIEF0dHJpYnV0ZTpcclxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvcmVmZXJlbmNlL2F0dHJpYnV0ZXMuaHRtbFxyXG4vLyBMZWFybiBsaWZlLWN5Y2xlIGNhbGxiYWNrczpcclxuLy8gIC0gaHR0cHM6Ly9kb2NzLmNvY29zLmNvbS9jcmVhdG9yL21hbnVhbC9lbi9zY3JpcHRpbmcvbGlmZS1jeWNsZS1jYWxsYmFja3MuaHRtbFxyXG5cclxuaW1wb3J0IExFdmVudCBmcm9tIFwiLi4vLi4vZXZlbnRzL0xFdmVudFwiO1xyXG5pbXBvcnQgbGlzdEl0ZW1SZW5kZXIgZnJvbSBcIi4vbGlzdEl0ZW1SZW5kZXJcIlxyXG5cclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbi8qKuWIl+ihqOaOkuWIl+aWueW8jyAqL1xyXG5leHBvcnQgZW51bSBMaXN0VHlwZSB7XHJcbiAgICAvKirmsLTlubPmjpLliJcgKi9cclxuICAgIEhvcml6b250YWwgPSAxLFxyXG4gICAgLyoq5Z6C55u05o6S5YiXICovXHJcbiAgICBWZXJ0aWNhbCA9IDIsXHJcbiAgICAvKirnvZHmoLzmjpLliJcgKi9cclxuICAgIEdyaWQgPSAzXHJcbn1cclxuXHJcbi8qKue9keagvOW4g+WxgOS4reeahOaWueWQkSAqL1xyXG5leHBvcnQgZW51bSBTdGFydEF4aXNUeXBlIHtcclxuICAgIC8qKuawtOW5s+aOkuWIlyAqL1xyXG4gICAgSG9yaXpvbnRhbCA9IDEsXHJcbiAgICAvKirlnoLnm7TmjpLliJcgKi9cclxuICAgIFZlcnRpY2FsID0gMixcclxufVxyXG5cclxuLyoqXHJcbiAqIOWIl+ihqFxyXG4gKiDmoLnmja5jb2Nvc19leGFtcGxl55qEbGlzdFZpZXfmlLnliqjogIzmnaVcclxuICogQGF1dGhvciBjaGVua2FpIDIwMjAuNy44XHJcbiAqIEBleGFtcGxlXHJcbiAqICAxLuWIm+W7umNvY29z55qEU2Nyb2xsVmlld+e7hOS7tu+8jOa3u+WKoExpc3TvvIzorr7nva5MaXN05bGe5oCn5Y2z5Y+vXHJcbiAqICBcclxuICovXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIG5ld2xpc3QgZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG5cclxuICAgIC8vPT09PT09PT09PT09PT09PT09PT0g5bGe5oCn6Z2i5p2/ID09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgIC8qKuWIl+ihqOmAiemhuSAqL1xyXG4gICAgQHByb3BlcnR5KHsgdHlwZTogY2MuTm9kZSwgdG9vbHRpcDogXCLliJfooajpoblcIiB9KVxyXG4gICAgcHVibGljIGl0ZW1SZW5kZXI6IGNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIC8qKuaOkuWIl+aWueW8jyAqL1xyXG4gICAgQHByb3BlcnR5KHsgdHlwZTogY2MuRW51bShMaXN0VHlwZSksIHRvb2x0aXA6IFwi5o6S5YiX5pa55byPXCIgfSlcclxuICAgIHB1YmxpYyB0eXBlOiBMaXN0VHlwZSA9IExpc3RUeXBlLlZlcnRpY2FsO1xyXG5cclxuICAgIC8qKue9keagvOW4g+WxgOS4reeahOaWueWQkSAqL1xyXG4gICAgQHByb3BlcnR5KHsgdHlwZTogY2MuRW51bShTdGFydEF4aXNUeXBlKSwgdG9vbHRpcDogXCLnvZHmoLzluIPlsYDkuK3nmoTmlrnlkJFcIiwgdmlzaWJsZSgpIHsgcmV0dXJuIHRoaXMudHlwZSA9PSBMaXN0VHlwZS5HcmlkIH0gfSlcclxuICAgIHB1YmxpYyBzdGFydEF4aXM6IFN0YXJ0QXhpc1R5cGUgPSBTdGFydEF4aXNUeXBlLkhvcml6b250YWw7XHJcblxyXG4gICAgLyoq5YiX6KGo6aG55LmL6Ze0WOmXtOmalCAqL1xyXG4gICAgQHByb3BlcnR5KHsgdHlwZTogY2MuSW50ZWdlciwgdG9vbHRpcDogXCLliJfooajpoblY6Ze06ZqUXCIsIHZpc2libGUoKSB7IHJldHVybiAodGhpcy50eXBlID09IExpc3RUeXBlLkhvcml6b250YWwgfHwgdGhpcy50eXBlID09IExpc3RUeXBlLkdyaWQpIH0gfSlcclxuICAgIHB1YmxpYyBzcGFjZVg6IG51bWJlciA9IDA7XHJcblxyXG4gICAgLyoq5YiX6KGo6aG55LmL6Ze0WemXtOmalCAqL1xyXG4gICAgQHByb3BlcnR5KHsgdHlwZTogY2MuSW50ZWdlciwgdG9vbHRpcDogXCLliJfooajpoblZ6Ze06ZqUXCIsIHZpc2libGUoKSB7IHJldHVybiB0aGlzLnR5cGUgPT0gTGlzdFR5cGUuVmVydGljYWwgfHwgdGhpcy50eXBlID09IExpc3RUeXBlLkdyaWQgfSB9KVxyXG4gICAgcHVibGljIHNwYWNlWTogbnVtYmVyID0gMDtcclxuXHJcbiAgICAvKirkuIrpl7Tot50gKi9cclxuICAgIEBwcm9wZXJ0eSh7IHR5cGU6IGNjLkludGVnZXIsIHRvb2x0aXA6IFwi5LiK6Ze06LedXCIsIHZpc2libGUoKSB7IHJldHVybiAodGhpcy50eXBlID09IExpc3RUeXBlLlZlcnRpY2FsIHx8IHRoaXMudHlwZSA9PSBMaXN0VHlwZS5HcmlkKSB9IH0pXHJcbiAgICBwdWJsaWMgcGFkZGluZ190b3A6IG51bWJlciA9IDA7XHJcblxyXG4gICAgLyoq5LiL6Ze06LedICovXHJcbiAgICBAcHJvcGVydHkoeyB0eXBlOiBjYy5JbnRlZ2VyLCB0b29sdGlwOiBcIuS4i+mXtOi3nVwiLCB2aXNpYmxlKCkgeyByZXR1cm4gKHRoaXMudHlwZSA9PSBMaXN0VHlwZS5WZXJ0aWNhbCB8fCB0aGlzLnR5cGUgPT0gTGlzdFR5cGUuR3JpZCkgfSB9KVxyXG4gICAgcHVibGljIHBhZGRpbmdfYnV0dG9tOiBudW1iZXIgPSAwO1xyXG5cclxuICAgIC8qKuW3pumXtOi3nSAqL1xyXG4gICAgQHByb3BlcnR5KHsgdHlwZTogY2MuSW50ZWdlciwgdG9vbHRpcDogXCLlt6bpl7Tot51cIiwgdmlzaWJsZSgpIHsgcmV0dXJuICh0aGlzLnR5cGUgPT0gTGlzdFR5cGUuSG9yaXpvbnRhbCB8fCB0aGlzLnR5cGUgPT0gTGlzdFR5cGUuR3JpZCkgfSB9KVxyXG4gICAgcHVibGljIHBhZGRpbmdfbGVmdDogbnVtYmVyID0gMDtcclxuXHJcbiAgICAvKirliJfooajpgInpobkgKi9cclxuICAgIEBwcm9wZXJ0eSh7IHR5cGU6IGNjLk5vZGUsIHRvb2x0aXA6IFwi5peg5pWw5o2u5pe25YCZ55qE6KGo546wXCIgfSlcclxuICAgIHB1YmxpYyBub25lOiBjYy5Ob2RlID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuSW50ZWdlcilcclxuICAgIHB1YmxpYyBfcGFkZGluZzogbnVtYmVyID0gMDtcclxuXHJcbiAgICAvKirlj7Ppl7Tot50gKi9cclxuICAgIEBwcm9wZXJ0eSh7IHR5cGU6IGNjLkludGVnZXIsIHRvb2x0aXA6IFwi5Y+z6Ze06LedXCIsIHZpc2libGUoKSB7IHJldHVybiAodGhpcy50eXBlID09IExpc3RUeXBlLkhvcml6b250YWwgfHwgdGhpcy50eXBlID09IExpc3RUeXBlLkdyaWQpIH0gfSlcclxuICAgIHB1YmxpYyBwYWRkaW5nX3JpZ2h0OiBudW1iZXIgPSAwO1xyXG5cclxuICAgIC8vPT09PT09PT09PT09PT09PT09PT09PSDmu5rliqjlrrnlmaggPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICAgLyoq5YiX6KGo5rua5Yqo5a655ZmoICovXHJcbiAgICBwdWJsaWMgc2Nyb2xsVmlldzogY2MuU2Nyb2xsVmlldyA9IG51bGw7XHJcbiAgICAvKipzY3JvbGxWaWV355qE5YaF5a655a655ZmoICovXHJcbiAgICBwcml2YXRlIGNvbnRlbnQ6IGNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIC8vPT09PT09PT09PT09PT09PT09PT09PT09IOWIl+ihqOmhuSA9PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgIC8qKuWIl+ihqOmhueaVsOaNriAqL1xyXG4gICAgcHJpdmF0ZSBpdGVtRGF0YUxpc3Q6IEFycmF5PGFueT4gPSBbXTtcclxuICAgIC8qKuW6lOWIm+W7uueahOWunuS+i+aVsOmHjyAqL1xyXG4gICAgcHJpdmF0ZSBzcGF3bkNvdW50OiBudW1iZXIgPSAwO1xyXG4gICAgLyoq5a2Y5pS+5YiX6KGo6aG55a6e5L6L55qE5pWw57uEICovXHJcbiAgICBwcml2YXRlIGl0ZW1MaXN0OiBBcnJheTxjYy5Ob2RlPiA9IFtdO1xyXG4gICAgLyoqaXRlbeeahOmrmOW6piAqL1xyXG4gICAgcHJpdmF0ZSBpdGVtSGVpZ2h0OiBudW1iZXIgPSAwO1xyXG4gICAgLyoqaXRlbeeahOWuveW6piAqL1xyXG4gICAgcHJpdmF0ZSBpdGVtV2lkdGg6IG51bWJlciA9IDA7XHJcbiAgICAvKirlrZjmlL7kuI3lho3kvb/nlKjkuK3nmoTliJfooajpobkgKi9cclxuICAgIHByaXZhdGUgaXRlbVBvb2w6IEFycmF5PGNjLk5vZGU+ID0gW107XHJcblxyXG4gICAgLy89PT09PT09PT09PT09PT09PT09PT09PSDorqHnrpflj4LmlbAgPT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgIC8qKui3neemu3Njcm9sbFZpZXfkuK3lv4PngrnnmoTot53nprvvvIzotoXov4fov5nkuKrot53nprvnmoRpdGVt5Lya6KKr6YeN572u77yM5LiA6Iis6K6+572u5Li6IHNjcm9sbFZJZXcuaGVpZ2h0LzIgKyBpdGVtLmhlaWd0LzIgKyBzcGFjZe+8jOWboOS4uui/meS4qui3neemu2l0ZW3mraPlpb3otoXlh7pzY3JvbGxWaWV35pi+56S66IyD5Zu0ICovXHJcbiAgICBwcml2YXRlIGhhbGZTY3JvbGxWaWV3OiBudW1iZXIgPSAwO1xyXG4gICAgLyoq5LiK5LiA5qyhY29udGVudOeahFjlgLzvvIznlKjkuo7lkoznjrDlnKhjb250ZW5055qEWOWAvOavlOi+g++8jOW+l+WHuuaYr+WQkeW3pui/mOaYr+WQkeWPs+a7muWKqCAqL1xyXG4gICAgcHJpdmF0ZSBsYXN0Q29udGVudFBvc1g6IG51bWJlciA9IDA7XHJcbiAgICAvKirkuIrkuIDmrKFjb250ZW5055qEWeWAvO+8jOeUqOS6juWSjOeOsOWcqGNvbnRlbnTnmoRZ5YC85q+U6L6D77yM5b6X5Ye65piv5ZCR5LiK6L+Y5piv5ZCR5LiL5rua5YqoICovXHJcbiAgICBwcml2YXRlIGxhc3RDb250ZW50UG9zWTogbnVtYmVyID0gMDtcclxuICAgIC8qKue9keagvOihjOaVsCAqL1xyXG4gICAgcHJpdmF0ZSBncmlkUm93OiBudW1iZXIgPSAwO1xyXG4gICAgLyoq572R5qC85YiX5pWwICovXHJcbiAgICBwcml2YXRlIGdyaWRDb2w6IG51bWJlciA9IDA7XHJcbiAgICAvKirliLfmlrDml7bpl7TvvIzljZXkvY1zICovXHJcbiAgICBwcml2YXRlIHVwZGF0ZVRpbWVyOiBudW1iZXIgPSAwO1xyXG4gICAgLyoq5Yi35paw6Ze06ZqU77yM5Y2V5L2NcyAqL1xyXG4gICAgcHJpdmF0ZSB1cGRhdGVJbnRlcnZhbDogbnVtYmVyID0gMC4xO1xyXG4gICAgLyoq5piv5ZCm5rua5Yqo5a655ZmoICovXHJcbiAgICBwcml2YXRlIGJTY3JvbGxpbmc6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIC8qKuWIt+aWsOeahOWHveaVsCAqL1xyXG4gICAgcHJpdmF0ZSB1cGRhdGVGdW46IEZ1bmN0aW9uID0gZnVuY3Rpb24gKCkgeyB9O1xyXG5cclxuICAgIHByaXZhdGUgX3NlbGVjdGVkSXRlbTogYW55O1xyXG4gICAgcHJpdmF0ZSBfc2VsZWN0ZWRJbmRleDogYW55O1xyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIHRoaXMuaXRlbUhlaWdodCA9IHRoaXMuaXRlbVJlbmRlci5oZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5pdGVtV2lkdGggPSB0aGlzLml0ZW1SZW5kZXIud2lkdGg7XHJcbiAgICAgICAgdGhpcy5zY3JvbGxWaWV3ID0gdGhpcy5ub2RlLmdldENvbXBvbmVudChjYy5TY3JvbGxWaWV3KTtcclxuICAgICAgICB0aGlzLmNvbnRlbnQgPSB0aGlzLnNjcm9sbFZpZXcuY29udGVudDtcclxuICAgICAgICB0aGlzLmNvbnRlbnQuYW5jaG9yWCA9IDA7XHJcbiAgICAgICAgdGhpcy5jb250ZW50LmFuY2hvclkgPSAxO1xyXG4gICAgICAgIHRoaXMuY29udGVudC5yZW1vdmVBbGxDaGlsZHJlbigpO1xyXG4gICAgICAgIHRoaXMuc2Nyb2xsVmlldy5ub2RlLm9uKFwic2Nyb2xsaW5nXCIsIHRoaXMub25TY3JvbGxpbmcsIHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5YiX6KGo5pWw5o2uICjliJfooajmlbDmja7lpI3liLbkvb/nlKjvvIzlpoLmnpzliJfooajmlbDmja7mlLnlj5jvvIzliJnpnIDopoHph43mlrDorr7nva7kuIDpgY3mlbDmja4pXHJcbiAgICAgKiBAcGFyYW0gaXRlbURhdGFMaXN0IGl0ZW3mlbDmja7liJfooahcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldERhdGEoaXRlbURhdGFMaXN0OiBBcnJheTxhbnk+KSB7XHJcbiAgICAgICAgaWYgKGl0ZW1EYXRhTGlzdCAmJiBpdGVtRGF0YUxpc3QubGVuZ3RoIDwgMSkge1xyXG4gICAgICAgICAgICB0aGlzLm9uRGVzdHJveSgpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLm5vbmUpIHRoaXMubm9uZS5hY3RpdmUgPSAoaXRlbURhdGFMaXN0Lmxlbmd0aCA9PSAwKTtcclxuICAgICAgICB0aGlzLml0ZW1EYXRhTGlzdCA9IGl0ZW1EYXRhTGlzdC5zbGljZSgpO1xyXG4gICAgICAgIHRoaXMudXBkYXRlQ29udGVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuiuoeeul+WIl+ihqOeahOWQhOmhueWPguaVsCAqL1xyXG4gICAgcHJpdmF0ZSBjb3VudExpc3RQYXJhbSgpIHtcclxuICAgICAgICBsZXQgZGF0YUxlbiA9IHRoaXMuaXRlbURhdGFMaXN0Lmxlbmd0aDtcclxuICAgICAgICBpZiAodGhpcy50eXBlID09IExpc3RUeXBlLlZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2Nyb2xsVmlldy5ob3Jpem9udGFsID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuc2Nyb2xsVmlldy52ZXJ0aWNhbCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGVudC53aWR0aCA9IHRoaXMuY29udGVudC5wYXJlbnQud2lkdGg7XHJcbiAgICAgICAgICAgIHRoaXMuY29udGVudC5oZWlnaHQgPSBkYXRhTGVuICogdGhpcy5pdGVtSGVpZ2h0ICsgKGRhdGFMZW4gLSAxKSAqIHRoaXMuc3BhY2VZICsgdGhpcy5wYWRkaW5nX3RvcCArIHRoaXMucGFkZGluZ19idXR0b207XHJcbiAgICAgICAgICAgIHRoaXMuc3Bhd25Db3VudCA9IE1hdGgucm91bmQodGhpcy5zY3JvbGxWaWV3Lm5vZGUuaGVpZ2h0IC8gKHRoaXMuaXRlbUhlaWdodCArIHRoaXMuc3BhY2VZKSkgKyAyOyAvL+iuoeeul+WIm+W7uueahGl0ZW3lrp7kvovmlbDph4/vvIzmr5TlvZPliY1zY3JvbGxWaWV35a655Zmo6IO95pS+5LiL55qEaXRlbeaVsOmHj+WGjeWKoOS4ijLkuKpcclxuICAgICAgICAgICAgdGhpcy5oYWxmU2Nyb2xsVmlldyA9IHRoaXMuc2Nyb2xsVmlldy5ub2RlLmhlaWdodCAvIDIgKyB0aGlzLml0ZW1IZWlnaHQgLyAyICsgdGhpcy5zcGFjZVk7IC8v6K6h566XYnVmZmVyWm9uZe+8jGl0ZW3nmoTmmL7npLrojIPlm7RcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVGdW4gPSB0aGlzLnVwZGF0ZVY7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnR5cGUgPT0gTGlzdFR5cGUuSG9yaXpvbnRhbCkge1xyXG4gICAgICAgICAgICB0aGlzLnNjcm9sbFZpZXcuaG9yaXpvbnRhbCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuc2Nyb2xsVmlldy52ZXJ0aWNhbCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRlbnQud2lkdGggPSBkYXRhTGVuICogdGhpcy5pdGVtV2lkdGggKyAoZGF0YUxlbiAtIDEpICogdGhpcy5zcGFjZVggKyB0aGlzLnBhZGRpbmdfbGVmdCArIHRoaXMucGFkZGluZ19yaWdodDtcclxuICAgICAgICAgICAgdGhpcy5jb250ZW50LmhlaWdodCA9IHRoaXMuY29udGVudC5wYXJlbnQuaGVpZ2h0O1xyXG4gICAgICAgICAgICB0aGlzLnNwYXduQ291bnQgPSBNYXRoLnJvdW5kKHRoaXMuc2Nyb2xsVmlldy5ub2RlLndpZHRoIC8gKHRoaXMuaXRlbVdpZHRoICsgdGhpcy5zcGFjZVgpKSArIDI7XHJcbiAgICAgICAgICAgIHRoaXMuaGFsZlNjcm9sbFZpZXcgPSB0aGlzLnNjcm9sbFZpZXcubm9kZS53aWR0aCAvIDIgKyB0aGlzLml0ZW1XaWR0aCAvIDIgKyB0aGlzLnNwYWNlWDtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVGdW4gPSB0aGlzLnVkcGF0ZUg7XHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLnR5cGUgPT0gTGlzdFR5cGUuR3JpZCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zdGFydEF4aXMgPT0gU3RhcnRBeGlzVHlwZS5WZXJ0aWNhbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zY3JvbGxWaWV3Lmhvcml6b250YWwgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsVmlldy52ZXJ0aWNhbCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnQud2lkdGggPSB0aGlzLmNvbnRlbnQucGFyZW50LndpZHRoO1xyXG4gICAgICAgICAgICAgICAgLy/lpoLmnpxsZWZ05ZKMcmlnaHTpl7TpmpTov4flpKfvvIzlr7zoh7TmlL7kuI3kuIvkuIDkuKppdGVt77yM5YiZbGVmdOWSjHJpZ2h06YO96K6+572u5Li6MO+8jOebuOW9k+S6juS4jeeUn+aViFxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucGFkZGluZ19sZWZ0ICsgdGhpcy5wYWRkaW5nX3JpZ2h0ICsgdGhpcy5pdGVtV2lkdGggKyB0aGlzLnNwYWNlWCA+IHRoaXMuY29udGVudC53aWR0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFkZGluZ19sZWZ0ID0gMDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZGRpbmdfcmlnaHQgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJwYWRkaW5nX2xlZnTmiJZwYWRkaW5nX3JpZ2h06L+H5aSnXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgIHRoaXMuZ3JpZENvbCA9IE1hdGguZmxvb3IoKHRoaXMuY29udGVudC53aWR0aCAtIHRoaXMucGFkZGluZ19sZWZ0IC0gdGhpcy5wYWRkaW5nX3JpZ2h0KSAvICh0aGlzLml0ZW1XaWR0aCArIHRoaXMuc3BhY2VYKSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmdyaWRSb3cgPSBNYXRoLmNlaWwoZGF0YUxlbiAvIHRoaXMuZ3JpZENvbCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRlbnQuaGVpZ2h0ID0gdGhpcy5ncmlkUm93ICogdGhpcy5pdGVtSGVpZ2h0ICsgKHRoaXMuZ3JpZFJvdyAtIDEpICogdGhpcy5zcGFjZVkgKyB0aGlzLnBhZGRpbmdfdG9wICsgdGhpcy5wYWRkaW5nX2J1dHRvbTtcclxuICAgICAgICAgICAgICAgIHRoaXMuc3Bhd25Db3VudCA9IE1hdGgucm91bmQodGhpcy5zY3JvbGxWaWV3Lm5vZGUuaGVpZ2h0IC8gKHRoaXMuaXRlbUhlaWdodCArIHRoaXMuc3BhY2VZKSkgKiB0aGlzLmdyaWRDb2wgKyB0aGlzLmdyaWRDb2wgKiAyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oYWxmU2Nyb2xsVmlldyA9IHRoaXMuc2Nyb2xsVmlldy5ub2RlLmhlaWdodCAvIDIgKyB0aGlzLml0ZW1IZWlnaHQgLyAyICsgdGhpcy5zcGFjZVk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnVwZGF0ZUZ1biA9IHRoaXMudXBkYXRlR3JpZF9WO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuc3RhcnRBeGlzID09IFN0YXJ0QXhpc1R5cGUuSG9yaXpvbnRhbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zY3JvbGxWaWV3Lmhvcml6b250YWwgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zY3JvbGxWaWV3LnZlcnRpY2FsID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAvL+iuoeeul+mrmOmXtOmalFxyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZW50LmhlaWdodCA9IHRoaXMuY29udGVudC5wYXJlbnQuaGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgLy/lpoLmnpxsZWZ05ZKMcmlnaHTpl7TpmpTov4flpKfvvIzlr7zoh7TmlL7kuI3kuIvkuIDkuKppdGVt77yM5YiZbGVmdOWSjHJpZ2h06YO96K6+572u5Li6MO+8jOebuOW9k+S6juS4jeeUn+aViFxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucGFkZGluZ190b3AgKyB0aGlzLnBhZGRpbmdfYnV0dG9tICsgdGhpcy5pdGVtSGVpZ2h0ICsgdGhpcy5zcGFjZVkgPiB0aGlzLmNvbnRlbnQuaGVpZ2h0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWRkaW5nX3RvcCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWRkaW5nX2J1dHRvbSA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcInBhZGRpbmdfdG9w5oiWcGFkZGluZ19idXR0b23ov4flpKdcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5ncmlkUm93ID0gTWF0aC5mbG9vcigodGhpcy5jb250ZW50LmhlaWdodCAtIHRoaXMucGFkZGluZ190b3AgLSB0aGlzLnBhZGRpbmdfYnV0dG9tKSAvICh0aGlzLml0ZW1IZWlnaHQgKyB0aGlzLnNwYWNlWSkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ncmlkQ29sID0gTWF0aC5jZWlsKGRhdGFMZW4gLyB0aGlzLmdyaWRSb3cpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZW50LndpZHRoID0gdGhpcy5ncmlkQ29sICogdGhpcy5pdGVtV2lkdGggKyAodGhpcy5ncmlkQ29sIC0gMSkgKiB0aGlzLnNwYWNlWCArIHRoaXMucGFkZGluZ19sZWZ0ICsgdGhpcy5wYWRkaW5nX3JpZ2h0O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zcGF3bkNvdW50ID0gTWF0aC5yb3VuZCh0aGlzLnNjcm9sbFZpZXcubm9kZS53aWR0aCAvICh0aGlzLml0ZW1XaWR0aCArIHRoaXMuc3BhY2VYKSkgKiB0aGlzLmdyaWRSb3cgKyB0aGlzLmdyaWRSb3cgKiAyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oYWxmU2Nyb2xsVmlldyA9IHRoaXMuc2Nyb2xsVmlldy5ub2RlLndpZHRoIC8gMiArIHRoaXMuaXRlbVdpZHRoIC8gMiArIHRoaXMuc3BhY2VYO1xyXG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVGdW4gPSB0aGlzLnVwZGF0ZUdyaWRfSDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWIm+W7uuWIl+ihqCBcclxuICAgICAqIEBwYXJhbSBzdGFydEluZGV4IOi1t+Wni+aYvuekuueahOaVsOaNrue0ouW8lSAw6KGo56S656ys5LiA6aG5XHJcbiAgICAgKiBAcGFyYW0gb2Zmc2V0ICAgICBzY3JvbGxWaWV35YGP56e76YePXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgY3JlYXRlTGlzdChzdGFydEluZGV4OiBudW1iZXIsIG9mZnNldDogY2MuVmVjMikge1xyXG4gICAgICAgIC8v5b2T6ZyA6KaB5pi+56S655qE5pWw5o2u6ZW/5bqmID4g6Jma5ouf5YiX6KGo6ZW/5bqm77yMIOWIoOmZpOacgOacq+WwvuWHoOS4quaVsOaNruaXtu+8jOWIl+ihqOmcgOimgemHjee9ruS9jee9ruWIsHNjcm9sbFZpZXfmnIDlupXnq69cclxuICAgICAgICBpZiAodGhpcy5pdGVtRGF0YUxpc3QubGVuZ3RoID4gdGhpcy5zcGF3bkNvdW50ICYmIChzdGFydEluZGV4ICsgdGhpcy5zcGF3bkNvdW50IC0gMSkgPj0gdGhpcy5pdGVtRGF0YUxpc3QubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHN0YXJ0SW5kZXggPSB0aGlzLml0ZW1EYXRhTGlzdC5sZW5ndGggLSB0aGlzLnNwYXduQ291bnQ7XHJcbiAgICAgICAgICAgIG9mZnNldCA9IHRoaXMuc2Nyb2xsVmlldy5nZXRNYXhTY3JvbGxPZmZzZXQoKTtcclxuXHJcbiAgICAgICAgICAgIC8v5b2T6ZyA6KaB5pi+56S655qE5pWw5o2u6ZW/5bqmIDw9IOiZmuaLn+WIl+ihqOmVv+W6pu+8jCDpmpDol4/lpJrkvZnnmoTomZrmi5/liJfooajpobkgXHJcbiAgICAgICAgfSBlbHNlIGlmICh0aGlzLml0ZW1EYXRhTGlzdC5sZW5ndGggPD0gdGhpcy5zcGF3bkNvdW50KSB7XHJcbiAgICAgICAgICAgIHN0YXJ0SW5kZXggPSAwO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNwYXduQ291bnQ7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgaXRlbTogY2MuTm9kZTtcclxuICAgICAgICAgICAgLy/pnIDopoHmmL7npLrnmoTmlbDmja7ntKLlvJXlnKjmlbDmja7ojIPlm7TlhoXvvIzliJlpdGVt5a6e5L6L5pi+56S65Ye65p2lXHJcbiAgICAgICAgICAgIGlmIChpICsgc3RhcnRJbmRleCA8IHRoaXMuaXRlbURhdGFMaXN0Lmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuaXRlbUxpc3RbaV0gPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0gPSB0aGlzLmdldEl0ZW0oKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1MaXN0LnB1c2goaXRlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5wYXJlbnQgPSB0aGlzLmNvbnRlbnQ7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0gPSB0aGlzLml0ZW1MaXN0W2ldO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy/pnIDopoHmmL7npLrnmoTmlbDmja7ntKLlvJXotoXov4fkuobmlbDmja7ojIPlm7TvvIzliJlpdGVt5a6e5L6L6ZqQ6JeP6LW35p2lXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAvL2l0ZW3lrp7kvovmlbDph48gPiDpnIDopoHmmL7npLrnmoTmlbDmja7ph49cclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLml0ZW1MaXN0Lmxlbmd0aCA+ICh0aGlzLml0ZW1EYXRhTGlzdC5sZW5ndGggLSBzdGFydEluZGV4KSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0gPSB0aGlzLml0ZW1MaXN0LnBvcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0ucmVtb3ZlRnJvbVBhcmVudCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbVBvb2wucHVzaChpdGVtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsZXQgaXRlbVJlbmRlcjogbGlzdEl0ZW1SZW5kZXIgPSBpdGVtLmdldENvbXBvbmVudChsaXN0SXRlbVJlbmRlcik7XHJcbiAgICAgICAgICAgIGl0ZW1SZW5kZXIuaXRlbUluZGV4ID0gaSArIHN0YXJ0SW5kZXg7XHJcbiAgICAgICAgICAgIGl0ZW1SZW5kZXIuZGF0YSA9IHRoaXMuaXRlbURhdGFMaXN0W2kgKyBzdGFydEluZGV4XTtcclxuICAgICAgICAgICAgaXRlbVJlbmRlci5kYXRhQ2hhbmdlZCgpO1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMudHlwZSA9PSBMaXN0VHlwZS5WZXJ0aWNhbCkge1xyXG4gICAgICAgICAgICAgICAgLy/lm6DkuLpjb250ZW5055qE6ZSa54K5WOaYrzDvvIzmiYDku6VpdGVt55qEeOWAvOaYr2NvbnRlbnQud2l0aC8y6KGo56S65bGF5Lit77yM6ZSa54K5WeaYrzHvvIzmiYDku6VpdGVt55qEeeWAvOS7jmNvbnRlbnTpobbpg6jlkJHkuIvmmK8w5Yiw6LSf5peg56m344CC5omA5LulaXRlbS55PSAtaXRlbS5oZWlnaHQvMuaXtu+8jOaYr+WcqGNvbnRlbnTnmoTpobbpg6jjgIJcclxuICAgICAgICAgICAgICAgIGl0ZW0uc2V0UG9zaXRpb24odGhpcy5jb250ZW50LndpZHRoIC8gMiwgLWl0ZW0uaGVpZ2h0ICogKDAuNSArIGkgKyBzdGFydEluZGV4KSAtIHRoaXMuc3BhY2VZICogKGkgKyBzdGFydEluZGV4KSAtIHRoaXMucGFkZGluZ190b3ApO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMudHlwZSA9PSBMaXN0VHlwZS5Ib3Jpem9udGFsKSB7XHJcbiAgICAgICAgICAgICAgICBpdGVtLnNldFBvc2l0aW9uKGl0ZW0ud2lkdGggKiAoMC41ICsgaSArIHN0YXJ0SW5kZXgpICsgdGhpcy5zcGFjZVggKiAoaSArIHN0YXJ0SW5kZXgpICsgdGhpcy5wYWRkaW5nX2xlZnQsIC10aGlzLmNvbnRlbnQuaGVpZ2h0IC8gMik7XHJcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy50eXBlID09IExpc3RUeXBlLkdyaWQpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0YXJ0QXhpcyA9PSBTdGFydEF4aXNUeXBlLlZlcnRpY2FsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHJvdyA9IE1hdGguZmxvb3IoKGkgKyBzdGFydEluZGV4KSAvIHRoaXMuZ3JpZENvbCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGNvbCA9IChpICsgc3RhcnRJbmRleCkgJSB0aGlzLmdyaWRDb2w7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5zZXRQb3NpdGlvbihpdGVtLndpZHRoICogKDAuNSArIGNvbCkgKyB0aGlzLnNwYWNlWCAqIGNvbCArIHRoaXMucGFkZGluZ19sZWZ0LCAtaXRlbS5oZWlnaHQgKiAoMC41ICsgcm93KSAtIHRoaXMuc3BhY2VZICogcm93IC0gdGhpcy5wYWRkaW5nX3RvcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnN0YXJ0QXhpcyA9PSBTdGFydEF4aXNUeXBlLkhvcml6b250YWwpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcm93ID0gKGkgKyBzdGFydEluZGV4KSAlIHRoaXMuZ3JpZFJvdztcclxuICAgICAgICAgICAgICAgICAgICB2YXIgY29sID0gTWF0aC5mbG9vcigoaSArIHN0YXJ0SW5kZXgpIC8gdGhpcy5ncmlkUm93KTtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtLnNldFBvc2l0aW9uKGl0ZW0ud2lkdGggKiAoMC41ICsgY29sKSArIHRoaXMuc3BhY2VYICogY29sICsgdGhpcy5wYWRkaW5nX2xlZnQsIC1pdGVtLmhlaWdodCAqICgwLjUgKyByb3cpIC0gdGhpcy5zcGFjZVkgKiByb3cgLSB0aGlzLnBhZGRpbmdfdG9wKTtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtLm9wYWNpdHkgPSAyNTU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuc2Nyb2xsVmlldy5zY3JvbGxUb09mZnNldChvZmZzZXQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuiOt+WPluS4gOS4quWIl+ihqOmhuSAqL1xyXG4gICAgcHJpdmF0ZSBnZXRJdGVtKCkge1xyXG4gICAgICAgIGlmICh0aGlzLml0ZW1Qb29sLmxlbmd0aCA9PSAwKSB7XHJcbiAgICAgICAgICAgIGxldCBpdGVtOiBjYy5Ob2RlID0gY2MuaW5zdGFudGlhdGUodGhpcy5pdGVtUmVuZGVyKVxyXG4gICAgICAgICAgICBpdGVtLm9uKGNjLk5vZGUuRXZlbnRUeXBlLlRPVUNIX0VORCwgdGhpcy5pdGVtQ2xpY2tIYW5kbGVyLCB0aGlzKTtcclxuICAgICAgICAgICAgcmV0dXJuIGl0ZW07XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaXRlbVBvb2wucG9wKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBpdGVtQ2xpY2tIYW5kbGVyKGV2ZW50OiBjYy5FdmVudCkge1xyXG4gICAgICAgIGxldCBpdGVtID0gKGV2ZW50LmN1cnJlbnRUYXJnZXQgYXMgY2MuTm9kZSkuZ2V0Q29tcG9uZW50KGxpc3RJdGVtUmVuZGVyKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIml0ZW1DbGlja0hhbmRsZXIgXCIsIGl0ZW0uaXRlbUluZGV4KTtcclxuICAgICAgICB0aGlzLl9zZWxlY3RlZEl0ZW0gPSBpdGVtLmRhdGE7XHJcbiAgICAgICAgdGhpcy5fc2VsZWN0ZWRJbmRleCA9IGl0ZW0uaXRlbUluZGV4O1xyXG4gICAgICAgIHRoaXMubm9kZS5kaXNwYXRjaEV2ZW50KG5ldyBMRXZlbnQoTEV2ZW50LklURU1fQ0xJQ0ssIGl0ZW0uaXRlbUluZGV4KSlcclxuICAgIH1cclxuICAgIC8qKuiOt+WPlumAieS4reeahOinhuWbviovXHJcbiAgICBwdWJsaWMgZ2V0U2VsZWN0ZWRJdGVtcmFuZGVyKCk6IGNjLk5vZGUge1xyXG4gICAgICAgIGlmICh0aGlzLl9zZWxlY3RlZEluZGV4IDwgMCkgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgbGV0IGl0ZW1SOiBsaXN0SXRlbVJlbmRlcjtcclxuICAgICAgICBmb3IgKGxldCBpdGVtIG9mIHRoaXMuY29udGVudC5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICBpdGVtUiA9IGl0ZW0uZ2V0Q29tcG9uZW50KGxpc3RJdGVtUmVuZGVyKTtcclxuICAgICAgICAgICAgaWYgKGl0ZW1SICYmIGl0ZW1SLml0ZW1JbmRleCA9PSB0aGlzLnNlbGVjdGVkSW5kZXgpIHJldHVybiBpdGVtO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIHB1YmxpYyBnZXQgc2VsZWN0ZWRJbmRleCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9zZWxlY3RlZEluZGV4O1xyXG4gICAgfVxyXG4gICAgcHVibGljIGdldCBzZWxlY3RlZEl0ZW0oKTogYW55IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc2VsZWN0ZWRJdGVtO1xyXG4gICAgfVxyXG4gICAgdXBkYXRlKGR0KSB7XHJcbiAgICAgICAgaWYgKHRoaXMuYlNjcm9sbGluZyA9PSBmYWxzZSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMudXBkYXRlVGltZXIgKz0gZHQ7XHJcbiAgICAgICAgaWYgKHRoaXMudXBkYXRlVGltZXIgPCB0aGlzLnVwZGF0ZUludGVydmFsKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy51cGRhdGVUaW1lciA9IDA7XHJcbiAgICAgICAgdGhpcy5iU2Nyb2xsaW5nID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy51cGRhdGVGdW4oKTtcclxuICAgIH1cclxuXHJcbiAgICBvblNjcm9sbGluZygpIHtcclxuICAgICAgICB0aGlzLmJTY3JvbGxpbmcgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIC8qKuWeguebtOaOkuWIlyAqL1xyXG4gICAgLy8gcHJpdmF0ZSB1cGRhdGVWKCkge1xyXG4gICAgLy8gICAgIGxldCBpdGVtcyA9IHRoaXMuaXRlbUxpc3Q7XHJcbiAgICAvLyAgICAgbGV0IGl0ZW07XHJcbiAgICAvLyAgICAgbGV0IGJ1ZmZlclpvbmUgPSB0aGlzLmhhbGZTY3JvbGxWaWV3O1xyXG4gICAgLy8gICAgIGxldCBpc1VwID0gdGhpcy5zY3JvbGxWaWV3LmNvbnRlbnQueSA+IHRoaXMubGFzdENvbnRlbnRQb3NZO1xyXG4gICAgLy8gICAgIGxldCBvZmZzZXQgPSAodGhpcy5pdGVtSGVpZ2h0ICsgdGhpcy5zcGFjZVkpICogaXRlbXMubGVuZ3RoO1xyXG4gICAgLy8gICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgIC8vICAgICAgICAgaXRlbSA9IGl0ZW1zW2ldO1xyXG4gICAgLy8gICAgICAgICBsZXQgdmlld1BvcyA9IHRoaXMuZ2V0UG9zaXRpb25JblZpZXcoaXRlbSk7XHJcbiAgICAvLyAgICAgICAgIGlmIChpc1VwKSB7XHJcbiAgICAvLyAgICAgICAgICAgICAvL2l0ZW3kuIrmu5Hml7bvvIzotoXlh7rkuoZzY3JvbGxWaWV35LiK6L6555WM77yM5bCGaXRlbeenu+WKqOWIsOS4i+aWueWkjeeUqO+8jGl0ZW3np7vliqjliLDkuIvmlrnnmoTkvY3nva7lv4XpobvkuI3otoXov4djb250ZW5055qE5LiL6L6555WMXHJcbiAgICAvLyAgICAgICAgICAgICBpZiAodmlld1Bvcy55ID4gYnVmZmVyWm9uZSAmJiBpdGVtLnkgLSBvZmZzZXQgLSB0aGlzLnBhZGRpbmdfYnV0dG9tID4gLXRoaXMuY29udGVudC5oZWlnaHQpIHtcclxuICAgIC8vICAgICAgICAgICAgICAgICBsZXQgaXRlbVJlbmRlcjogbGlzdEl0ZW1SZW5kZXIgPSBpdGVtLmdldENvbXBvbmVudChsaXN0SXRlbVJlbmRlcik7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgbGV0IGl0ZW1JbmRleCA9IGl0ZW1SZW5kZXIuaXRlbUluZGV4ICsgaXRlbXMubGVuZ3RoO1xyXG4gICAgLy8gICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuaXRlbUluZGV4ID0gaXRlbUluZGV4O1xyXG4gICAgLy8gICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuZGF0YSA9IHRoaXMuaXRlbURhdGFMaXN0W2l0ZW1JbmRleF07XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgaXRlbVJlbmRlci5kYXRhQ2hhbmdlZCgpO1xyXG4gICAgLy8gICAgICAgICAgICAgICAgIGl0ZW0ueSA9IGl0ZW0ueSAtIG9mZnNldDtcclxuICAgIC8vICAgICAgICAgICAgIH1cclxuICAgIC8vICAgICAgICAgfSBlbHNlIHtcclxuICAgIC8vICAgICAgICAgICAgIC8vaXRlbeS4i+a7keaXtu+8jOi2heWHuuS6hnNjcm9sbFZpZXfkuIvovrnnlYzvvIzlsIZpdGVt56e75Yqo5Yiw5LiK5pa55aSN55So77yMaXRlbeenu+WKqOWIsOS4iuaWueeahOS9jee9ruW/hemhu+S4jei2hei/h2NvbnRlbnTnmoTkuIrovrnnlYxcclxuICAgIC8vICAgICAgICAgICAgIGlmICh2aWV3UG9zLnkgPCAtYnVmZmVyWm9uZSAmJiBpdGVtLnkgKyBvZmZzZXQgKyB0aGlzLnBhZGRpbmdfdG9wIDwgMCkge1xyXG4gICAgLy8gICAgICAgICAgICAgICAgIGxldCBpdGVtUmVuZGVyOiBsaXN0SXRlbVJlbmRlciA9IGl0ZW0uZ2V0Q29tcG9uZW50KGxpc3RJdGVtUmVuZGVyKTtcclxuICAgIC8vICAgICAgICAgICAgICAgICBsZXQgaXRlbUluZGV4ID0gaXRlbVJlbmRlci5pdGVtSW5kZXggLSBpdGVtcy5sZW5ndGg7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgaXRlbVJlbmRlci5pdGVtSW5kZXggPSBpdGVtSW5kZXg7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgaXRlbVJlbmRlci5kYXRhID0gdGhpcy5pdGVtRGF0YUxpc3RbaXRlbUluZGV4XTtcclxuICAgIC8vICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLmRhdGFDaGFuZ2VkKCk7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgaXRlbS55ID0gaXRlbS55ICsgb2Zmc2V0O1xyXG4gICAgLy8gICAgICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICAgIHRoaXMubGFzdENvbnRlbnRQb3NZID0gdGhpcy5zY3JvbGxWaWV3LmNvbnRlbnQueTtcclxuICAgIC8vIH1cclxuICAgIHByaXZhdGUgdXBkYXRlVigpIHtcclxuICAgICAgICBsZXQgaXRlbXMgPSB0aGlzLml0ZW1MaXN0O1xyXG4gICAgICAgIGxldCBpdGVtO1xyXG4gICAgICAgIGxldCBidWZmZXJab25lID0gdGhpcy5oYWxmU2Nyb2xsVmlldztcclxuICAgICAgICBsZXQgaXNVcCA9IHRoaXMuc2Nyb2xsVmlldy5jb250ZW50LnkgPiB0aGlzLmxhc3RDb250ZW50UG9zWTtcclxuICAgICAgICBsZXQgb2Zmc2V0ID0gKHRoaXMuaXRlbUhlaWdodCArIHRoaXMuc3BhY2VZKSAqIGl0ZW1zLmxlbmd0aDtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGl0ZW0gPSBpdGVtc1tpXTtcclxuICAgICAgICAgICAgbGV0IHZpZXdQb3MgPSB0aGlzLmdldFBvc2l0aW9uSW5WaWV3KGl0ZW0pO1xyXG4gICAgICAgICAgICBpZiAoaXNVcCkge1xyXG4gICAgICAgICAgICAgICAgLy9pdGVt5LiK5ruR5pe277yM6LaF5Ye65LqGc2Nyb2xsVmlld+S4iui+ueeVjO+8jOWwhml0ZW3np7vliqjliLDkuIvmlrnlpI3nlKjvvIxpdGVt56e75Yqo5Yiw5LiL5pa555qE5L2N572u5b+F6aG75LiN6LaF6L+HY29udGVudOeahOS4i+i+ueeVjFxyXG4gICAgICAgICAgICAgICAgaWYgKHZpZXdQb3MueSA+IGJ1ZmZlclpvbmUgJiYgaXRlbS55IC0gb2Zmc2V0IC0gdGhpcy5wYWRkaW5nX2J1dHRvbSA+IC10aGlzLmNvbnRlbnQuaGVpZ2h0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGl0ZW1SZW5kZXI6IGxpc3RJdGVtUmVuZGVyID0gaXRlbS5nZXRDb21wb25lbnQobGlzdEl0ZW1SZW5kZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBpdGVtSW5kZXggPSBpdGVtUmVuZGVyLml0ZW1JbmRleCArIGl0ZW1zLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLml0ZW1JbmRleCA9IGl0ZW1JbmRleDtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLmRhdGEgPSB0aGlzLml0ZW1EYXRhTGlzdFtpdGVtSW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuZGF0YS5pbmRleCA9IGl0ZW1JbmRleDtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLmRhdGFDaGFuZ2VkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS55ID0gaXRlbS55IC0gb2Zmc2V0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICAgICAgICAgIC8vaXRlbeS4i+a7keaXtu+8jOi2heWHuuS6hnNjcm9sbFZpZXfkuIvovrnnlYzvvIzlsIZpdGVt56e75Yqo5Yiw5LiK5pa55aSN55So77yMaXRlbeenu+WKqOWIsOS4iuaWueeahOS9jee9ruW/hemhu+S4jei2hei/h2NvbnRlbnTnmoTkuIrovrnnlYxcclxuICAgICAgICAgICAgICAgIGlmICh2aWV3UG9zLnkgKyBpdGVtLmhlaWdodCA8IC1idWZmZXJab25lICYmIGl0ZW0ueSArIG9mZnNldCArIHRoaXMucGFkZGluZ190b3AgPCAwKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6LaF5Ye65LqGc2Nyb2xsVmlld+S4i+i+ueeVjFwiKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGl0ZW1SZW5kZXI6IGxpc3RJdGVtUmVuZGVyID0gaXRlbS5nZXRDb21wb25lbnQobGlzdEl0ZW1SZW5kZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBpdGVtSW5kZXggPSBpdGVtUmVuZGVyLml0ZW1JbmRleCAtIGl0ZW1zLmxlbmd0aDtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLml0ZW1JbmRleCA9IGl0ZW1JbmRleDtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLmRhdGEgPSB0aGlzLml0ZW1EYXRhTGlzdFtpdGVtSW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuZGF0YS5pbmRleCA9IGl0ZW1JbmRleDtcclxuICAgICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLmRhdGFDaGFuZ2VkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbS55ID0gaXRlbS55ICsgb2Zmc2V0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubGFzdENvbnRlbnRQb3NZID0gdGhpcy5zY3JvbGxWaWV3LmNvbnRlbnQueTtcclxuICAgIH1cclxuXHJcbiAgICAvKirmsLTlubPmjpLliJcgKi9cclxuICAgIHByaXZhdGUgdWRwYXRlSCgpIHtcclxuICAgICAgICBsZXQgaXRlbXMgPSB0aGlzLml0ZW1MaXN0O1xyXG4gICAgICAgIGxldCBpdGVtO1xyXG4gICAgICAgIGxldCBidWZmZXJab25lID0gdGhpcy5oYWxmU2Nyb2xsVmlldztcclxuICAgICAgICBsZXQgaXNSaWdodCA9IHRoaXMuc2Nyb2xsVmlldy5jb250ZW50LnggPiB0aGlzLmxhc3RDb250ZW50UG9zWDtcclxuICAgICAgICBsZXQgb2Zmc2V0ID0gKHRoaXMuaXRlbVdpZHRoICsgdGhpcy5zcGFjZVgpICogaXRlbXMubGVuZ3RoO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaXRlbSA9IGl0ZW1zW2ldO1xyXG4gICAgICAgICAgICBsZXQgdmlld1BvcyA9IHRoaXMuZ2V0UG9zaXRpb25JblZpZXcoaXRlbSk7XHJcbiAgICAgICAgICAgIGlmIChpc1JpZ2h0KSB7XHJcbiAgICAgICAgICAgICAgICAvL2l0ZW3lj7Pmu5Hml7bvvIzotoXlh7rkuoZzY3JvbGxWaWV35Y+z6L6555WM77yM5bCGaXRlbeenu+WKqOWIsOW3puaWueWkjeeUqO+8jGl0ZW3np7vliqjliLDlt6bmlrnnmoTkvY3nva7lv4XpobvkuI3otoXov4djb250ZW5055qE5bem6L6555WMXHJcbiAgICAgICAgICAgICAgICBpZiAodmlld1Bvcy54ID4gYnVmZmVyWm9uZSAmJiBpdGVtLnggLSBvZmZzZXQgLSB0aGlzLnBhZGRpbmdfbGVmdCA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbVJlbmRlcjogbGlzdEl0ZW1SZW5kZXIgPSBpdGVtLmdldENvbXBvbmVudChsaXN0SXRlbVJlbmRlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGl0ZW1JbmRleCA9IGl0ZW1SZW5kZXIuaXRlbUluZGV4IC0gaXRlbXMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuaXRlbUluZGV4ID0gaXRlbUluZGV4O1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuZGF0YSA9IHRoaXMuaXRlbURhdGFMaXN0W2l0ZW1JbmRleF07XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbVJlbmRlci5kYXRhQ2hhbmdlZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0ueCA9IGl0ZW0ueCAtIG9mZnNldDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vaXRlbeW3pua7keaXtu+8jOi2heWHuuS6hnNjcm9sbFZpZXflt6bovrnnlYzvvIzlsIZpdGVt56e75Yqo5Yiw5Y+z5pa55aSN55So77yMaXRlbeenu+WKqOWIsOWPs+aWueeahOS9jee9ruW/hemhu+S4jei2hei/h2NvbnRlbnTnmoTlj7PovrnnlYxcclxuICAgICAgICAgICAgICAgIGlmICh2aWV3UG9zLnggPCAtYnVmZmVyWm9uZSAmJiBpdGVtLnggKyBvZmZzZXQgKyB0aGlzLnBhZGRpbmdfcmlnaHQgPCB0aGlzLmNvbnRlbnQud2lkdGgpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbVJlbmRlcjogbGlzdEl0ZW1SZW5kZXIgPSBpdGVtLmdldENvbXBvbmVudChsaXN0SXRlbVJlbmRlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGl0ZW1JbmRleCA9IGl0ZW1SZW5kZXIuaXRlbUluZGV4ICsgaXRlbXMubGVuZ3RoO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuaXRlbUluZGV4ID0gaXRlbUluZGV4O1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuZGF0YSA9IHRoaXMuaXRlbURhdGFMaXN0W2l0ZW1JbmRleF07XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbVJlbmRlci5kYXRhQ2hhbmdlZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW0ueCA9IGl0ZW0ueCArIG9mZnNldDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmxhc3RDb250ZW50UG9zWCA9IHRoaXMuc2Nyb2xsVmlldy5jb250ZW50Lng7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq572R5qC85Z6C55u05o6S5YiXICovXHJcbiAgICBwcml2YXRlIHVwZGF0ZUdyaWRfVigpIHtcclxuICAgICAgICBsZXQgaXRlbXMgPSB0aGlzLml0ZW1MaXN0O1xyXG4gICAgICAgIGxldCBpdGVtOiBjYy5Ob2RlO1xyXG4gICAgICAgIGxldCBidWZmZXJab25lID0gdGhpcy5oYWxmU2Nyb2xsVmlldztcclxuICAgICAgICBsZXQgaXNVcCA9IHRoaXMuc2Nyb2xsVmlldy5jb250ZW50LnkgPiB0aGlzLmxhc3RDb250ZW50UG9zWTtcclxuICAgICAgICBsZXQgb2Zmc2V0ID0gKHRoaXMuaXRlbUhlaWdodCArIHRoaXMuc3BhY2VZKSAqICh0aGlzLnNwYXduQ291bnQgLyB0aGlzLmdyaWRDb2wpO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaXRlbXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaXRlbSA9IGl0ZW1zW2ldO1xyXG4gICAgICAgICAgICBsZXQgdmlld1BvcyA9IHRoaXMuZ2V0UG9zaXRpb25JblZpZXcoaXRlbSk7XHJcbiAgICAgICAgICAgIGlmIChpc1VwKSB7XHJcbiAgICAgICAgICAgICAgICAvL2l0ZW3kuIrmu5Hml7bvvIzotoXlh7rkuoZzY3JvbGxWaWV35LiK6L6555WM77yM5bCGaXRlbeenu+WKqOWIsOS4i+aWueWkjeeUqO+8jGl0ZW3np7vliqjliLDkuIvmlrnnmoTkvY3nva7lv4XpobvkuI3otoXov4djb250ZW5055qE5LiL6L6555WMXHJcbiAgICAgICAgICAgICAgICBpZiAodmlld1Bvcy55ID4gYnVmZmVyWm9uZSAmJiBpdGVtLnkgLSBvZmZzZXQgLSB0aGlzLnBhZGRpbmdfYnV0dG9tID4gLXRoaXMuY29udGVudC5oZWlnaHQpIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbVJlbmRlcjogbGlzdEl0ZW1SZW5kZXIgPSBpdGVtLmdldENvbXBvbmVudChsaXN0SXRlbVJlbmRlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGl0ZW1JbmRleCA9IGl0ZW1SZW5kZXIuaXRlbUluZGV4ICsgKHRoaXMuc3Bhd25Db3VudCAvIHRoaXMuZ3JpZENvbCkgKiB0aGlzLmdyaWRDb2w7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaXRlbURhdGFMaXN0W2l0ZW1JbmRleF0gIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnkgPSBpdGVtLnkgLSBvZmZzZXQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuaXRlbUluZGV4ID0gaXRlbUluZGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLmRhdGEgPSB0aGlzLml0ZW1EYXRhTGlzdFtpdGVtSW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLmRhdGFDaGFuZ2VkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ub3BhY2l0eSA9IDI1NTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnkgPSBpdGVtLnkgLSBvZmZzZXQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuaXRlbUluZGV4ID0gaXRlbUluZGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLm9wYWNpdHkgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHsvL2l0ZW3kuIvmu5Hml7bvvIzotoXlh7rkuoZzY3JvbGxWaWV35LiL6L6555WM77yM5bCGaXRlbeenu+WKqOWIsOS4iuaWueWkjeeUqO+8jGl0ZW3np7vliqjliLDkuIrmlrnnmoTkvY3nva7lv4XpobvkuI3otoXov4djb250ZW5055qE5LiK6L6555WMXHJcbiAgICAgICAgICAgICAgICBpZiAodmlld1Bvcy55IDwgLWJ1ZmZlclpvbmUgJiYgaXRlbS55ICsgb2Zmc2V0ICsgdGhpcy5wYWRkaW5nX3RvcCA8IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbVJlbmRlcjogbGlzdEl0ZW1SZW5kZXIgPSBpdGVtLmdldENvbXBvbmVudChsaXN0SXRlbVJlbmRlcik7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGl0ZW1JbmRleCA9IGl0ZW1SZW5kZXIuaXRlbUluZGV4IC0gKHRoaXMuc3Bhd25Db3VudCAvIHRoaXMuZ3JpZENvbCkgKiB0aGlzLmdyaWRDb2w7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuaXRlbURhdGFMaXN0W2l0ZW1JbmRleF0gIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnkgPSBpdGVtLnkgKyBvZmZzZXQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuaXRlbUluZGV4ID0gaXRlbUluZGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLmRhdGEgPSB0aGlzLml0ZW1EYXRhTGlzdFtpdGVtSW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtUmVuZGVyLmRhdGFDaGFuZ2VkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ub3BhY2l0eSA9IDI1NTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLnkgPSBpdGVtLnkgKyBvZmZzZXQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuaXRlbUluZGV4ID0gaXRlbUluZGV4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLm9wYWNpdHkgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmxhc3RDb250ZW50UG9zWSA9IHRoaXMuc2Nyb2xsVmlldy5jb250ZW50Lnk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq572R5qC85rC05bmz5o6S5YiXICovXHJcbiAgICBwcml2YXRlIHVwZGF0ZUdyaWRfSCgpIHtcclxuICAgICAgICBsZXQgaXRlbXMgPSB0aGlzLml0ZW1MaXN0O1xyXG4gICAgICAgIGxldCBpdGVtO1xyXG4gICAgICAgIGxldCBidWZmZXJab25lID0gdGhpcy5oYWxmU2Nyb2xsVmlldztcclxuICAgICAgICBsZXQgaXNSaWdodCA9IHRoaXMuc2Nyb2xsVmlldy5jb250ZW50LnggPiB0aGlzLmxhc3RDb250ZW50UG9zWDtcclxuICAgICAgICBsZXQgb2Zmc2V0ID0gKHRoaXMuaXRlbVdpZHRoICsgdGhpcy5zcGFjZVgpICogKHRoaXMuc3Bhd25Db3VudCAvIHRoaXMuZ3JpZFJvdyk7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpdGVtcy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpdGVtID0gaXRlbXNbaV07XHJcbiAgICAgICAgICAgIGxldCB2aWV3UG9zID0gdGhpcy5nZXRQb3NpdGlvbkluVmlldyhpdGVtKTtcclxuICAgICAgICAgICAgaWYgKGlzUmlnaHQpIHtcclxuICAgICAgICAgICAgICAgIC8vaXRlbeWPs+a7keaXtu+8jOi2heWHuuS6hnNjcm9sbFZpZXflj7PovrnnlYzvvIzlsIZpdGVt56e75Yqo5Yiw5bem5pa55aSN55So77yMaXRlbeenu+WKqOWIsOW3puaWueeahOS9jee9ruW/hemhu+S4jei2hei/h2NvbnRlbnTnmoTlt6bovrnnlYxcclxuICAgICAgICAgICAgICAgIGlmICh2aWV3UG9zLnggPiBidWZmZXJab25lICYmIGl0ZW0ueCAtIG9mZnNldCAtIHRoaXMucGFkZGluZ19sZWZ0ID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBpdGVtUmVuZGVyOiBsaXN0SXRlbVJlbmRlciA9IGl0ZW0uZ2V0Q29tcG9uZW50KGxpc3RJdGVtUmVuZGVyKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbUluZGV4ID0gaXRlbVJlbmRlci5pdGVtSW5kZXggLSAodGhpcy5zcGF3bkNvdW50IC8gdGhpcy5ncmlkUm93KSAqIHRoaXMuZ3JpZFJvdztcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5pdGVtRGF0YUxpc3RbaXRlbUluZGV4XSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ueCA9IGl0ZW0ueCAtIG9mZnNldDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbVJlbmRlci5pdGVtSW5kZXggPSBpdGVtSW5kZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuZGF0YSA9IHRoaXMuaXRlbURhdGFMaXN0W2l0ZW1JbmRleF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuZGF0YUNoYW5nZWQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ueCA9IGl0ZW0ueCAtIG9mZnNldDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbVJlbmRlci5pdGVtSW5kZXggPSBpdGVtSW5kZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ub3BhY2l0eSA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy9pdGVt5bem5ruR5pe277yM6LaF5Ye65LqGc2Nyb2xsVmlld+W3pui+ueeVjO+8jOWwhml0ZW3np7vliqjliLDlj7PmlrnlpI3nlKjvvIxpdGVt56e75Yqo5Yiw5Y+z5pa555qE5L2N572u5b+F6aG75LiN6LaF6L+HY29udGVudOeahOWPs+i+ueeVjFxyXG4gICAgICAgICAgICAgICAgaWYgKHZpZXdQb3MueCA8IC1idWZmZXJab25lICYmIGl0ZW0ueCArIG9mZnNldCArIHRoaXMucGFkZGluZ19yaWdodCA8IHRoaXMuY29udGVudC53aWR0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBpdGVtUmVuZGVyOiBsaXN0SXRlbVJlbmRlciA9IGl0ZW0uZ2V0Q29tcG9uZW50KGxpc3RJdGVtUmVuZGVyKTtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgaXRlbUluZGV4ID0gaXRlbVJlbmRlci5pdGVtSW5kZXggKyAodGhpcy5zcGF3bkNvdW50IC8gdGhpcy5ncmlkUm93KSAqIHRoaXMuZ3JpZFJvdztcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5pdGVtRGF0YUxpc3RbaXRlbUluZGV4XSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ueCA9IGl0ZW0ueCArIG9mZnNldDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbVJlbmRlci5pdGVtSW5kZXggPSBpdGVtSW5kZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuZGF0YSA9IHRoaXMuaXRlbURhdGFMaXN0W2l0ZW1JbmRleF07XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1SZW5kZXIuZGF0YUNoYW5nZWQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5vcGFjaXR5ID0gMjU1O1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ueCA9IGl0ZW0ueCArIG9mZnNldDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaXRlbVJlbmRlci5pdGVtSW5kZXggPSBpdGVtSW5kZXg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ub3BhY2l0eSA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubGFzdENvbnRlbnRQb3NYID0gdGhpcy5zY3JvbGxWaWV3LmNvbnRlbnQueDtcclxuICAgIH1cclxuXHJcbiAgICAvKirojrflj5ZpdGVt5Zyoc2Nyb2xsVmlld+eahOWxgOmDqOWdkOaghyAqL1xyXG4gICAgcHJpdmF0ZSBnZXRQb3NpdGlvbkluVmlldyhpdGVtKSB7XHJcbiAgICAgICAgbGV0IHdvcmxkUG9zID0gaXRlbS5wYXJlbnQuY29udmVydFRvV29ybGRTcGFjZUFSKGl0ZW0ucG9zaXRpb24pO1xyXG4gICAgICAgIGxldCB2aWV3UG9zID0gdGhpcy5zY3JvbGxWaWV3Lm5vZGUuY29udmVydFRvTm9kZVNwYWNlQVIod29ybGRQb3MpO1xyXG4gICAgICAgIHJldHVybiB2aWV3UG9zO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKuiOt+WPluWIl+ihqOaVsOaNriAqL1xyXG4gICAgcHVibGljIGdldExpc3REYXRhKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLml0ZW1EYXRhTGlzdDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWinuWKoOS4gOmhueaVsOaNruWIsOWIl+ihqOeahOacq+WwvlxyXG4gICAgICogQHBhcmFtIGRhdGEg5pWw5o2uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhZGRJdGVtKGRhdGE6IGFueSkge1xyXG4gICAgICAgIHRoaXMuaXRlbURhdGFMaXN0LnB1c2goZGF0YSk7XHJcbiAgICAgICAgdGhpcy51cGRhdGVDb250ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlop7liqDkuIDpobnmlbDmja7liLDliJfooajmjIflrprkvY3nva5cclxuICAgICAqIEBwYXJhbSBpbmRleCAgIOS9jee9ru+8jDDooajnpLrnrKwx6aG5XHJcbiAgICAgKiBAcGFyYW0gZGF0YSAg5pWw5o2uXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhZGRJdGVtQXQoaW5kZXg6IG51bWJlciwgZGF0YTogYW55KSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXRlbURhdGFMaXN0W2luZGV4XSAhPSBudWxsIHx8IHRoaXMuaXRlbURhdGFMaXN0Lmxlbmd0aCA9PSBpbmRleCkge1xyXG4gICAgICAgICAgICB0aGlzLml0ZW1EYXRhTGlzdC5zcGxpY2UoaW5kZXgsIDEsIGRhdGEpO1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZUNvbnRlbnQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliKDpmaTkuIDpobnmlbDmja5cclxuICAgICAqIEBwYXJhbSBpbmRleCDliKDpmaTpobnnmoTkvY3nva4gLDDooajnpLrnrKwx6aG5XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBkZWxldGVJdGVtKGluZGV4OiBudW1iZXIpIHtcclxuICAgICAgICBpZiAodGhpcy5pdGVtRGF0YUxpc3RbaW5kZXhdICE9IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy5pdGVtRGF0YUxpc3Quc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVDb250ZW50KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5pS55Y+Y5LiA6aG55pWw5o2uXHJcbiAgICAgKiBAcGFyYW0gaW5kZXggICDkvY3nva4sMOihqOekuuesrDHpoblcclxuICAgICAqIEBwYXJhbSBkYXRhICDmm7/mjaLnmoTmlbDmja5cclxuICAgICAqL1xyXG4gICAgcHVibGljIGNoYW5nZUl0ZW0oaW5kZXg6IG51bWJlciwgZGF0YTogYW55KSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXRlbURhdGFMaXN0W2luZGV4XSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaXRlbURhdGFMaXN0W2luZGV4XSA9IGRhdGE7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlQ29udGVudCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKirojrflj5bnrKzkuIDkuKpJdGVt55qE5L2N572uICovXHJcbiAgICBwcml2YXRlIHVwZGF0ZUNvbnRlbnQoKSB7XHJcbiAgICAgICAgLy/mmL7npLrliJfooajlrp7kvovkuLow5LiqXHJcbiAgICAgICAgaWYgKHRoaXMuaXRlbUxpc3QubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgdGhpcy5jb3VudExpc3RQYXJhbSgpO1xyXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZUxpc3QoMCwgbmV3IGNjLlZlYzIoMCwgMCkpO1xyXG4gICAgICAgICAgICAvL+aYvuekuuWIl+ihqOeahOWunuS+i+S4jeS4ujDkuKrvvIzliJnpnIDopoHph43mlrDmjpLliJdpdGVt5a6e5L6L5pWw57uEXHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMudHlwZSA9PSBMaXN0VHlwZS5WZXJ0aWNhbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pdGVtTGlzdC5zb3J0KChhOiBhbnksIGI6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBiLnkgLSBhLnk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnR5cGUgPT0gTGlzdFR5cGUuSG9yaXpvbnRhbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5pdGVtTGlzdC5zb3J0KChhOiBhbnksIGI6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhLnggLSBiLng7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnR5cGUgPT0gTGlzdFR5cGUuR3JpZCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuc3RhcnRBeGlzID09IFN0YXJ0QXhpc1R5cGUuVmVydGljYWwpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1MaXN0LnNvcnQoKGE6IGFueSwgYjogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhLnggLSBiLng7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtTGlzdC5zb3J0KChhOiBhbnksIGI6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYi55IC0gYS55O1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLnN0YXJ0QXhpcyA9PSBTdGFydEF4aXNUeXBlLkhvcml6b250YWwpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1MaXN0LnNvcnQoKGE6IGFueSwgYjogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBiLnkgLSBhLnk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5pdGVtTGlzdC5zb3J0KChhOiBhbnksIGI6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS54IC0gYi54O1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLmNvdW50TGlzdFBhcmFtKCk7XHJcblxyXG4gICAgICAgICAgICAvL+iOt+WPluesrOS4gOS4qml0ZW3lrp7kvovpnIDopoHmmL7npLrnmoTmlbDmja7ntKLlvJVcclxuICAgICAgICAgICAgdmFyIHN0YXJ0SW5kZXggPSB0aGlzLml0ZW1MaXN0WzBdLmdldENvbXBvbmVudChsaXN0SXRlbVJlbmRlcikuaXRlbUluZGV4O1xyXG5cclxuICAgICAgICAgICAgaWYgKHRoaXMudHlwZSA9PSBMaXN0VHlwZS5HcmlkICYmIHRoaXMuc3RhcnRBeGlzID09IFN0YXJ0QXhpc1R5cGUuVmVydGljYWwpIHtcclxuICAgICAgICAgICAgICAgIHN0YXJ0SW5kZXggKz0gKHN0YXJ0SW5kZXggKyB0aGlzLnNwYXduQ291bnQpICUgdGhpcy5ncmlkQ29sO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMudHlwZSA9PSBMaXN0VHlwZS5HcmlkICYmIHRoaXMuc3RhcnRBeGlzID09IFN0YXJ0QXhpc1R5cGUuSG9yaXpvbnRhbCkge1xyXG4gICAgICAgICAgICAgICAgc3RhcnRJbmRleCArPSAoc3RhcnRJbmRleCArIHRoaXMuc3Bhd25Db3VudCkgJSB0aGlzLmdyaWRSb3c7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vZ2V0U2Nyb2xsT2Zmc2V0KCnlkoxzY3JvbGxUb09mZnNldCgp55qEeOWAvOaYr+ebuOWPjeeahFxyXG4gICAgICAgICAgICB2YXIgb2Zmc2V0OiBjYy5WZWMyID0gdGhpcy5zY3JvbGxWaWV3LmdldFNjcm9sbE9mZnNldCgpO1xyXG4gICAgICAgICAgICBvZmZzZXQueCA9IC0gb2Zmc2V0Lng7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmNyZWF0ZUxpc3Qoc3RhcnRJbmRleCwgb2Zmc2V0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoq6ZSA5q+BICovXHJcbiAgICBwdWJsaWMgb25EZXN0cm95KCkge1xyXG4gICAgICAgIC8v5riF55CG5YiX6KGo6aG5XHJcbiAgICAgICAgbGV0IGxlbiA9IHRoaXMuaXRlbUxpc3QubGVuZ3RoO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGNjLmlzVmFsaWQodGhpcy5pdGVtTGlzdFtpXSwgdHJ1ZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaXRlbUxpc3RbaV0uZGVzdHJveSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaXRlbUxpc3QubGVuZ3RoID0gMDtcclxuICAgICAgICAvL+a4heeQhuWvueixoeaxoFxyXG4gICAgICAgIGxlbiA9IHRoaXMuaXRlbVBvb2wubGVuZ3RoO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGNjLmlzVmFsaWQodGhpcy5pdGVtUG9vbFtpXSwgdHJ1ZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaXRlbVBvb2xbaV0uZGVzdHJveSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaXRlbVBvb2wubGVuZ3RoID0gMDtcclxuICAgICAgICAvL+a4heeQhuWIl+ihqOaVsOaNrlxyXG4gICAgICAgIHRoaXMuaXRlbURhdGFMaXN0Lmxlbmd0aCA9IDA7XHJcbiAgICB9XHJcbn1cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/utils/MyMath.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c5300OuNfNF/pacBA1XtRoz', 'MyMath');
// Script/lightUI/utils/MyMath.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @author light
 *
 */
var MyMath = /** @class */ (function () {
    function MyMath() {
    }
    MyMath.getPersent = function (num1, num2) {
        return Math.ceil((num1 / num2) * 100) + "%";
    };
    MyMath.randomIntRange = function (minNum, maxNum) {
        return (Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum);
    };
    MyMath.getAngle = function (from, to) {
        var dx = to.x - from.x;
        var dy = to.y - from.y;
        //trace(from,to,dx,dy,Math.atan(dx/dy))
        return Math.atan(dx / dy);
    };
    MyMath.getRotationFromAngle = function (angle) {
        //trace(angle,angle*)
        return angle * 180 / Math.PI;
    };
    MyMath.randomInRectangle = function (rect) {
        return new cc.Vec2(MyMath.randomIntRange(rect.x, rect.x + rect.width), MyMath.randomIntRange(rect.y, rect.y + rect.height));
    };
    MyMath.randomFromChange = function () {
        var arg = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arg[_i] = arguments[_i];
        }
    };
    MyMath.randomFrom = function () {
        var arg = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arg[_i] = arguments[_i];
        }
        return arg[MyMath.randomIntRange(0, arg.length)];
    };
    MyMath.randomFromArray = function (arg) {
        return arg[MyMath.randomIntRange(0, arg.length - 1)];
    };
    MyMath.between = function (num, n1, n2) {
        if (n2 > n1) {
            var temp = n1;
            n1 = n2;
            n2 = temp;
        }
        if (num <= n1 && num >= n2)
            return true;
        return false;
    };
    MyMath.sun = function () {
        var arg = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            arg[_i] = arguments[_i];
        }
        var sun = 0;
        for (var i = 0; i < arg.length; i++) {
            sun += arg[i];
        }
        return sun;
    };
    MyMath.countTheSamenumber = function (numbers, num) {
        var count = 0;
        for (var i = 0; i < numbers.length; numbers) {
            if (numbers[i] == num)
                count++;
        }
        return count;
    };
    MyMath.countTheSamestring = function (numbers, str) {
        var count = 0;
        for (var i = 0; i < numbers.length; numbers) {
            if (numbers[i] == str)
                count++;
        }
        return count;
    };
    MyMath.getPointDistance = function (p1, p2) {
        var dx = p2.x - p1.x;
        var dy = p2.y - p1.y;
        return Math.sqrt(dx * dx + dy * dy);
    };
    //数组元素叠加 [1,2,3,4,,] -> [1,3,6,10,,,,]
    MyMath.arrOverAdd = function (arr) {
        if (!arr || arr.length <= 0) {
            return [];
        }
        else {
            var temp = [];
            for (var i = 0; i < arr.length; i++) {
                if (i == 0) {
                    temp[i] = arr[i];
                }
                else {
                    temp[i] = temp[i - 1] + arr[i];
                }
            }
            return temp;
        }
    };
    MyMath.getAreaIndex = function (num, arr) {
        var item;
        for (var i = 0; i < arr.length; i++) {
            item = arr[i];
            if (num >= item[0] && num <= item[1])
                return i;
        }
        return -1;
    };
    /**
     * 获取数组中最接近的值得index
     * @param random 随机数
     * @param weightArray 权重数组
     * @returns {number}
     */
    MyMath.getArrIndex = function (random, weightArray) {
        var index = 0;
        if (random <= weightArray[0]) {
            return 0;
        }
        else if (random >= weightArray[weightArray.length - 1]) {
            index = weightArray.length - 1;
            return index;
        }
        else {
            for (var i = 0; i < weightArray.length; i++) {
                if (random <= weightArray[i]) {
                    index = i;
                }
                else if (random > weightArray[i] && random <= weightArray[i + 1]) {
                    index = i + 1;
                    break;
                }
                else if (random > weightArray[i] && random <= weightArray[i + 1]) {
                    index = i + 1;
                    break;
                }
            }
        }
        return index;
    };
    MyMath.getRandomByWight = function (weightArr) {
        weightArr = this.arrOverAdd(weightArr);
        var totalWeight = weightArr[weightArr.length - 1];
        var random = Math.random() * totalWeight;
        var arrIndex = this.getArrIndex(random, weightArr);
        return arrIndex;
    };
    MyMath.map2arr = function (map) {
        var re = [];
        for (var k in map) {
            re.push(map[k]);
        }
        return re;
    };
    MyMath.bigNumberChange = function (num, fractionDigits) {
        if (fractionDigits === void 0) { fractionDigits = 0; }
        var re = num.toString();
        if (num > 10000) {
            num = num / 10000;
            num.toFixed(fractionDigits);
            re = num + "W";
        }
        return re;
    };
    MyMath.formatDate = function (date, fmt) {
        var o = {
            "M+": date.getMonth() + 1,
            "d+": date.getDate(),
            "h+": date.getHours(),
            "m+": date.getMinutes(),
            "s+": date.getSeconds(),
            "q+": Math.floor((date.getMonth() + 3) / 3),
            "S": date.getMilliseconds() //毫秒 
        };
        if (/(y+)/.test(fmt)) {
            fmt = fmt.replace(RegExp.$1, (date.getFullYear() + "").substr(4 - RegExp.$1.length));
        }
        for (var k in o) {
            if (new RegExp("(" + k + ")").test(fmt)) {
                fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
            }
        }
        return fmt;
    };
    return MyMath;
}());
exports.default = MyMath;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/netCom.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '101baooNg5FbpOu/JlwFNs6', 'netCom');
// Script/component/netCom.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("./utils");
var gameData_1 = require("./gameData");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var netCom = /** @class */ (function (_super) {
    __extends(netCom, _super);
    function netCom() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.logonData = {
            token: "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjI2MzMxLCJhdWQiOiIiLCJleHAiOjE2NjUxOTgwNTYsImlhdCI6MTY2MjYwNjA1NiwiaXNzIjoiIiwianRpIjoiZTA1NDk1MDM1YzRlMDU5YzY5ZTM2YTYxM2NiMWZkMDAiLCJuYmYiOjE2NjI2MDYwNTYsInN1YiI6IiJ9.srFfIj36gt8rOYs0a8j2iciQSD7FvuYaWq6ghTmlYiE",
        };
        return _this;
    }
    netCom_1 = netCom;
    netCom.prototype.onLoad = function () {
        netCom_1.instance = this;
        cc.game.addPersistRootNode(this.node);
    };
    netCom.prototype.start = function () {
        var token = utils_1.utils.GetQueryVariable(window.location.href, "token") || netCom_1.instance.logonData.token; //用户token
        gameData_1.gameData.roomData.setTokenData(token);
    };
    netCom.prototype.update = function (dt) {
        // DznSocket.OnMissionUpdate();
    };
    var netCom_1;
    netCom.instance = null;
    netCom = netCom_1 = __decorate([
        ccclass
    ], netCom);
    return netCom;
}(cc.Component));
exports.default = netCom;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxjb21wb25lbnRcXG5ldENvbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxpQ0FBK0I7QUFDL0IsdUNBQXNDO0FBRWhDLElBQUEsS0FBc0IsRUFBRSxDQUFDLFVBQVUsRUFBbEMsT0FBTyxhQUFBLEVBQUUsUUFBUSxjQUFpQixDQUFDO0FBRzFDO0lBQW9DLDBCQUFZO0lBQWhEO1FBQUEscUVBc0JDO1FBcEJHLGVBQVMsR0FBRztZQUNSLEtBQUssRUFBRywwUUFBMFE7U0FDclIsQ0FBQTs7SUFrQkwsQ0FBQztlQXRCb0IsTUFBTTtJQVF2Qix1QkFBTSxHQUFOO1FBQ0ksUUFBTSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDdkIsRUFBRSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELHNCQUFLLEdBQUw7UUFDSSxJQUFJLEtBQUssR0FBRyxhQUFLLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLElBQUksUUFBTSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUEsU0FBUztRQUM5RyxtQkFBUSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELHVCQUFNLEdBQU4sVUFBUSxFQUFTO1FBQ2IsK0JBQStCO0lBQ25DLENBQUM7O0lBZE0sZUFBUSxHQUFVLElBQUksQ0FBQztJQU5iLE1BQU07UUFEMUIsT0FBTztPQUNhLE1BQU0sQ0FzQjFCO0lBQUQsYUFBQztDQXRCRCxBQXNCQyxDQXRCbUMsRUFBRSxDQUFDLFNBQVMsR0FzQi9DO2tCQXRCb0IsTUFBTSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgeyBEem5Tb2NrZXQgfSBmcm9tIFwiLi4vLi4vQ29tbW9uL3NyYy9Eem5Tb2NrZXRcIlxyXG5pbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuL3V0aWxzXCJcclxuaW1wb3J0IHsgZ2FtZURhdGEgfSBmcm9tIFwiLi9nYW1lRGF0YVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBuZXRDb20gZXh0ZW5kcyBjYy5Db21wb25lbnQgeyAgIFxyXG5cclxuICAgIGxvZ29uRGF0YSA9IHtcclxuICAgICAgICB0b2tlbiA6IFwiQmVhcmVyIGV5SjBlWEFpT2lKS1YxUWlMQ0poYkdjaU9pSklVekkxTmlKOS5leUoxYVdRaU9qSTJNek14TENKaGRXUWlPaUlpTENKbGVIQWlPakUyTmpVeE9UZ3dOVFlzSW1saGRDSTZNVFkyTWpZd05qQTFOaXdpYVhOeklqb2lJaXdpYW5ScElqb2laVEExTkRrMU1ETTFZelJsTURVNVl6WTVaVE0yWVRZeE0yTmlNV1prTURBaUxDSnVZbVlpT2pFMk5qSTJNRFl3TlRZc0luTjFZaUk2SWlKOS5zckZmSWozNmd0OHJPWXMwYThqMmljaVFTRDdGdnVZYVdxNmdoVG1sWWlFXCIsXHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGluc3RhbmNlOm5ldENvbSA9IG51bGw7XHJcblxyXG4gICAgb25Mb2FkKCl7XHJcbiAgICAgICAgbmV0Q29tLmluc3RhbmNlID0gdGhpcztcclxuICAgICAgICBjYy5nYW1lLmFkZFBlcnNpc3RSb290Tm9kZSh0aGlzLm5vZGUpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXJ0KCl7XHJcbiAgICAgICAgbGV0IHRva2VuID0gdXRpbHMuR2V0UXVlcnlWYXJpYWJsZSh3aW5kb3cubG9jYXRpb24uaHJlZiwgXCJ0b2tlblwiKSB8fCBuZXRDb20uaW5zdGFuY2UubG9nb25EYXRhLnRva2VuOy8v55So5oi3dG9rZW5cclxuICAgICAgICBnYW1lRGF0YS5yb29tRGF0YS5zZXRUb2tlbkRhdGEodG9rZW4pO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZSAoZHQ6bnVtYmVyKSB7XHJcbiAgICAgICAgLy8gRHpuU29ja2V0Lk9uTWlzc2lvblVwZGF0ZSgpO1xyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcblxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/utils/CocosTool.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'c27ffMVlLtLlLSYPvs86rj0', 'CocosTool');
// Script/lightUI/utils/CocosTool.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CocosTool = /** @class */ (function () {
    function CocosTool() {
    }
    CocosTool.Test = function () {
        console.log("test");
    };
    CocosTool.buttonSetLabel = function (button, label) {
        button.node.getChildByName("Background").getChildByName("Label").getComponent(cc.Label).string = label;
    };
    CocosTool.buttonSetSouce = function (button, label) {
        // button.node.getChildByName("childname").getComponent(cc.Sprite).spriteFrame.setTexture()
    };
    CocosTool.rebackToPool = function (items, pool) {
        for (var i = 0; i < items.length; i++) {
            pool.put(items[i]);
        }
    };
    CocosTool.spriteSetImgByUrl = function (sp, url, isUserHead, complete) {
        if (isUserHead === void 0) { isUserHead = true; }
        if (complete === void 0) { complete = null; }
        // if (!url) return;
        if (!isUserHead && !url)
            return;
        if (url == "" || url == null)
            url = "core/mainscene/head/head_default.png";
        var remot = (url.indexOf("http") == 0);
        if (remot == true) {
            cc.loader.load(url + '?aaa=aa.jpg', function (err, texture) {
                var sprite = new cc.SpriteFrame(texture);
                sp.spriteFrame = sprite;
                if (complete)
                    complete();
            });
        }
        else {
            cc.loader.loadRes(url, function (err, texture) {
                var sprite = new cc.SpriteFrame(texture);
                sp.spriteFrame = sprite;
                if (complete)
                    complete();
            });
        }
    };
    CocosTool.cleatWidget = function (node) {
        var widget = node.getComponent(cc.Widget);
        widget.left = widget.right = widget.top = widget.bottom = 0;
    };
    return CocosTool;
}());
exports.default = CocosTool;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFx1dGlsc1xcQ29jb3NUb29sLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7SUFBQTtJQTBDQSxDQUFDO0lBekNpQixjQUFJLEdBQWxCO1FBQ0ksT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRWEsd0JBQWMsR0FBNUIsVUFBNkIsTUFBaUIsRUFBRSxLQUFhO1FBQ3pELE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFlBQVksQ0FBQyxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFDM0csQ0FBQztJQUNhLHdCQUFjLEdBQTVCLFVBQTZCLE1BQWlCLEVBQUUsS0FBYTtRQUN6RCwyRkFBMkY7SUFDL0YsQ0FBQztJQUVhLHNCQUFZLEdBQTFCLFVBQTJCLEtBQXFCLEVBQUUsSUFBaUI7UUFDL0QsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDbkMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN0QjtJQUNMLENBQUM7SUFFYSwyQkFBaUIsR0FBL0IsVUFBZ0MsRUFBYSxFQUFFLEdBQVcsRUFBRSxVQUEwQixFQUFFLFFBQXlCO1FBQXJELDJCQUFBLEVBQUEsaUJBQTBCO1FBQUUseUJBQUEsRUFBQSxlQUF5QjtRQUM3RyxvQkFBb0I7UUFDcEIsSUFBSSxDQUFDLFVBQVUsSUFBSSxDQUFDLEdBQUc7WUFBRSxPQUFPO1FBQ2hDLElBQUksR0FBRyxJQUFJLEVBQUUsSUFBSSxHQUFHLElBQUksSUFBSTtZQUFFLEdBQUcsR0FBRyxzQ0FBc0MsQ0FBQTtRQUMxRSxJQUFJLEtBQUssR0FBWSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUE7UUFDL0MsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFO1lBQ2YsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLGFBQWEsRUFBRSxVQUFVLEdBQUcsRUFBRSxPQUFPO2dCQUN0RCxJQUFJLE1BQU0sR0FBRyxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ3pDLEVBQUUsQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDO2dCQUN4QixJQUFJLFFBQVE7b0JBQUUsUUFBUSxFQUFFLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7U0FDTjthQUFNO1lBQ0gsRUFBRSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFVBQVUsR0FBRyxFQUFFLE9BQU87Z0JBQ3pDLElBQUksTUFBTSxHQUFHLElBQUksRUFBRSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDekMsRUFBRSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUM7Z0JBQ3hCLElBQUksUUFBUTtvQkFBRSxRQUFRLEVBQUUsQ0FBQztZQUM3QixDQUFDLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQztJQUVhLHFCQUFXLEdBQXpCLFVBQTBCLElBQWE7UUFDbkMsSUFBSSxNQUFNLEdBQWMsSUFBSSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDckQsTUFBTSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxHQUFHLEdBQUcsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUNMLGdCQUFDO0FBQUQsQ0ExQ0EsQUEwQ0MsSUFBQSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENvY29zVG9vbCB7XHJcbiAgICBwdWJsaWMgc3RhdGljIFRlc3QoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJ0ZXN0XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgYnV0dG9uU2V0TGFiZWwoYnV0dG9uOiBjYy5CdXR0b24sIGxhYmVsOiBzdHJpbmcpOiB2b2lkIHtcclxuICAgICAgICBidXR0b24ubm9kZS5nZXRDaGlsZEJ5TmFtZShcIkJhY2tncm91bmRcIikuZ2V0Q2hpbGRCeU5hbWUoXCJMYWJlbFwiKS5nZXRDb21wb25lbnQoY2MuTGFiZWwpLnN0cmluZyA9IGxhYmVsO1xyXG4gICAgfVxyXG4gICAgcHVibGljIHN0YXRpYyBidXR0b25TZXRTb3VjZShidXR0b246IGNjLkJ1dHRvbiwgbGFiZWw6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIC8vIGJ1dHRvbi5ub2RlLmdldENoaWxkQnlOYW1lKFwiY2hpbGRuYW1lXCIpLmdldENvbXBvbmVudChjYy5TcHJpdGUpLnNwcml0ZUZyYW1lLnNldFRleHR1cmUoKVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgcmViYWNrVG9Qb29sKGl0ZW1zOiBBcnJheTxjYy5Ob2RlPiwgcG9vbDogY2MuTm9kZVBvb2wpOiB2b2lkIHtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0ZW1zLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHBvb2wucHV0KGl0ZW1zW2ldKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzcHJpdGVTZXRJbWdCeVVybChzcDogY2MuU3ByaXRlLCB1cmw6IHN0cmluZywgaXNVc2VySGVhZDogYm9vbGVhbiA9IHRydWUsIGNvbXBsZXRlOiBGdW5jdGlvbiA9IG51bGwpIHtcclxuICAgICAgICAvLyBpZiAoIXVybCkgcmV0dXJuO1xyXG4gICAgICAgIGlmICghaXNVc2VySGVhZCAmJiAhdXJsKSByZXR1cm47XHJcbiAgICAgICAgaWYgKHVybCA9PSBcIlwiIHx8IHVybCA9PSBudWxsKSB1cmwgPSBcImNvcmUvbWFpbnNjZW5lL2hlYWQvaGVhZF9kZWZhdWx0LnBuZ1wiXHJcbiAgICAgICAgbGV0IHJlbW90OiBib29sZWFuID0gKHVybC5pbmRleE9mKFwiaHR0cFwiKSA9PSAwKVxyXG4gICAgICAgIGlmIChyZW1vdCA9PSB0cnVlKSB7XHJcbiAgICAgICAgICAgIGNjLmxvYWRlci5sb2FkKHVybCArICc/YWFhPWFhLmpwZycsIGZ1bmN0aW9uIChlcnIsIHRleHR1cmUpIHtcclxuICAgICAgICAgICAgICAgIHZhciBzcHJpdGUgPSBuZXcgY2MuU3ByaXRlRnJhbWUodGV4dHVyZSk7XHJcbiAgICAgICAgICAgICAgICBzcC5zcHJpdGVGcmFtZSA9IHNwcml0ZTtcclxuICAgICAgICAgICAgICAgIGlmIChjb21wbGV0ZSkgY29tcGxldGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY2MubG9hZGVyLmxvYWRSZXModXJsLCBmdW5jdGlvbiAoZXJyLCB0ZXh0dXJlKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgc3ByaXRlID0gbmV3IGNjLlNwcml0ZUZyYW1lKHRleHR1cmUpO1xyXG4gICAgICAgICAgICAgICAgc3Auc3ByaXRlRnJhbWUgPSBzcHJpdGU7XHJcbiAgICAgICAgICAgICAgICBpZiAoY29tcGxldGUpIGNvbXBsZXRlKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGNsZWF0V2lkZ2V0KG5vZGU6IGNjLk5vZGUpIHtcclxuICAgICAgICBsZXQgd2lkZ2V0OiBjYy5XaWRnZXQgPSBub2RlLmdldENvbXBvbmVudChjYy5XaWRnZXQpO1xyXG4gICAgICAgIHdpZGdldC5sZWZ0ID0gd2lkZ2V0LnJpZ2h0ID0gd2lkZ2V0LnRvcCA9IHdpZGdldC5ib3R0b20gPSAwO1xyXG4gICAgfVxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/managers/MessageBlock.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'f177cdcZtBEuLbR7suGZb/8', 'MessageBlock');
// Script/lightUI/managers/MessageBlock.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../events/LEvent");
var MessageBlock = /** @class */ (function (_super) {
    __extends(MessageBlock, _super);
    function MessageBlock(blockLength) {
        if (blockLength === void 0) { blockLength = 500; }
        var _this = _super.call(this) || this;
        _this._list = [];
        _this._blockLength = 50;
        _this._blockLength = blockLength;
        return _this;
    }
    MessageBlock.prototype.add = function (msg) {
        if (this._list.length >= this._blockLength)
            return;
        this._list.push(msg);
    };
    MessageBlock.prototype.pop = function (something) {
        var msg = this._list.shift();
        this.dispatchEvent(new LEvent_1.default(LEvent_1.default.POP, msg, false));
    };
    MessageBlock.prototype.getFirst = function () {
        return this._list[0];
    };
    MessageBlock.prototype.clear = function () {
        this._list = [];
    };
    Object.defineProperty(MessageBlock.prototype, "size", {
        get: function () {
            return this._list.length;
        },
        set: function (value) {
            this._blockLength = value;
        },
        enumerable: false,
        configurable: true
    });
    return MessageBlock;
}(cc.EventTarget));
exports.default = MessageBlock;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxtYW5hZ2Vyc1xcTWVzc2FnZUJsb2NrLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUFzQztBQUV0QztJQUEwQyxnQ0FBYztJQUlwRCxzQkFBWSxXQUF3QjtRQUF4Qiw0QkFBQSxFQUFBLGlCQUF3QjtRQUFwQyxZQUNJLGlCQUFPLFNBRVY7UUFOTyxXQUFLLEdBQWMsRUFBRSxDQUFDO1FBQ3RCLGtCQUFZLEdBQVUsRUFBRSxDQUFDO1FBSTdCLEtBQUksQ0FBQyxZQUFZLEdBQUcsV0FBVyxDQUFDOztJQUNwQyxDQUFDO0lBRU0sMEJBQUcsR0FBVixVQUFXLEdBQU87UUFDZCxJQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxZQUFZO1lBQUUsT0FBTztRQUNuRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN4QixDQUFDO0lBRU0sMEJBQUcsR0FBVixVQUFjLFNBQVc7UUFDckIsSUFBSSxHQUFHLEdBQUssSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUMvQixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksZ0JBQU0sQ0FBQyxnQkFBTSxDQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBRU0sK0JBQVEsR0FBZjtRQUNJLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUN6QixDQUFDO0lBRU0sNEJBQUssR0FBWjtRQUNJLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFRCxzQkFBVyw4QkFBSTthQUFmO1lBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztRQUM3QixDQUFDO2FBRUQsVUFBZ0IsS0FBWTtZQUN4QixJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQztRQUM5QixDQUFDOzs7T0FKQTtJQUtMLG1CQUFDO0FBQUQsQ0FsQ0EsQUFrQ0MsQ0FsQ3lDLEVBQUUsQ0FBQyxXQUFXLEdBa0N2RCIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBMRXZlbnQgZnJvbSBcIi4uL2V2ZW50cy9MRXZlbnRcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1lc3NhZ2VCbG9jayBleHRlbmRzIGNjLkV2ZW50VGFyZ2V0e1xyXG4gICAgcHJpdmF0ZSBfbGlzdDpBcnJheTxhbnk+ID0gW107XHJcbiAgICBwcml2YXRlIF9ibG9ja0xlbmd0aDpudW1iZXIgPSA1MDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihibG9ja0xlbmd0aDpudW1iZXIgPSA1MDApe1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5fYmxvY2tMZW5ndGggPSBibG9ja0xlbmd0aDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYWRkKG1zZzphbnkpOnZvaWR7XHJcbiAgICAgICAgaWYodGhpcy5fbGlzdC5sZW5ndGggPj0gdGhpcy5fYmxvY2tMZW5ndGgpIHJldHVybjtcclxuICAgICAgIHRoaXMuX2xpc3QucHVzaChtc2cpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBwb3A8VD4oc29tZXRoaW5nOlQpOnZvaWR7XHJcbiAgICAgICAgbGV0IG1zZzpUID0gdGhpcy5fbGlzdC5zaGlmdCgpO1xyXG4gICAgICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgTEV2ZW50KExFdmVudC5QT1AsbXNnLGZhbHNlKSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldEZpcnN0PFQ+KCk6VHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlzdFswXTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2xlYXIoKXtcclxuICAgICAgICB0aGlzLl9saXN0ID0gW107XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCBzaXplKCk6bnVtYmVye1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9saXN0Lmxlbmd0aDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0IHNpemUodmFsdWU6bnVtYmVyKXtcclxuICAgICAgICB0aGlzLl9ibG9ja0xlbmd0aCA9IHZhbHVlO1xyXG4gICAgfVxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/events/LEvent.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '1e58dIEA9dKVpj7gJtA01f3', 'LEvent');
// Script/lightUI/events/LEvent.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent = /** @class */ (function (_super) {
    __extends(LEvent, _super);
    function LEvent(type, data, bubbles) {
        var _this = _super.call(this, type, bubbles) || this;
        _this.data = data;
        return _this;
    }
    LEvent.SHOW = "show";
    LEvent.CLOSE = "close";
    LEvent.ITEM_CLICK = "ITEM_CLICK";
    LEvent.KEY_BORD = "KEY_BORD";
    LEvent.CHANGED = "CHANGED";
    LEvent.SELECT = "SELECT";
    LEvent.POP = "POP";
    LEvent.COMPLETE = "COMPLETE";
    LEvent.CANCEL = "CANCEL";
    LEvent.CONFIRM = "CONFIRM";
    /**
     * 提交
     */
    LEvent.SUBMIT = "SUBMIT";
    LEvent.ADD_ITEM = "ADD_ITEM";
    LEvent.REMOVE_ITEM = "REMOVE_ITEM";
    LEvent.RESIZE = "RESIZE";
    LEvent.SOFT_KEY_INPUT_COMPLETE = "RESIZE";
    return LEvent;
}(cc.Event));
exports.default = LEvent;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxldmVudHNcXExFdmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtJQUFvQywwQkFBUTtJQStCeEMsZ0JBQVksSUFBWSxFQUFDLElBQVMsRUFBRSxPQUFpQjtRQUFyRCxZQUNJLGtCQUFNLElBQUksRUFBQyxPQUFPLENBQUMsU0FFdEI7UUFERyxLQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQzs7SUFDckIsQ0FBQztJQWhDYSxXQUFJLEdBQVUsTUFBTSxDQUFBO0lBQ3BCLFlBQUssR0FBVSxPQUFPLENBQUM7SUFDdkIsaUJBQVUsR0FBVSxZQUFZLENBQUM7SUFDakMsZUFBUSxHQUFVLFVBQVUsQ0FBQztJQUk3QixjQUFPLEdBQVUsU0FBUyxDQUFDO0lBQzNCLGFBQU0sR0FBVSxRQUFRLENBQUM7SUFFekIsVUFBRyxHQUFVLEtBQUssQ0FBQztJQUVuQixlQUFRLEdBQVUsVUFBVSxDQUFDO0lBQzdCLGFBQU0sR0FBVSxRQUFRLENBQUM7SUFDekIsY0FBTyxHQUFVLFNBQVMsQ0FBQztJQUN6Qzs7T0FFRztJQUNXLGFBQU0sR0FBVSxRQUFRLENBQUM7SUFFaEIsZUFBUSxHQUFVLFVBQVUsQ0FBQztJQUM3QixrQkFBVyxHQUFVLGFBQWEsQ0FBQztJQUVuQyxhQUFNLEdBQVUsUUFBUSxDQUFDO0lBR3pCLDhCQUF1QixHQUFVLFFBQVEsQ0FBQztJQU9yRSxhQUFDO0NBbkNELEFBbUNDLENBbkNtQyxFQUFFLENBQUMsS0FBSyxHQW1DM0M7a0JBbkNvQixNQUFNIiwiZmlsZSI6IiIsInNvdXJjZVJvb3QiOiIvIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTEV2ZW50IGV4dGVuZHMgY2MuRXZlbnR7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBTSE9XOnN0cmluZyA9IFwic2hvd1wiXHJcbiAgICBwdWJsaWMgc3RhdGljIENMT1NFOnN0cmluZyA9IFwiY2xvc2VcIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgSVRFTV9DTElDSzpzdHJpbmcgPSBcIklURU1fQ0xJQ0tcIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgS0VZX0JPUkQ6c3RyaW5nID0gXCJLRVlfQk9SRFwiO1xyXG5cclxuICAgXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBDSEFOR0VEOnN0cmluZyA9IFwiQ0hBTkdFRFwiO1xyXG4gICAgcHVibGljIHN0YXRpYyBTRUxFQ1Q6c3RyaW5nID0gXCJTRUxFQ1RcIjtcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIFBPUDpzdHJpbmcgPSBcIlBPUFwiO1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgQ09NUExFVEU6c3RyaW5nID0gXCJDT01QTEVURVwiO1xyXG4gICAgcHVibGljIHN0YXRpYyBDQU5DRUw6c3RyaW5nID0gXCJDQU5DRUxcIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgQ09ORklSTTpzdHJpbmcgPSBcIkNPTkZJUk1cIjtcclxuICAgIC8qKlxyXG4gICAgICog5o+Q5LqkXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgU1VCTUlUOnN0cmluZyA9IFwiU1VCTUlUXCI7ICAgICAgICBcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFERF9JVEVNOnN0cmluZyA9IFwiQUREX0lURU1cIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgUkVNT1ZFX0lURU06c3RyaW5nID0gXCJSRU1PVkVfSVRFTVwiO1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgUkVTSVpFOnN0cmluZyA9IFwiUkVTSVpFXCI7XHJcblxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgU09GVF9LRVlfSU5QVVRfQ09NUExFVEU6c3RyaW5nID0gXCJSRVNJWkVcIjtcclxuICAgIFxyXG4gICAgcHVibGljIGRhdGE6YW55O1xyXG4gICAgY29uc3RydWN0b3IodHlwZTogc3RyaW5nLGRhdGE/OmFueSwgYnViYmxlcz86IGJvb2xlYW4pe1xyXG4gICAgICAgIHN1cGVyKHR5cGUsYnViYmxlcyk7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgIH1cclxufSJdfQ==
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/managers/LayerManager.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8a843vSVQhGTqpG/YZz03N5', 'LayerManager');
// Script/lightUI/managers/LayerManager.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LayerManager = /** @class */ (function () {
    function LayerManager() {
    }
    LayerManager.prototype.init = function (root) {
        this.popupLayer = root.getChildByName("popupLayer");
        this.sceneLayer = root.getChildByName("sceneLayer");
        this.topLayer = root.getChildByName("topLayer");
    };
    LayerManager.prototype.addScene = function (scene) {
        this.sceneLayer.addChild(scene);
    };
    LayerManager.prototype.removeScene = function (scene) {
        scene.removeFromParent();
    };
    LayerManager.prototype.desdroyScene = function (scene) {
        scene.active = false;
        scene.removeFromParent();
        scene.destroy();
    };
    LayerManager.prototype.showScene = function (scene) {
        scene.active = true;
    };
    LayerManager.prototype.hideScene = function (scene) {
        scene.active = false;
    };
    LayerManager.prototype.removeAll = function () {
        for (var i = 0; i < this.popupLayer.childrenCount; i++) {
            if (i < this.popupLayer.childrenCount - 1)
                this.popupLayer.removeChild(this.popupLayer.children[i]);
        }
    };
    return LayerManager;
}());
exports.default = LayerManager;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxtYW5hZ2Vyc1xcTGF5ZXJNYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7SUFBQTtJQXVDQSxDQUFDO0lBbENVLDJCQUFJLEdBQVgsVUFBWSxJQUFhO1FBQ3JCLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDcEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFTSwrQkFBUSxHQUFmLFVBQWdCLEtBQWM7UUFDMUIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVNLGtDQUFXLEdBQWxCLFVBQW1CLEtBQWM7UUFDN0IsS0FBSyxDQUFDLGdCQUFnQixFQUFFLENBQUM7SUFDN0IsQ0FBQztJQUVNLG1DQUFZLEdBQW5CLFVBQW9CLEtBQWM7UUFDOUIsS0FBSyxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7UUFDckIsS0FBSyxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFDekIsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFFTSxnQ0FBUyxHQUFoQixVQUFpQixLQUFjO1FBQzNCLEtBQUssQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0lBQ3hCLENBQUM7SUFFTSxnQ0FBUyxHQUFoQixVQUFpQixLQUFjO1FBQzNCLEtBQUssQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFDO0lBQ3pCLENBQUM7SUFFTSxnQ0FBUyxHQUFoQjtRQUNJLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNwRCxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsR0FBRyxDQUFDO2dCQUNyQyxJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2hFO0lBQ0wsQ0FBQztJQUNMLG1CQUFDO0FBQUQsQ0F2Q0EsQUF1Q0MsSUFBQSIsImZpbGUiOiIiLCJzb3VyY2VSb290IjoiLyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIExheWVyTWFuYWdlciB7XHJcbiAgICBwdWJsaWMgcG9wdXBMYXllcjogY2MuTm9kZTtcclxuICAgIHB1YmxpYyBzY2VuZUxheWVyOiBjYy5Ob2RlO1xyXG4gICAgcHVibGljIHRvcExheWVyOiBjYy5Ob2RlO1xyXG5cclxuICAgIHB1YmxpYyBpbml0KHJvb3Q6IGNjLk5vZGUpIHtcclxuICAgICAgICB0aGlzLnBvcHVwTGF5ZXIgPSByb290LmdldENoaWxkQnlOYW1lKFwicG9wdXBMYXllclwiKTtcclxuICAgICAgICB0aGlzLnNjZW5lTGF5ZXIgPSByb290LmdldENoaWxkQnlOYW1lKFwic2NlbmVMYXllclwiKTtcclxuICAgICAgICB0aGlzLnRvcExheWVyID0gcm9vdC5nZXRDaGlsZEJ5TmFtZShcInRvcExheWVyXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhZGRTY2VuZShzY2VuZTogY2MuTm9kZSkge1xyXG4gICAgICAgIHRoaXMuc2NlbmVMYXllci5hZGRDaGlsZChzY2VuZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHJlbW92ZVNjZW5lKHNjZW5lOiBjYy5Ob2RlKSB7XHJcbiAgICAgICAgc2NlbmUucmVtb3ZlRnJvbVBhcmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBkZXNkcm95U2NlbmUoc2NlbmU6IGNjLk5vZGUpIHtcclxuICAgICAgICBzY2VuZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICBzY2VuZS5yZW1vdmVGcm9tUGFyZW50KCk7XHJcbiAgICAgICAgc2NlbmUuZGVzdHJveSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzaG93U2NlbmUoc2NlbmU6IGNjLk5vZGUpIHtcclxuICAgICAgICBzY2VuZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBoaWRlU2NlbmUoc2NlbmU6IGNjLk5vZGUpIHtcclxuICAgICAgICBzY2VuZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcmVtb3ZlQWxsKCkge1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5wb3B1cExheWVyLmNoaWxkcmVuQ291bnQ7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAoaSA8IHRoaXMucG9wdXBMYXllci5jaGlsZHJlbkNvdW50IC0gMSlcclxuICAgICAgICAgICAgICAgIHRoaXMucG9wdXBMYXllci5yZW1vdmVDaGlsZCh0aGlzLnBvcHVwTGF5ZXIuY2hpbGRyZW5baV0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/components/alert/LAlertBox.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '8ebbaiIo4ZL4IM3cd98N/WA', 'LAlertBox');
// Script/lightUI/components/alert/LAlertBox.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var LEvent_1 = require("../../events/LEvent");
var LightUI_1 = require("../../LightUI");
var LWindow_1 = require("../LWindow");
var LAlertBox = /** @class */ (function (_super) {
    __extends(LAlertBox, _super);
    function LAlertBox(prefabUrl) {
        var _this = _super.call(this) || this;
        _this.url = prefabUrl;
        LightUI_1.default.loadPrefab(prefabUrl, function (node) {
            _this.window = node;
            _this.addChild(_this.window);
            _this.updataView();
            _this.initWindow();
            _this.window.on(LEvent_1.default.CLOSE, function (e) {
                _this.dispatchEvent(new LEvent_1.default(LEvent_1.default.CLOSE, e.data));
            }, _this);
        });
        return _this;
    }
    LAlertBox.prototype.initWindow = function () {
        var _this = this;
        var btn;
        for (var i = 0; i < this.window.children.length; i++) {
            btn = this.window.children[i].getComponent(cc.Button);
            if (btn != null)
                btn.node.on(cc.Node.EventType.TOUCH_START, function (e) {
                    _this.window.getComponent(LWindow_1.default).close(e.target.name);
                });
        }
    };
    LAlertBox.prototype.updataView = function () {
        this.window.getComponent(LWindow_1.default).setTitle(this._title);
        this.window.getComponent(LWindow_1.default).setMsg(this._msg);
    };
    Object.defineProperty(LAlertBox.prototype, "title", {
        get: function () {
            return this._title;
        },
        set: function (value) {
            this._title = value;
            if (!this.window)
                return;
            this.window.getComponent(LWindow_1.default).setTitle(value);
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(LAlertBox.prototype, "msg", {
        get: function () {
            return this._msg;
        },
        set: function (value) {
            this._msg = value;
            if (!this.window)
                return;
            this.window.getComponent(LWindow_1.default).setMsg(value);
        },
        enumerable: false,
        configurable: true
    });
    return LAlertBox;
}(cc.Node));
exports.default = LAlertBox;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFxjb21wb25lbnRzXFxhbGVydFxcTEFsZXJ0Qm94LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDhDQUF5QztBQUN6Qyx5Q0FBb0M7QUFFcEMsc0NBQWlDO0FBRWpDO0lBQXVDLDZCQUFPO0lBVTFDLG1CQUFZLFNBQWdCO1FBQTVCLFlBQ0ksaUJBQU8sU0FXVjtRQVZHLEtBQUksQ0FBQyxHQUFHLEdBQUcsU0FBUyxDQUFDO1FBQ3JCLGlCQUFPLENBQUMsVUFBVSxDQUFDLFNBQVMsRUFBQyxVQUFDLElBQVk7WUFDdEMsS0FBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7WUFDbkIsS0FBSSxDQUFDLFFBQVEsQ0FBQyxLQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDM0IsS0FBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ2xCLEtBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNsQixLQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxnQkFBTSxDQUFDLEtBQUssRUFBQyxVQUFDLENBQVE7Z0JBQ2pDLEtBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxnQkFBTSxDQUFDLGdCQUFNLENBQUMsS0FBSyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1lBQ3hELENBQUMsRUFBQyxLQUFJLENBQUMsQ0FBQTtRQUNYLENBQUMsQ0FBQyxDQUFDOztJQUNQLENBQUM7SUFFTyw4QkFBVSxHQUFsQjtRQUFBLGlCQVFDO1FBUEcsSUFBSSxHQUFhLENBQUM7UUFDbEIsS0FBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBQztZQUM5QyxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0RCxJQUFHLEdBQUcsSUFBSSxJQUFJO2dCQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBQyxVQUFDLENBQVU7b0JBQ2pFLEtBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLGlCQUFPLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDM0QsQ0FBQyxDQUFDLENBQUE7U0FDTDtJQUNMLENBQUM7SUFFTyw4QkFBVSxHQUFsQjtRQUNJLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLGlCQUFPLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3hELElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLGlCQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hELENBQUM7SUFFRCxzQkFBVyw0QkFBSzthQUFoQjtZQUNJLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUN2QixDQUFDO2FBQ0QsVUFBaUIsS0FBYTtZQUMxQixJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztZQUNwQixJQUFHLENBQUMsSUFBSSxDQUFDLE1BQU07Z0JBQUUsT0FBTTtZQUN2QixJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxpQkFBTyxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RELENBQUM7OztPQUxBO0lBT0Qsc0JBQVcsMEJBQUc7YUFBZDtZQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztRQUNyQixDQUFDO2FBQ0QsVUFBZSxLQUFhO1lBQ3hCLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDO1lBQ2xCLElBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTTtnQkFBRSxPQUFNO1lBQ3ZCLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLGlCQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDcEQsQ0FBQzs7O09BTEE7SUFNTCxnQkFBQztBQUFELENBeERBLEFBd0RDLENBeERzQyxFQUFFLENBQUMsSUFBSSxHQXdEN0MiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTEV2ZW50IGZyb20gXCIuLi8uLi9ldmVudHMvTEV2ZW50XCI7XHJcbmltcG9ydCBMaWdodFVJIGZyb20gXCIuLi8uLi9MaWdodFVJXCI7XHJcbmltcG9ydCBMQ29tcG9uZW50IGZyb20gXCIuLi9MQ29tcG9uZW50XCI7XHJcbmltcG9ydCBMV2luZG93IGZyb20gXCIuLi9MV2luZG93XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMQWxlcnRCb3ggZXh0ZW5kcyBjYy5Ob2Rle1xyXG4gICAgcHVibGljIGRhdGE6YW55O1xyXG4gICAgcHVibGljIHVybDpzdHJpbmc7XHJcbiAgICBwcml2YXRlIHdpbmRvdzpjYy5Ob2RlO1xyXG5cclxuICAgIHByaXZhdGUgX3RpdGxlOiBzdHJpbmc7XHJcbiAgICBcclxuICAgIHByaXZhdGUgX21zZzogc3RyaW5nO1xyXG4gICBcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihwcmVmYWJVcmw6c3RyaW5nKXtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMudXJsID0gcHJlZmFiVXJsO1xyXG4gICAgICAgIExpZ2h0VUkubG9hZFByZWZhYihwcmVmYWJVcmwsKG5vZGU6Y2MuTm9kZSk9PntcclxuICAgICAgICAgICAgdGhpcy53aW5kb3cgPSBub2RlO1xyXG4gICAgICAgICAgICB0aGlzLmFkZENoaWxkKHRoaXMud2luZG93KTtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGFWaWV3KCk7XHJcbiAgICAgICAgICAgIHRoaXMuaW5pdFdpbmRvdygpO1xyXG4gICAgICAgICAgICB0aGlzLndpbmRvdy5vbihMRXZlbnQuQ0xPU0UsKGU6TEV2ZW50KT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBMRXZlbnQoTEV2ZW50LkNMT1NFLGUuZGF0YSkpO1xyXG4gICAgICAgICAgICB9LHRoaXMpXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBpbml0V2luZG93KCl7XHJcbiAgICAgICAgbGV0IGJ0bjpjYy5CdXR0b247XHJcbiAgICAgICAgZm9yKHZhciBpID0gMDsgaTx0aGlzLndpbmRvdy5jaGlsZHJlbi5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgIGJ0biA9IHRoaXMud2luZG93LmNoaWxkcmVuW2ldLmdldENvbXBvbmVudChjYy5CdXR0b24pO1xyXG4gICAgICAgICAgICBpZihidG4gIT0gbnVsbCkgYnRuLm5vZGUub24oY2MuTm9kZS5FdmVudFR5cGUuVE9VQ0hfU1RBUlQsKGU6Y2MuRXZlbnQpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLndpbmRvdy5nZXRDb21wb25lbnQoTFdpbmRvdykuY2xvc2UoZS50YXJnZXQubmFtZSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgdXBkYXRhVmlldygpOnZvaWR7XHJcbiAgICAgICAgdGhpcy53aW5kb3cuZ2V0Q29tcG9uZW50KExXaW5kb3cpLnNldFRpdGxlKHRoaXMuX3RpdGxlKTtcclxuICAgICAgICB0aGlzLndpbmRvdy5nZXRDb21wb25lbnQoTFdpbmRvdykuc2V0TXNnKHRoaXMuX21zZyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldCB0aXRsZSgpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90aXRsZTtcclxuICAgIH1cclxuICAgIHB1YmxpYyBzZXQgdGl0bGUodmFsdWU6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX3RpdGxlID0gdmFsdWU7XHJcbiAgICAgICAgaWYoIXRoaXMud2luZG93KSByZXR1cm5cclxuICAgICAgICB0aGlzLndpbmRvdy5nZXRDb21wb25lbnQoTFdpbmRvdykuc2V0VGl0bGUodmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXQgbXNnKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX21zZztcclxuICAgIH1cclxuICAgIHB1YmxpYyBzZXQgbXNnKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl9tc2cgPSB2YWx1ZTtcclxuICAgICAgICBpZighdGhpcy53aW5kb3cpIHJldHVyblxyXG4gICAgICAgIHRoaXMud2luZG93LmdldENvbXBvbmVudChMV2luZG93KS5zZXRNc2codmFsdWUpO1xyXG4gICAgfVxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/lightUI/utils/Dictionary.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, 'ee007wf6qpDULFlO7CP40sl', 'Dictionary');
// Script/lightUI/utils/Dictionary.ts

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * <code>Dictionary</code> 是一个字典型的数据存取类。
 */
var Dictionary = /** @class */ (function () {
    function Dictionary() {
        this._values = [];
        this._keys = [];
    }
    Object.defineProperty(Dictionary.prototype, "values", {
        /**
         * 获取所有的子元素列表。
         */
        get: function () {
            return this._values;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Dictionary.prototype, "keys", {
        /**
         * 获取所有的子元素键名列表。
         */
        get: function () {
            return this._keys;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * 给指定的键名设置值。
     * @param	key 键名。
     * @param	value 值。
     */
    Dictionary.prototype.set = function (key, value) {
        var index = this.indexOf(key);
        if (index >= 0) {
            this._values[index] = value;
            return;
        }
        this._keys.push(key);
        this._values.push(value);
    };
    /**
     * 获取指定对象的键名索引。
     * @param	key 键名对象。
     * @return 键名索引。
     */
    Dictionary.prototype.indexOf = function (key) {
        var index = this._keys.indexOf(key);
        if (index >= 0)
            return index;
        key = (key instanceof String) ? Number(key) : ((key instanceof Number) ? key.toString() : key);
        return this._keys.indexOf(key);
    };
    /**
     * 返回指定键名的值。
     * @param	key 键名对象。
     * @return 指定键名的值。
     */
    Dictionary.prototype.get = function (key) {
        var index = this.indexOf(key);
        return index < 0 ? null : this._values[index];
    };
    /**
     * 移除指定键名的值。
     * @param	key 键名对象。
     * @return 是否成功移除。
     */
    Dictionary.prototype.remove = function (key) {
        var index = this.indexOf(key);
        if (index >= 0) {
            this._keys.splice(index, 1);
            this._values.splice(index, 1);
            return true;
        }
        return false;
    };
    /**
     * 清除此对象的键名列表和键值列表。
     */
    Dictionary.prototype.clear = function () {
        this._values.length = 0;
        this._keys.length = 0;
    };
    return Dictionary;
}());
exports.default = Dictionary;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxsaWdodFVJXFx1dGlsc1xcRGljdGlvbmFyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOztHQUVHO0FBQ0g7SUFBQTtRQUNZLFlBQU8sR0FBYyxFQUFFLENBQUM7UUFDeEIsVUFBSyxHQUFjLEVBQUUsQ0FBQztJQTJFbEMsQ0FBQztJQXRFRyxzQkFBVyw4QkFBTTtRQUhqQjs7V0FFRzthQUNIO1lBQ0ksT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3hCLENBQUM7OztPQUFBO0lBS0Qsc0JBQVcsNEJBQUk7UUFIZjs7V0FFRzthQUNIO1lBQ0ksT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3RCLENBQUM7OztPQUFBO0lBRUQ7Ozs7T0FJRztJQUNJLHdCQUFHLEdBQVYsVUFBVyxHQUFPLEVBQUUsS0FBUztRQUN6QixJQUFJLEtBQUssR0FBVSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3JDLElBQUksS0FBSyxJQUFJLENBQUMsRUFBRTtZQUNaLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsS0FBSyxDQUFDO1lBQzVCLE9BQU87U0FDVjtRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRDs7OztPQUlHO0lBQ0ksNEJBQU8sR0FBZCxVQUFlLEdBQVU7UUFDckIsSUFBSSxLQUFLLEdBQVUsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDM0MsSUFBSSxLQUFLLElBQUksQ0FBQztZQUFFLE9BQU8sS0FBSyxDQUFDO1FBQzdCLEdBQUcsR0FBRyxDQUFDLEdBQUcsWUFBWSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxZQUFZLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQy9GLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSx3QkFBRyxHQUFWLFVBQVcsR0FBTztRQUNkLElBQUksS0FBSyxHQUFVLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDckMsT0FBTyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEQsQ0FBQztJQUVEOzs7O09BSUc7SUFDSSwyQkFBTSxHQUFiLFVBQWMsR0FBTztRQUNqQixJQUFJLEtBQUssR0FBVSxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3JDLElBQUksS0FBSyxJQUFJLENBQUMsRUFBRTtZQUNaLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztZQUM1QixJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDOUIsT0FBTyxJQUFJLENBQUM7U0FDZjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2pCLENBQUM7SUFFRDs7T0FFRztJQUNJLDBCQUFLLEdBQVo7UUFDSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7UUFDeEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQzFCLENBQUM7SUFDTCxpQkFBQztBQUFELENBN0VBLEFBNkVDLElBQUEiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogPGNvZGU+RGljdGlvbmFyeTwvY29kZT4g5piv5LiA5Liq5a2X5YW45Z6L55qE5pWw5o2u5a2Y5Y+W57G744CCXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaWN0aW9uYXJ5IHtcclxuICAgIHByaXZhdGUgX3ZhbHVlczpBcnJheTxhbnk+ID0gW107XHJcbiAgICBwcml2YXRlIF9rZXlzOkFycmF5PGFueT4gPSBbXTtcclxuICAgIFxyXG4gICAgLyoqXHJcbiAgICAgKiDojrflj5bmiYDmnInnmoTlrZDlhYPntKDliJfooajjgIJcclxuICAgICAqL1xyXG4gICAgcHVibGljIGdldCB2YWx1ZXMoKTpBcnJheTxhbnk+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdmFsdWVzO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluaJgOacieeahOWtkOWFg+e0oOmUruWQjeWIl+ihqOOAglxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0IGtleXMoKTpBcnJheTxhbnk+IHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fa2V5cztcclxuICAgIH1cclxuICAgIFxyXG4gICAgLyoqXHJcbiAgICAgKiDnu5nmjIflrprnmoTplK7lkI3orr7nva7lgLzjgIJcclxuICAgICAqIEBwYXJhbVx0a2V5IOmUruWQjeOAglxyXG4gICAgICogQHBhcmFtXHR2YWx1ZSDlgLzjgIJcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldChrZXk6YW55LCB2YWx1ZTphbnkpOnZvaWQge1xyXG4gICAgICAgIHZhciBpbmRleDpudW1iZXIgPSB0aGlzLmluZGV4T2Yoa2V5KTtcclxuICAgICAgICBpZiAoaW5kZXggPj0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLl92YWx1ZXNbaW5kZXhdID0gdmFsdWU7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fa2V5cy5wdXNoKGtleSk7XHJcbiAgICAgICAgdGhpcy5fdmFsdWVzLnB1c2godmFsdWUpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluaMh+WumuWvueixoeeahOmUruWQjee0ouW8leOAglxyXG4gICAgICogQHBhcmFtXHRrZXkg6ZSu5ZCN5a+56LGh44CCXHJcbiAgICAgKiBAcmV0dXJuIOmUruWQjee0ouW8leOAglxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaW5kZXhPZihrZXk6T2JqZWN0KTpudW1iZXIge1xyXG4gICAgICAgIHZhciBpbmRleDpudW1iZXIgPSB0aGlzLl9rZXlzLmluZGV4T2Yoa2V5KTtcclxuICAgICAgICBpZiAoaW5kZXggPj0gMCkgcmV0dXJuIGluZGV4O1xyXG4gICAgICAgIGtleSA9IChrZXkgaW5zdGFuY2VvZiBTdHJpbmcpID8gTnVtYmVyKGtleSkgOiAoKGtleSBpbnN0YW5jZW9mIE51bWJlcikgPyBrZXkudG9TdHJpbmcoKSA6IGtleSk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2tleXMuaW5kZXhPZihrZXkpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKipcclxuICAgICAqIOi/lOWbnuaMh+WumumUruWQjeeahOWAvOOAglxyXG4gICAgICogQHBhcmFtXHRrZXkg6ZSu5ZCN5a+56LGh44CCXHJcbiAgICAgKiBAcmV0dXJuIOaMh+WumumUruWQjeeahOWAvOOAglxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZ2V0KGtleTphbnkpOmFueSB7XHJcbiAgICAgICAgdmFyIGluZGV4Om51bWJlciA9IHRoaXMuaW5kZXhPZihrZXkpO1xyXG4gICAgICAgIHJldHVybiBpbmRleCA8IDAgPyBudWxsIDogdGhpcy5fdmFsdWVzW2luZGV4XTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLyoqXHJcbiAgICAgKiDnp7vpmaTmjIflrprplK7lkI3nmoTlgLzjgIJcclxuICAgICAqIEBwYXJhbVx0a2V5IOmUruWQjeWvueixoeOAglxyXG4gICAgICogQHJldHVybiDmmK/lkKbmiJDlip/np7vpmaTjgIJcclxuICAgICAqL1xyXG4gICAgcHVibGljIHJlbW92ZShrZXk6YW55KTpCb29sZWFuIHtcclxuICAgICAgICB2YXIgaW5kZXg6bnVtYmVyID0gdGhpcy5pbmRleE9mKGtleSk7XHJcbiAgICAgICAgaWYgKGluZGV4ID49IDApIHtcclxuICAgICAgICAgICAgdGhpcy5fa2V5cy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgICAgICB0aGlzLl92YWx1ZXMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLyoqXHJcbiAgICAgKiDmuIXpmaTmraTlr7nosaHnmoTplK7lkI3liJfooajlkozplK7lgLzliJfooajjgIJcclxuICAgICAqL1xyXG4gICAgcHVibGljIGNsZWFyKCk6dm9pZCB7XHJcbiAgICAgICAgdGhpcy5fdmFsdWVzLmxlbmd0aCA9IDA7XHJcbiAgICAgICAgdGhpcy5fa2V5cy5sZW5ndGggPSAwO1xyXG4gICAgfVxyXG59Il19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/mainLobby.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3b6begdh2tPEZJ1lrU91fxn', 'mainLobby');
// Script/component/mainLobby.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var gameData_1 = require("./gameData");
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var mainLobby = /** @class */ (function (_super) {
    __extends(mainLobby, _super);
    function mainLobby() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.topBar = null;
        _this.playerInfo = null;
        _this.show_layer = null;
        return _this;
    }
    mainLobby_1 = mainLobby;
    mainLobby.prototype.onLoad = function () {
        mainLobby_1.instance = this;
    };
    mainLobby.prototype.start = function () {
        /**请求主页信息
         * 1-玩家信息
         * 2-基础配置信息
         */
        gameData_1.gameData.httpServer.requestMainHomeInfo(function (_a) {
            var code = _a.code, msg = _a.msg, data = _a.data;
            if (code === 0) { //获取成功
                //存储个人信息及其他数据
                gameData_1.gameData.userInfo.setUsereInfo(data.user);
                gameData_1.gameData.userInfo.setDrawCard(data.draw_card);
                gameData_1.gameData.userInfo.setConfigData(data.config);
                //初始化挂在组件
                mainLobby_1.instance.initOtherNodeData(data);
            }
            else {
                console.error("错误信息：" + msg);
            }
        });
        //初始化顶部title模块
        //初始化显示layer模块
    };
    //初始化其他组件信息
    mainLobby.prototype.initOtherNodeData = function (data) {
        //初始化个人信息模块
        mainLobby_1.instance.playerInfo.getComponent('playerInfo').init(data.user);
    };
    mainLobby.prototype.update = function (dt) {
    };
    var mainLobby_1;
    mainLobby.instance = null;
    __decorate([
        property(cc.Node)
    ], mainLobby.prototype, "topBar", void 0);
    __decorate([
        property(cc.Node)
    ], mainLobby.prototype, "playerInfo", void 0);
    __decorate([
        property(cc.Node)
    ], mainLobby.prototype, "show_layer", void 0);
    mainLobby = mainLobby_1 = __decorate([
        ccclass
    ], mainLobby);
    return mainLobby;
}(cc.Component));
exports.default = mainLobby;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxjb21wb25lbnRcXG1haW5Mb2JieS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSx1Q0FBc0M7QUFFaEMsSUFBQSxLQUFzQixFQUFFLENBQUMsVUFBVSxFQUFsQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWlCLENBQUM7QUFHMUM7SUFBdUMsNkJBQVk7SUFBbkQ7UUFBQSxxRUFtREM7UUFqREcsWUFBTSxHQUFZLElBQUksQ0FBQztRQUd2QixnQkFBVSxHQUFZLElBQUksQ0FBQztRQUczQixnQkFBVSxHQUFZLElBQUksQ0FBQzs7SUEyQy9CLENBQUM7a0JBbkRvQixTQUFTO0lBYTFCLDBCQUFNLEdBQU47UUFDSSxXQUFTLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztJQUM5QixDQUFDO0lBRUQseUJBQUssR0FBTDtRQUNJOzs7V0FHRztRQUNGLG1CQUFRLENBQUMsVUFBVSxDQUFDLG1CQUFtQixDQUFDLFVBQUMsRUFBaUI7Z0JBQWhCLElBQUksVUFBQSxFQUFFLEdBQUcsU0FBQSxFQUFFLElBQUksVUFBQTtZQUNyRCxJQUFHLElBQUksS0FBSyxDQUFDLEVBQUMsRUFBQyxNQUFNO2dCQUNsQixhQUFhO2dCQUNiLG1CQUFRLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQzFDLG1CQUFRLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Z0JBQzlDLG1CQUFRLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBRTdDLFNBQVM7Z0JBQ1QsV0FBUyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUM3QztpQkFBSztnQkFDRixPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRSxHQUFHLENBQUMsQ0FBQzthQUMvQjtRQUNOLENBQUMsQ0FBQyxDQUFDO1FBRUgsY0FBYztRQUVkLGNBQWM7SUFDbEIsQ0FBQztJQUVELFdBQVc7SUFDWCxxQ0FBaUIsR0FBakIsVUFBa0IsSUFBdUI7UUFDckMsV0FBVztRQUNYLFdBQVMsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdFLENBQUM7SUFFRCwwQkFBTSxHQUFOLFVBQVEsRUFBUztJQUVqQixDQUFDOztJQXRDTSxrQkFBUSxHQUFjLElBQUksQ0FBQztJQVRsQztRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDOzZDQUNLO0lBR3ZCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUM7aURBQ1M7SUFHM0I7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQztpREFDUztJQVJWLFNBQVM7UUFEN0IsT0FBTztPQUNhLFNBQVMsQ0FtRDdCO0lBQUQsZ0JBQUM7Q0FuREQsQUFtREMsQ0FuRHNDLEVBQUUsQ0FBQyxTQUFTLEdBbURsRDtrQkFuRG9CLFNBQVMiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuL3V0aWxzXCJcclxuaW1wb3J0IHsgZ2FtZURhdGEgfSBmcm9tIFwiLi9nYW1lRGF0YVwiO1xyXG5cclxuY29uc3Qge2NjY2xhc3MsIHByb3BlcnR5fSA9IGNjLl9kZWNvcmF0b3I7XHJcblxyXG5AY2NjbGFzc1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBtYWluTG9iYnkgZXh0ZW5kcyBjYy5Db21wb25lbnQgeyAgIFxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICB0b3BCYXI6IGNjLk5vZGUgPSBudWxsO1xyXG5cclxuICAgIEBwcm9wZXJ0eShjYy5Ob2RlKVxyXG4gICAgcGxheWVySW5mbzogY2MuTm9kZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLk5vZGUpXHJcbiAgICBzaG93X2xheWVyOiBjYy5Ob2RlID0gbnVsbDtcclxuXHJcblxyXG4gICAgc3RhdGljIGluc3RhbmNlOiBtYWluTG9iYnkgPSBudWxsO1xyXG5cclxuICAgIG9uTG9hZCgpe1xyXG4gICAgICAgIG1haW5Mb2JieS5pbnN0YW5jZSA9IHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhcnQoKXtcclxuICAgICAgICAvKiror7fmsYLkuLvpobXkv6Hmga9cclxuICAgICAgICAgKiAxLeeOqeWutuS/oeaBr1xyXG4gICAgICAgICAqIDIt5Z+656GA6YWN572u5L+h5oGvXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgIGdhbWVEYXRhLmh0dHBTZXJ2ZXIucmVxdWVzdE1haW5Ib21lSW5mbygoe2NvZGUsIG1zZywgZGF0YX0pID0+IHsvL2NvZGU6IG51bWJlciwgbXNnOiBzdHJpbmcsIFxyXG4gICAgICAgICAgICAgaWYoY29kZSA9PT0gMCl7Ly/ojrflj5bmiJDlip9cclxuICAgICAgICAgICAgICAgIC8v5a2Y5YKo5Liq5Lq65L+h5oGv5Y+K5YW25LuW5pWw5o2uXHJcbiAgICAgICAgICAgICAgICBnYW1lRGF0YS51c2VySW5mby5zZXRVc2VyZUluZm8oZGF0YS51c2VyKTtcclxuICAgICAgICAgICAgICAgIGdhbWVEYXRhLnVzZXJJbmZvLnNldERyYXdDYXJkKGRhdGEuZHJhd19jYXJkKTtcclxuICAgICAgICAgICAgICAgIGdhbWVEYXRhLnVzZXJJbmZvLnNldENvbmZpZ0RhdGEoZGF0YS5jb25maWcpO1xyXG5cclxuICAgICAgICAgICAgICAgIC8v5Yid5aeL5YyW5oyC5Zyo57uE5Lu2XHJcbiAgICAgICAgICAgICAgICBtYWluTG9iYnkuaW5zdGFuY2UuaW5pdE90aGVyTm9kZURhdGEoZGF0YSk7XHJcbiAgICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIumUmeivr+S/oeaBr++8mlwiKyBtc2cpO1xyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8v5Yid5aeL5YyW6aG26YOodGl0bGXmqKHlnZdcclxuXHJcbiAgICAgICAgLy/liJ3lp4vljJbmmL7npLpsYXllcuaooeWdl1xyXG4gICAgfVxyXG5cclxuICAgIC8v5Yid5aeL5YyW5YW25LuW57uE5Lu25L+h5oGvXHJcbiAgICBpbml0T3RoZXJOb2RlRGF0YShkYXRhOiBhcGlEYXRhLmhvbWVfaW5mbyl7XHJcbiAgICAgICAgLy/liJ3lp4vljJbkuKrkurrkv6Hmga/mqKHlnZdcclxuICAgICAgICBtYWluTG9iYnkuaW5zdGFuY2UucGxheWVySW5mby5nZXRDb21wb25lbnQoJ3BsYXllckluZm8nKS5pbml0KGRhdGEudXNlcik7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlIChkdDpudW1iZXIpIHtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG59XHJcblxyXG5cclxuIl19
//------QC-SOURCE-SPLIT------

                (function() {
                    var nodeEnv = typeof require !== 'undefined' && typeof process !== 'undefined';
                    var __module = nodeEnv ? module : {exports:{}};
                    var __filename = 'preview-scripts/assets/Script/component/playerInfo.js';
                    var __require = nodeEnv ? function (request) {
                        return cc.require(request);
                    } : function (request) {
                        return __quick_compile_project__.require(request, __filename);
                    };
                    function __define (exports, require, module) {
                        if (!nodeEnv) {__quick_compile_project__.registerModule(__filename, module);}"use strict";
cc._RF.push(module, '3bedaDuO5xI2aizBUI4EH2A', 'playerInfo');
// Script/component/playerInfo.ts

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var _a = cc._decorator, ccclass = _a.ccclass, property = _a.property;
var playerInfo = /** @class */ (function (_super) {
    __extends(playerInfo, _super);
    function playerInfo() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.headImg = null;
        _this.nickName = null;
        _this.myScore = null;
        return _this;
    }
    playerInfo_1 = playerInfo;
    playerInfo.prototype.onLoad = function () {
        playerInfo_1.instance = this;
    };
    playerInfo.prototype.start = function () {
    };
    //接口回调成功后初始化信息显示
    playerInfo.prototype.init = function (data) {
        //初始化个人信息
        this.nickName.string = data.nickname;
        this.myScore.string = data.points.toString();
        this.spriteSetImgByUrl(this.headImg, data.avatar);
    };
    playerInfo.prototype.spriteSetImgByUrl = function (sp, url, complete) {
        if (complete === void 0) { complete = null; }
        if (!url)
            return;
        var remot = (url.indexOf("http") == 0);
        if (remot == true) {
            cc.loader.load(url + '?aaa=aa.jpg', function (err, texture) {
                var sprite = new cc.SpriteFrame(texture);
                sp.spriteFrame = sprite;
                if (complete)
                    complete();
            });
        }
        else {
            cc.loader.loadRes(url, function (err, texture) {
                var sprite = new cc.SpriteFrame(texture);
                sp.spriteFrame = sprite;
                if (complete)
                    complete();
            });
        }
    };
    playerInfo.prototype.update = function (dt) {
    };
    var playerInfo_1;
    playerInfo.instance = null;
    __decorate([
        property(cc.Sprite)
    ], playerInfo.prototype, "headImg", void 0);
    __decorate([
        property(cc.Label)
    ], playerInfo.prototype, "nickName", void 0);
    __decorate([
        property(cc.Label)
    ], playerInfo.prototype, "myScore", void 0);
    playerInfo = playerInfo_1 = __decorate([
        ccclass
    ], playerInfo);
    return playerInfo;
}(cc.Component));
exports.default = playerInfo;

cc._RF.pop();
                    }
                    if (nodeEnv) {
                        __define(__module.exports, __require, __module);
                    }
                    else {
                        __quick_compile_project__.registerModuleFunc(__filename, function () {
                            __define(__module.exports, __require, __module);
                        });
                    }
                })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2V0c1xcU2NyaXB0XFxjb21wb25lbnRcXHBsYXllckluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR00sSUFBQSxLQUF3QixFQUFFLENBQUMsVUFBVSxFQUFuQyxPQUFPLGFBQUEsRUFBRSxRQUFRLGNBQWtCLENBQUM7QUFHNUM7SUFBd0MsOEJBQVk7SUFBcEQ7UUFBQSxxRUFtREM7UUFqREcsYUFBTyxHQUFjLElBQUksQ0FBQztRQUcxQixjQUFRLEdBQWEsSUFBSSxDQUFDO1FBRzFCLGFBQU8sR0FBYSxJQUFJLENBQUM7O0lBMkM3QixDQUFDO21CQW5Eb0IsVUFBVTtJQWEzQiwyQkFBTSxHQUFOO1FBQ0ksWUFBVSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7SUFDL0IsQ0FBQztJQUVELDBCQUFLLEdBQUw7SUFFQSxDQUFDO0lBRUQsZ0JBQWdCO0lBQ2hCLHlCQUFJLEdBQUosVUFBSyxJQUF1QjtRQUN4QixTQUFTO1FBQ1QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQzdDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRU0sc0NBQWlCLEdBQXhCLFVBQXlCLEVBQWEsRUFBRSxHQUFXLEVBQUUsUUFBeUI7UUFBekIseUJBQUEsRUFBQSxlQUF5QjtRQUMxRSxJQUFJLENBQUMsR0FBRztZQUFFLE9BQU87UUFDakIsSUFBSSxLQUFLLEdBQVksQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFBO1FBQy9DLElBQUksS0FBSyxJQUFJLElBQUksRUFBRTtZQUNmLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsR0FBRyxhQUFhLEVBQUUsVUFBVSxHQUFHLEVBQUUsT0FBTztnQkFDdEQsSUFBSSxNQUFNLEdBQUcsSUFBSSxFQUFFLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUN6QyxFQUFFLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQztnQkFDeEIsSUFBSSxRQUFRO29CQUFFLFFBQVEsRUFBRSxDQUFDO1lBQzdCLENBQUMsQ0FBQyxDQUFDO1NBQ047YUFBTTtZQUNILEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxVQUFVLEdBQUcsRUFBRSxPQUFPO2dCQUN6QyxJQUFJLE1BQU0sR0FBRyxJQUFJLEVBQUUsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7Z0JBQ3pDLEVBQUUsQ0FBQyxXQUFXLEdBQUcsTUFBTSxDQUFDO2dCQUN4QixJQUFJLFFBQVE7b0JBQUUsUUFBUSxFQUFFLENBQUM7WUFDN0IsQ0FBQyxDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7SUFFRCwyQkFBTSxHQUFOLFVBQU8sRUFBVTtJQUVqQixDQUFDOztJQXRDTSxtQkFBUSxHQUFlLElBQUksQ0FBQztJQVRuQztRQURDLFFBQVEsQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDOytDQUNNO0lBRzFCO1FBREMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7Z0RBQ087SUFHMUI7UUFEQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQzsrQ0FDTTtJQVJSLFVBQVU7UUFEOUIsT0FBTztPQUNhLFVBQVUsQ0FtRDlCO0lBQUQsaUJBQUM7Q0FuREQsQUFtREMsQ0FuRHVDLEVBQUUsQ0FBQyxTQUFTLEdBbURuRDtrQkFuRG9CLFVBQVUiLCJmaWxlIjoiIiwic291cmNlUm9vdCI6Ii8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1dGlscyB9IGZyb20gXCIuL3V0aWxzXCJcclxuaW1wb3J0IHsgZ2FtZURhdGEgfSBmcm9tIFwiLi9nYW1lRGF0YVwiO1xyXG5cclxuY29uc3QgeyBjY2NsYXNzLCBwcm9wZXJ0eSB9ID0gY2MuX2RlY29yYXRvcjtcclxuXHJcbkBjY2NsYXNzXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIHBsYXllckluZm8gZXh0ZW5kcyBjYy5Db21wb25lbnQge1xyXG4gICAgQHByb3BlcnR5KGNjLlNwcml0ZSlcclxuICAgIGhlYWRJbWc6IGNjLlNwcml0ZSA9IG51bGw7XHJcblxyXG4gICAgQHByb3BlcnR5KGNjLkxhYmVsKVxyXG4gICAgbmlja05hbWU6IGNjLkxhYmVsID0gbnVsbDtcclxuXHJcbiAgICBAcHJvcGVydHkoY2MuTGFiZWwpXHJcbiAgICBteVNjb3JlOiBjYy5MYWJlbCA9IG51bGw7XHJcblxyXG5cclxuICAgIHN0YXRpYyBpbnN0YW5jZTogcGxheWVySW5mbyA9IG51bGw7XHJcblxyXG4gICAgb25Mb2FkKCkge1xyXG4gICAgICAgIHBsYXllckluZm8uaW5zdGFuY2UgPSB0aGlzO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXJ0KCkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvL+aOpeWPo+Wbnuiwg+aIkOWKn+WQjuWIneWni+WMluS/oeaBr+aYvuekulxyXG4gICAgaW5pdChkYXRhOiBhcGlEYXRhLnVzZXJfaW5mbykge1xyXG4gICAgICAgIC8v5Yid5aeL5YyW5Liq5Lq65L+h5oGvXHJcbiAgICAgICAgdGhpcy5uaWNrTmFtZS5zdHJpbmcgPSBkYXRhLm5pY2tuYW1lO1xyXG4gICAgICAgIHRoaXMubXlTY29yZS5zdHJpbmcgPSBkYXRhLnBvaW50cy50b1N0cmluZygpO1xyXG4gICAgICAgIHRoaXMuc3ByaXRlU2V0SW1nQnlVcmwodGhpcy5oZWFkSW1nLCBkYXRhLmF2YXRhcik7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNwcml0ZVNldEltZ0J5VXJsKHNwOiBjYy5TcHJpdGUsIHVybDogc3RyaW5nLCBjb21wbGV0ZTogRnVuY3Rpb24gPSBudWxsKSB7XHJcbiAgICAgICAgaWYgKCF1cmwpIHJldHVybjtcclxuICAgICAgICBsZXQgcmVtb3Q6IGJvb2xlYW4gPSAodXJsLmluZGV4T2YoXCJodHRwXCIpID09IDApXHJcbiAgICAgICAgaWYgKHJlbW90ID09IHRydWUpIHtcclxuICAgICAgICAgICAgY2MubG9hZGVyLmxvYWQodXJsICsgJz9hYWE9YWEuanBnJywgZnVuY3Rpb24gKGVyciwgdGV4dHVyZSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHNwcml0ZSA9IG5ldyBjYy5TcHJpdGVGcmFtZSh0ZXh0dXJlKTtcclxuICAgICAgICAgICAgICAgIHNwLnNwcml0ZUZyYW1lID0gc3ByaXRlO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbXBsZXRlKSBjb21wbGV0ZSgpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjYy5sb2FkZXIubG9hZFJlcyh1cmwsIGZ1bmN0aW9uIChlcnIsIHRleHR1cmUpIHtcclxuICAgICAgICAgICAgICAgIHZhciBzcHJpdGUgPSBuZXcgY2MuU3ByaXRlRnJhbWUodGV4dHVyZSk7XHJcbiAgICAgICAgICAgICAgICBzcC5zcHJpdGVGcmFtZSA9IHNwcml0ZTtcclxuICAgICAgICAgICAgICAgIGlmIChjb21wbGV0ZSkgY29tcGxldGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZShkdDogbnVtYmVyKSB7XHJcblxyXG4gICAgfVxyXG4gICAgXHJcbn1cclxuXHJcblxyXG4iXX0=
//------QC-SOURCE-SPLIT------
